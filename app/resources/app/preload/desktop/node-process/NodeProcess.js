const{spawn:spawn}=require("child_process"),{EventEmitter:EventEmitter}=require("events"),path=require("path"),{getLogPath:getLogPath,getExecPath:getExecPath,getEntryModulePath:getEntryModulePath}=require("./pathUtils");function getStartUpModule(){return path.resolve(__dirname,"startup.js")}function getEnv(e,t,s){const r=getLogPath();return{...s.env||process.env,pm_name:t,pm_logPath:r,pm_entryModule:getEntryModulePath(e),ELECTRON_RUN_AS_NODE:1}}function getExecArgV(e={inspect:!1}){const t=[];return e.inspect&&t.push("--inspect"),t.push(getStartUpModule()),t}class NodeProcess extends EventEmitter{constructor(e,t,s){super(),this._execPath=getExecPath(),this._execArgV=getExecArgV(s),this.logPath=getLogPath(),this.name=t,this.entryModule=e,this._spawnedProcess=spawn(this._execPath,this._execArgV,{stdio:["pipe","pipe","pipe","ipc"],env:getEnv(e,t,s)}),process.on("exit",(()=>{this.kill()})),this.on("error",(e=>{pm.logger.error(`NodeProcess~Something wrong while start/killing the NodeProcess '${this.name}'`,e)})),this._spawnedProcess.on("error",(e=>{this.emit("error",e)})),this._spawnedProcess.on("exit",((e,t)=>{0!==e&&(pm.logger.info(`NodeProcess~subprocess exited with code: ${e}`),t&&pm.logger.info(`in response to signal ${t}`)),this.emit("exit",e,t)})),this._spawnedProcess.on("message",(e=>{e.channel&&"ready"===e.channel&&this.emit("ready")}))}onReady(e){return this.on("ready",e),()=>{this.removeListener("ready",e)}}onError(e){return this.on("error",e),()=>{this.removeListener("error",e)}}onExit(e){return this.on("exit",e),()=>{this.removeListener("exit",e)}}kill(){return!!this._spawnedProcess&&(this._spawnedProcess.connected&&this._spawnedProcess.disconnect(),this._spawnedProcess.kill())}isKilled(){return this._spawnedProcess.killed}}module.exports={NodeProcess:NodeProcess};