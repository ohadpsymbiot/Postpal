const os=require("os"),fs=require("fs"),path=require("path"),{Originator:Originator,Collectors:Collectors}=require("@postman/app-logger"),Logger={init(o){let e=Collectors.File,r=Collectors.Console,i=o.origin,s=process.pid,g=[],t=o.logPath;fs.mkdir(t,{recursive:!0},(l=>{try{if(l)throw l;g=[new e({file:path.resolve(t,`${i}.log`)})],"production"!==process.env.PM_BUILD_ENV&&g.push(new r),pm.logger=new Originator({origin:i,collectors:g,sessionId:s})}catch(o){pm.logger=console,pm.logger.getContext=function(o,e){return{api:o,domain:e}},pm.logger.error("Logger - Logger initialization failed",o)}pm.logger.info(`Logger - Booting Node process( pid: ${process.pid} ) ${o.origin} ${os.platform()}-${os.release()} on ${os.arch()}`)}))}};module.exports=Logger;