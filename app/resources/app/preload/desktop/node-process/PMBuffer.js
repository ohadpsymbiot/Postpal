function writeUInt32BE(e,t,f){e[f+3]=t,t>>>=8,e[f+2]=t,t>>>=8,e[f+1]=t,t>>>=8,e[f]=t}function readUInt32BE(e,t){return e[t]*2**24+65536*e[t+1]+256*e[t+2]+e[t+3]}class PMBuffer{static alloc(e){return new PMBuffer(Buffer.allocUnsafe(e))}static wrap(e){return Buffer.isBuffer(e)||(e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)),new PMBuffer(e)}static concat(e,t){if(void 0===t){t=0;for(let f=0,r=e.length;f<r;f++)t+=e[f].byteLength}const f=PMBuffer.alloc(t);let r=0;for(let t=0,n=e.length;t<n;t++){const n=e[t];f.set(n,r),r+=n.byteLength}return f}constructor(e){this.buffer=e,this.byteLength=this.buffer.byteLength}slice(e=0,t){return new PMBuffer(this.buffer.subarray(e,t))}set(e,t){e instanceof PMBuffer?this.buffer.set(e.buffer,t):this.buffer.set(e,t)}readUInt32BE(e){return readUInt32BE(this.buffer,e)}writeUInt32BE(e,t){writeUInt32BE(this.buffer,e,t)}}module.exports={PMBuffer:PMBuffer};