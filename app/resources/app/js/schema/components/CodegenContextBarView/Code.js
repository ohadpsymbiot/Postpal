"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[150],{"./api-dev/components/api-version/context-bar/api-source-control/APISourceControlContextBarView/SourceControlUtils.js":function(e,t,n){n.r(t),n.d(t,{API_SOURCE_CONTROL:function(){return r},getRepoLinkedAPI:function(){return i},getRepoStoreForGitLinkedAPI:function(){return l}});var a=n("./js/stores/StoreManager.js"),o=n("./api-dev/stores/APIListStore.js"),s=n("./node_modules/lodash/lodash.js");const r="api-version-source-control";function i(e,t){if(!e||!t)return null;const n=(0,a.resolveStoreInstance)(o.default);if(!n.isLoaded)return null;let r=null;for(const a of n.values){const n=a.childEntities.values[0],o=s.get(n,"apiRepositoryStore"),i=s.get(o,"apiVersionRepositoryInterface");if(s.get(i,"isAvailable")&&s.get(i,"remoteGitConfigured")&&"collections"===t){const t=s.get(o,"entityHandlers.collections.collectionFileIdAgainstPath");if(!s.isEmpty(t)&&t.has(e)){r=o;break}}}return r}function l(e){if(!e)return null;const t=(0,a.resolveStoreInstance)(o.default);if(!t.isLoaded)return null;const n=t.find(e),r=s.head(n.childEntities.values).id,i=n.childEntities.find(r),l=s.get(i,"apiRepositoryStore");return s.get(l,"apiVersionRepositoryInterface.remoteGitConfigured")?l:null}},"./integrations/services/CodegenService.js":function(e,t,n){n.r(t);var a=n("./js/modules/services/RemoteSyncRequestService.js"),o=n("./js/stores/StoreManager.js"),s=n("./js/stores/SyncStatusStore.js"),r=n("./node_modules/lodash/lodash.js");async function i(e,t,n){return a.default.request("/ws/proxy",{method:"post",data:{service:"codegen",method:t,body:n,path:e}})}t.default={getTemplates:async function(){await(0,o.resolveStoreInstance)(s.default).onSyncAvailable({timeout:8e3});const e=await i("/artifacts/server-code/options","get");return r.get(e,"body.templates")},generate:async function({apiId:e,apiVersionId:t,releaseId:n,apiName:a,schemaId:o,language:s,variant:l,contractOnly:d,tagId:c="",resourceId:p="",resourceType:g=""}){const m={apiId:e,apiVersionId:t,releaseId:n,apiName:a,tagId:c,schemaId:o,language:s,variant:l,resourceId:p,resourceType:g,options:[{id:"contract",value:d}]};try{const e=await i("/artifacts/server-code","post",m),t=r.get(e,"body.data.downloadLink");return{url:t,filename:r.get(e,"body.data.filename")}}catch(e){if(e.error)throw e.error;throw e}}}},"./schema/components/CodegenContextBarView/Code.js":function(e,t,n){n.r(t),n.d(t,{default:function(){return N}});var a,o=n("./node_modules/lodash/lodash.js"),s=n.n(o),r=n("../../node_modules/react/index.js"),i=n("../../node_modules/mobx-react/dist/mobx-react.module.js"),l=n("../../packages/api-design/api-definition-store/index.js"),d=n("./js/modules/services/AnalyticsService.js"),c=n("./integrations/services/CodegenService.js"),p=n("./js/stores/CurrentUserStore.js"),g=n("./api-dev/components/api-version/context-bar/api-source-control/APISourceControlContextBarView/SourceControlUtils.js"),m=n("./js/services/NavigationService.js"),u=n("./js/stores/StoreManager.js"),h=n("./js/components/base/Buttons.js"),f=n("./appsdk/components/link/Link.js"),I=n("../../node_modules/@postman/aether/esmLib/src/components/Banner/Banner.js"),v=n("../../node_modules/@postman/aether/esmLib/src/components/CheckBox/Checkbox.js"),E=n("../../node_modules/@postman/aether/esmLib/src/components/Flex/Flex.js"),_=n("../../node_modules/@postman/aether/esmLib/src/components/BlankState/BlankState.js"),S=n("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),y=n("../../node_modules/@postman/aether/esmLib/src/components/Illustration/illustrations/NoAPI.js"),b=n("../../node_modules/@postman/aether/esmLib/src/components/Tag/Tag.js"),C=n("./js/components/base/Dropdowns.js"),w=n("./appsdk/contextbar/ContextBarViewHeader.js"),T=n("./js/components/base/LoadingIndicator.js"),j=n("./js/models/services/filesystem.js"),D=n("../../packages/api-design/schema-editor/index.js"),A=n("./schema/constants/Constants.js");let N=(0,i.observer)(a=class extends r.Component{constructor(e){super(e),this.handleToggleContract=e=>{const{languageSelection:t}=this.state;let n=t.length?t.split("-")[0]:"",a=t.length?t.split("-").slice(1).join("-"):"",o=s().get(this.props,"contextData.editor")?"editor":"release";this.setState({contractOnly:e},(()=>{this.state.contractOnly&&d.default.addEventV2({category:"server_code",action:"options",label:`${o}_${n}_${a}_contract_only`,value:1})}))},this.triggerGenerateCode=async()=>{const{languageSelection:e,contractOnly:t,isRelease:n}=this.state,{apiId:a,versionId:o,releaseId:i,apiName:l,schemaId:g,tagId:m,resourceId:h,resourceType:f}=this.getSchemaProperties(this.props.contextData);let I=e.split("-")[0],v=e.split("-").slice(1).join("-"),E=s().get(this.props,"contextData.editor")?"editor":"release",_=(0,u.resolveStoreInstance)(p.default).isLoggedIn;if(d.default.addEventV2({category:"server_code",action:"generate",label:`${E}_${I}_${v}`,value:1}),!_)return pm.mediator.trigger("showSignInModal",{type:"generateServerCode",origin:"server_code_generate_code_button",continueUrl:new URL(window.location.href)});this.setState({zipUrl:null,filename:null,generating:!0});try{const{url:e,filename:n}=await c.default.generate({apiId:a,apiVersionId:o,releaseId:i,apiName:l,schemaId:g,language:I,variant:v,contractOnly:t,tagId:m,resourceId:h,resourceType:f});this.downloadGeneratedCode(e,n)}catch(e){let t="Unable to generate server boilerplate. Try again later.";e.code&&"parseError"===e.code&&(t=r.createElement("span",null,"Unable to parse the OpenAPI specification. Review errors and warnings in your ",n?"schema definition.":r.createElement("span",{className:"codegen__error-link",onClick:this.navigateToDefineTab},"schema definition."))),this.setState({zipUrl:null,filename:null,generating:!1,showError:!0,errMsg:t}),pm.logger.error(`Codegen~triggerGenerateCode - Error while waiting on response from generating code for ${l} - ${g}: `,e)}},this.downloadGeneratedCode=(e,t)=>{e?fetch(e).then((e=>{e.arrayBuffer().then((e=>{(0,j.saveAndOpenFile)(t,new Uint8Array(e),"application/zip",((e,t)=>{e?(pm.logger.error("Codegen~downloadGeneratedCode - Failed to download generated code.",e),pm.toasts.error("Unable to download generated code"),this.setState({generating:!1})):(this.setState({generating:!1,showError:!1}),t===j.STATE.SUCCESS&&"browser"!==window.SDK_PLATFORM&&pm.toasts.success("The server boilerplate has been successfully downloaded",{title:"Code generated"}))}))}))})).catch((e=>{pm.logger.error("Codegen~downloadGeneratedCode - Failed to download generated code.",e),pm.toasts.error("Unable to download generated code"),this.setState({generating:!1})})):(this.setState({generating:!1,showError:!0,errMsg:"Something went wrong. Please try again."}),pm.logger.error("Codegen~downloadGeneratedCode - Invalid url given for download",e))},this.renderLanguageMenuItems=(e,t)=>{let{templates:n,languageSelection:a}=this.state,o="Select",i=[];if(s().isArray(n))for(let e of n)if(s().isArray(e.variants))for(let t of e.variants){let n=e.key+"-"+t.key;n===a&&(o=e.label+" - "+t.label),i.push(r.createElement(C.MenuItem,{key:n,refKey:n},r.createElement("div",{className:"codegen__dropdown-menu-item-label"},e.label," - ",t.label)))}return r.createElement(C.Dropdown,{className:"codegen__modal-dropdown",onSelect:this.handleDropdownActionSelect,keyMapHandlers:{quit:this.handleEscape}},r.createElement(C.DropdownButton,{type:"secondary",size:"small"},r.createElement(h.Button,{disabled:!e&&t||0===i.length},r.createElement("div",{className:"codegen__selected-label"},o))),r.createElement(C.DropdownMenu,{"align-right":!0,className:"codegen__dropdown-menu"},i))},this.state={showError:!1,zipUrl:"",filename:"",errMsg:"",fetchingTemplates:!0,templates:null,isRelease:!1,contractOnly:!1,languageSelection:0,generating:!1,generateDisabled:!0,definitionModel:null},this.triggerGenerateCode=this.triggerGenerateCode.bind(this),this.downloadGeneratedCode=this.downloadGeneratedCode.bind(this),this.renderCodeSection=this.renderCodeSection.bind(this),this.handleDropdownActionSelect=this.handleDropdownActionSelect.bind(this),this.handleEscape=this.handleEscape.bind(this),this.handleToggleContract=this.handleToggleContract.bind(this),this.navigateToDefineTab=this.navigateToDefineTab.bind(this)}componentDidMount(){(async()=>{try{const e=await c.default.getTemplates();this.setState({templates:e,fetchingTemplates:!1})}catch(e){this.setState({templates:null,showError:!0,fetchingTemplates:!1,errMsg:"Unable to get list of available languages and frameworks."}),pm.logger.error("Codegen~templates - Error while waiting on response from getting templates: ",e)}if("version"===s().get(this.props.contextData,"model.mode.name")){const{releaseId:e,apiId:t,versionId:n,resourceId:a,schemaId:o}=this.getSchemaProperties(this.props.contextData),s=(0,u.resolveStoreInstance)(l.APIDefinitionStore),r=await s.getModelForReleaseId({apiId:t,apiVersionId:n,apiDefinitionId:a||o,releaseId:e});this.setState({isRelease:!0,definitionModel:r})}})();const e=this.getApiType();d.default.addEventV2({category:"server_code",action:"open",label:"editor_"+e,value:1})}getSchemaProperties(e){return s().get(e.model,"activeRelease")?{apiId:s().get(e.model,"api.id"),apiName:s().get(e.model,"api.name"),versionId:s().get(e.model,"apiVersion.id"),schemaId:s().get(e.model,"activeRelease.entities.schemas.0.entityId"),tagId:s().get(e.model,"activeRelease.entities.apiDefinitions.0.tag")?s().get(e.model,"activeRelease.entities.apiDefinitions.0.tag"):s().get(e.model,"activeRelease.entities.schemas.0.tag"),releaseId:s().get(e.model,"activeRelease.id"),resourceId:s().get(e.model,"activeRelease.entities.apiDefinitions.0.entityId")||s().get(e.model,"activeRelease.entities.schemas.0.entityId"),resourceType:s().get(e.model,"activeRelease.entities.apiDefinitions.0.entityId")?A.resourceTypeEnum.APIDEFINITION:A.resourceTypeEnum.SCHEMA}:{apiId:s().get(e,"model.apiId"),apiName:s().get(e,"model.apiName"),versionId:s().get(e,"model.id"),schemaId:s().get(e,"model.schema.schemaId"),tagId:null,resourceId:s().get(e,"model.schema.apiDefinitionId")?s().get(e,"model.schema.apiDefinitionId"):s().get(e,"model.schema.schemaId"),resourceType:s().get(e,"model.schema.isSchema")?A.resourceTypeEnum.SCHEMA:A.resourceTypeEnum.APIDEFINITION}}getApiType(){return this.state.definitionModel&&this.state.isRelease?s().get(this.state.definitionModel,"schemaFormat.apiDefinitionType"):s().get(this.props,"contextData.model.schema.id")?s().get(this.props,"contextData.model.schema.type"):"unknown"}navigateToDefineTab(){const{apiId:e,versionId:t}=this.getSchemaProperties(this.props.contextData);m.default.transitionTo("build.apiVersion",{apiId:e,versionId:t},{tab:"define"},{replace:!0})}handleDropdownActionSelect(e){this.setState({languageSelection:e,generateDisabled:!1,showError:!1})}handleEscape(){this.props.onEscape&&this.props.onEscape()}renderCodeSection(){const{generating:e,generateDisabled:t,contractOnly:n,isRelease:a,fetchingTemplates:o}=this.state,i=this.getApiType();if(!i||o)return r.createElement("div",{className:"codegen__loader"},r.createElement(T.default,null));const l="openapi3"===i||"openapi:3"===i,c=e?"Generating...":"Generate Code",p=a?s().get(this.state.definitionModel,"isSchemaValid"):s().get(this.props,"contextData.schemaValid"),g=!!a||!s().get(this.props,"contextData.model.schema.isDirty"),m=a?s().get(this.state.definitionModel,"isSchemaCreated"):s().get(this.props,"contextData.model.schema.isSchemaCreated"),u=a&&!this.state.definitionModel,E=s().get(this.props,"contextData.model.apiPermissionStore").canGenerateCode,_=s().get(this.props,"contextData.emptyState"),S=_?"No definition published":E?m?g?p?"":"Add a valid definition to generate code from it":"Save your changes before generating code.":"Add a definition to generate code from it":"You do not have permission to perform this action";return r.createElement("div",{className:"codegen__container"},u?r.createElement("div",{className:"codegen__banner"},r.createElement(I.default,null,"Versions need definitions to generate server boilerplates.")):!l&&m&&r.createElement("div",{className:"codegen__banner"},D.SCHEMA_FORMAT_MAP[i]?r.createElement(I.default,null,"Server boilerplate generation is only supported for OpenAPI 3.0 format. ",i?`This API uses ${D.SCHEMA_FORMAT_MAP[i]}.`:""):r.createElement(I.default,null,"Server boilerplate generation is not supported for this API.")),r.createElement("div",{className:!l&&m||u?"codegen__disabled":""},r.createElement("div",{className:"codegen__description"},r.createElement("span",null,"Generate server boilerplate from your API schema. "),r.createElement(f.default,{to:"https://go.pstmn.io/docs-server-boilerplate-api",target:"_blank",onClick:()=>{d.default.addEventV2({category:"server_code",action:"learn_more",label:"docs",value:1})}},r.createElement("span",{className:"codegen__learn-more-link"},"Learn more"))),r.createElement("div",{className:"codegen__generate-text"},"Language and framework"),r.createElement("div",null,this.renderLanguageMenuItems(l,m)),r.createElement("div",{className:"codegen__options-container"},r.createElement(v.default,{isChecked:n,onChange:this.handleToggleContract,isDisabled:!l}),r.createElement("span",{className:"codegen__options-text"},"Only generate routes and interfaces. "),r.createElement(f.default,{to:"https://go.pstmn.io/docs-server-boilerplate-api-contract-only",target:"_blank",onClick:()=>{d.default.addEventV2({category:"server_code",action:"learn_more",label:"docs_contract_only",value:1})}},r.createElement("span",{className:"codegen__learn-more-link"},"Learn more"))),r.createElement("div",{className:"codegen__button-container"},r.createElement(h.Button,{className:"codegen__generate-button",disabled:e||t||!l||!g||!p||!m||!E||_,type:"secondary",tooltip:S,onClick:this.triggerGenerateCode}," ",c," ")),this.state.showError&&r.createElement("div",{className:"codegen__banner"},r.createElement(I.default,{status:"error",onDismiss:()=>this.setState({showError:!1})},this.state.errMsg))))}renderGitLinkedMessagePage(){return r.createElement(E.default,{gap:"spacing-l",className:"git-linked-codegen-container",direction:"column",justifyContent:"center",alignItems:"center",grow:1},r.createElement(_.default,{title:"Code generation is yet to be supported",description:r.createElement(S.default,{type:"para",className:"git-linked-codegen-error-text",lineLengthType:"narrow"},"We’re working towards supporting server boilerplates for APIs connected to repositories.")},r.createElement(y.default,null)))}render(){let{apiId:e}=this.getSchemaProperties(this.props.contextData),t=!!(0,g.getRepoStoreForGitLinkedAPI)(e),n=this.state.isRelease||s().get(this.props.contextData,"model.activeRelease.id");return r.createElement(r.Fragment,null,r.createElement(w.ContextBarViewHeader,{title:r.createElement("span",null,"Code Generation ",r.createElement(b.default,{color:"blue",text:"Beta"})),onClose:this.props.onClose}),t&&!n?this.renderGitLinkedMessagePage():this.renderCodeSection())}})||a},"./schema/constants/Constants.js":function(e,t,n){n.r(t),n.d(t,{INTERMEDIATE_DEFINITION_VIEW:function(){return o},resourceTypeEnum:function(){return a}});const a={APIDEFINITION:"apiDefinition",SCHEMA:"schema"},o={API_NO_PERMISSION:"api-no-permission",API_REDIRECT_CONSUMER_ENTITY:"api-redirect"}}}]);