"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[35],{"./js/components/base/EditableTag.js":function(e,t,s){s.r(t);var n=s("../../node_modules/react/index.js"),o=s("./node_modules/prop-types/index.js"),r=s.n(o),i=s("./js/components/base/Icons/CloseIcon.js"),a=s("./node_modules/classnames/index.js"),l=s.n(a);const c=e=>{return n.createElement("div",{"data-testid":"editable-tag",onClick:e.onClick,className:(t=e.type,s=e.isSelected,l()({"editable-tag":!0,[`editable-tag-${t}`]:!0,"is-selected":s}))},e.content,n.createElement(i.default,{className:"tag-remove-btn",onClick:e.onClose,size:"xs"}));var t,s};c.propTypes={content:r().element,onClose:r().func,onClick:r().func,value:r().string,name:r().string,type:r().oneOf(["regular","error"])},c.defaultProps={onClose:()=>{},onClick:()=>{},type:"regular",name:"tag",value:""},t.default=c},"./js/components/base/Icons/MailIcon.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return a}});var n=s("../../node_modules/react/index.js"),o=s("./js/components/base/Icons/Icon.js");function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n])}return e},r.apply(this,arguments)}const i=n.createElement("svg",{width:"16",height:"10",viewBox:"0 0 16 16"},n.createElement("defs",null,n.createElement("path",{id:"mail",d:"M14.72 3H1.28C.576 3 0 3.563  0 4.25v7.5C0 12.438.576 13 1.28 13h13.44c.704 0 1.28-.563 1.28-1.25v-7.5C16 3.562 15.424 3 14.72 3zm-7.169 7.592l-5.3-4.824a.333.333 0 0 1-.017-.476l.052-.055a.333.333 0 0 1 .466-.017l4.8 4.361a.667.667 0 0 0 .896 0l4.8-4.361a.333.333 0 0 1 .466.017l.052.055a.333.333 0 0 1-.017.476l-5.3 4.824a.667.667 0 0 1-.898 0z"})),n.createElement("use",{fill:"#282828",fillRule:"evenodd",xlinkHref:"#mail"}));function a(e){return n.createElement(o.default,r({},e,{icon:i}))}},"./js/components/permissions/ManageRoles.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return U}});var n,o=s("../../node_modules/react/index.js"),r=s("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),i=s("../../node_modules/@postman/aether/esmLib/src/components/Flex/Flex.js"),a=s("../../node_modules/@postman/aether/esmLib/src/components/Heading/Heading.js"),l=s("../../node_modules/@postman/aether/esmLib/src/components/Dropdown/SingleSelect/SingleSelect.js"),c=s("../../node_modules/@postman/aether/esmLib/src/components/Banner/Banner.js"),d=s("../../node_modules/@postman/aether-icons/esmLib/src/Icon/Icon.js"),m=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-descriptive-team-stroke.js"),u=s("./collaboration/workspace/components/common/WorkspaceList/WorkspaceListItem/WorkspaceListItem.tsx"),p=s("./js/stores/StoreManager.js"),h=s("./js/stores/CurrentUserStore.js"),g=s("./js/components/base/Icons/SuccessIcon.js"),E=s("./js/components/base/Icons/CloseIcon.js"),f=s("./js/components/base/LoadingIndicator.js"),_=s("./js/components/base/Dropdowns.js"),R=s("./js/components/base/Buttons.js"),v=s("./js/components/base/TeamLogo.js"),y=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),T=s("./js/components/base/Icons/InformationIcon.js"),S=s("./version-control/pull-request/components/PullRequestSettings.js"),b=s("./js/external-navigation/ExternalNavigationService.js"),I=s("./js/constants/AppUrlConstants.js"),N=s("./js/constants/ShareFlowConstants.js"),O=s("./js/components/base/Avatar.js"),C=s("./js/utils/PluralizeHelper.js"),L=s("./js/components/permissions/RolesListV2.js"),M=s("./appsdk/components/link/Link.js"),A=s("./iam/constants.js"),j=s("./node_modules/lodash/lodash.js");const w={collection:e=>o.createElement(o.Fragment,null,"To change people’s roles and set conditions for merging pull requests on this ",e,","," ",o.createElement(M.default,{to:I.PRICING_LINK,target:"_blank"},o.createElement(r.default,{type:"link-default"},"upgrade your plan"))," to ",A.PLANS.PROFESSIONAL_PLAN_NAME," or ",A.PLANS.ENTERPRISE_PLAN_NAME,"."),default:e=>o.createElement(o.Fragment,null,"To change people’s roles on this ",e,","," ",o.createElement(M.default,{to:I.PRICING_LINK,target:"_blank"},o.createElement(r.default,{type:"link-default"},"upgrade your plan"))," to ",A.PLANS.PROFESSIONAL_PLAN_NAME," or ",A.PLANS.ENTERPRISE_PLAN_NAME,".")},k="group",P="team",x=e=>{const{type:t,label:s,id:n,details:a}=e;return o.createElement(i.default,{className:"user-suggestion",key:`${t}-${n}`,justifyContent:"center",alignItems:"center",alignSelf:"center",height:"48px"},t===k?o.createElement(d.default,{className:"user-suggestion__group-tag",name:"icon-descriptive-team-stroke",color:"content-color-secondary"}):o.createElement(O.default,{size:"medium",userId:n,linkProfile:!1,customPic:t===P?j.get((0,p.resolveStoreInstance)(h.default),"team.logo_url"):null}),o.createElement(i.default,{className:"user-suggestion-details",direction:"column",justifyContent:"center"},o.createElement(r.default,{className:"user-suggestion-details__name",isTruncated:!0},s),o.createElement(r.default,{className:"user-suggestion-details__email",color:"content-color-secondary"},a)))};let U=(0,y.observer)(n=class extends o.Component{constructor(e){super(e),this.state={searchQuery:"",searchResults:[]},this.handleSearch=this.handleSearch.bind(this),this.handleMemberSelect=this.handleMemberSelect.bind(this),this.getRolesListComponent=this.getRolesListComponent.bind(this)}handleSearch(e){const t=e.target.value,s=j.filter(this.props.suggestions,(e=>j.includes(j.lowerCase(e.name),j.lowerCase(t))||j.includes(j.lowerCase(e.email),j.lowerCase(t))));this.setState({searchQuery:t,searchResults:s})}handleMemberSelect(e){this.setState({searchQuery:" ",searchResults:[]}),e&&this.props.onAddMember(e)}getSelectedRole(e){let t=j.get(this.props.selectedUserRoles,`${e}.name`);return t?j.get(this.props.rolesList,`${t}.displayName`,"Select Role"):""}getSelectedTeamRole(){let e=j.get(this.props,"teamRole.name","");return{name:e,displayName:j.get(this.props.rolesList,`${e}.displayName`,"Select Role")}}renderRolesDropdown(e,t,s={}){let n=s.type||"secondary",r=s.dropdownStyle;return o.createElement(_.Dropdown,{onSelect:e},o.createElement(_.DropdownButton,{size:"small",type:n,dropdownStyle:r},o.createElement(R.Button,{type:n},t)),o.createElement(_.DropdownMenu,{className:"role-dropdown",fluid:!0},j.map(this.props.orderedRoleList,(e=>{if(!j.get(e,"state.isInvalid.status"))return o.createElement(_.MenuItem,{key:e.name,refKey:e.name,disabled:j.get(e,"state.isBlocked.status"),disabledText:j.get(e,"state.isBlocked.detail")},o.createElement("span",null,e.displayName))}))))}getTeamRole(){let{name:e,displayName:t}=this.getSelectedTeamRole();return!!e&&o.createElement("div",{className:"modify-permissions--main"},o.createElement(v.default,{className:"modify-permissions--main-image",imageUrl:j.get((0,p.resolveStoreInstance)(h.default),"team.logo_url")}),o.createElement("span",{className:"modify-permissions--main-title"},"Everyone in Team"),o.createElement("div",{className:"modify-permissions--main-roles"},this.renderRolesDropdown(this.props.onTeamRoleChange,o.createElement("span",{className:"modify-permissions--main-roles--name"},t))))}getAddMoreRolesIcon(){return o.createElement(T.default,{className:"modify-permissions-container--infobar__info-icon"})}getRolesListComponent(e){const t=j.map(this.props.suggestions,(e=>{let t=e.email;if(e.type===k){const s=j.size(e.members);t=`${s} ${C.default.pluralize({count:s,singular:"member",plural:"members"})}`}if(e.type===P){const s=j.size(e.members);t=`${s} ${C.default.pluralize({count:s,singular:"member",plural:"members"})}`}return{...e,value:`${e.type}-${e.id}-${e.email}`,label:e.name||e.username||e.email,details:t}}));return o.createElement("div",{className:"modify-permissions--editor"},o.createElement(a.default,{type:"h6",text:this.props.fromShareModal?"Manage roles":"Name, email, or group name",color:"content-color-secondary",className:"modify-permissions--editor--title"}),!this.props.isOffline&&!e&&this.props.canModifyMembers&&o.createElement("div",{className:"modify-permissions--search"},o.createElement("div",{className:"modify-permissions--search__input-container"},o.createElement(l.default,{placeholder:" ",options:t,customOptionComponent:x,menuMaxHeight:300,onChange:this.handleMemberSelect,value:this.state.searchQuery,emptyStateMessage:"No results found"}))),e&&o.createElement("div",null,e),!e&&o.createElement("div",{className:"modify-permissions--roles-container"},o.createElement(L.default,{isApiLinked:this.props.isApiLinked,fallbackRole:"Select Role",canModifyMembers:this.props.canModifyMembers,selectedUserRoles:this.props.selectedUserRoles,selectedUserGroupsRoles:this.props.selectedUserGroupsRoles,rolesList:this.props.rolesList,orderedRoleList:this.props.orderedRoleList,disabledRoleTooltipText:this.props.disabledRoleTooltipText,teamRole:this.props.teamRole,members:this.props.members,userGroups:this.props.userGroups,onChange:this.props.onChange,onChangeUserGroupRole:this.props.onChangeUserGroupRole,onTeamRoleChange:this.props.onTeamRoleChange,onRemoveMember:this.props.onRemoveMember,onRemoveUserGroup:this.props.onRemoveUserGroup,entityType:this.props.entityType,roleValidations:this.props.roleValidations}),this.props.enablePullRequestSettings&&o.createElement(o.Fragment,null,this.props.pullRequestSettingsLoading?o.createElement("div",{className:"pull-request-settings__is-loading"},o.createElement(f.default,null)):o.createElement(S.default,{pullRequestSettingsError:this.props.pullRequestSettingsError,onMergeCheckToggle:this.props.onMergeCheckToggle,onRadioSelect:this.props.onRadioSelect,mergeChecks:this.props.mergeChecks,activeMergeMembers:this.props.activeMergeMembers,upgradePullRequestSettings:this.props.upgradePullRequestSettings,disableTeamSuggestions:this.props.disableTeamSuggestions,suggestions:this.props.suggestions,tags:this.props.tags,handleTagsChange:this.props.handleTagsChange,renderTagContent:this.props.renderTagContent})),this.props.hideRolesList&&o.createElement("div",{className:"modify-permissions--editor"},o.createElement("div",{className:"modify-permissions--editor__information"},o.createElement(m.default,{className:"modify-permissions--editor--information__icon"}),o.createElement(r.default,{className:"modify-permissions--editor--information__text"},"Everyone on your team can view and make changes to this ",N.MODEL_NAME[this.props.entityType],". To manage access to ",N.MODEL_NAME[this.props.entityType],"s, upgrade to the ",A.PLANS.PROFESSIONAL_PLAN_NAME," or ",A.PLANS.ENTERPRISE_PLAN_NAME," plan.",o.createElement(R.Button,{className:"modify-permissions--editor--information__plan-link",type:"text",onClick:()=>(0,b.openExternalLink)(I.PRICING_LINK)},"View Plans.")))),this.props.showAddMoreRolesBanner&&o.createElement("div",{className:"modify-permissions--roles-container__infobar"},o.createElement(c.default,{status:"info"},o.createElement(r.default,{color:"content-color-primary"},w[this.props.entityType]&&w[this.props.entityType](N.MODEL_NAME[this.props.entityType])||w.default(N.MODEL_NAME[this.props.entityType]))))))}getAlreadySharedInWorkspaceList(){return j.map(this.props.alreadySharedIn,(e=>("private-team"===e.visibilityStatus&&(e.visibilityStatus="private"),"only-me"===e.visibilityStatus&&(e.visibilityStatus="personal"),o.createElement(u.default,{key:e.id,workspace:e}))))}render(){if(this.props.isFetchingRoles)return o.createElement("div",{className:"modify-permissions is-loading"},o.createElement(f.default,null));let e=j.get(this.props,"permissionError.message");return o.createElement("div",{className:"modify-permissions-body"},this.props.showBanner&&o.createElement("div",{className:"modify-permissions--banner"},o.createElement(g.default,{className:"modify-permissions--banner-success",size:"xs"}),o.createElement("p",{className:"modify-permissions--banner-text"},this.props.text),o.createElement(E.default,{className:"modify-permissions--banner-close",size:"xs",onClick:this.props.handleBannerClose})),o.createElement("div",{className:"modify-permissions"},this.getRolesListComponent(e),!N.SHARE_UNSUPPORTED_ENTITIES.includes(this.props.entityType)&&j.size(this.props.alreadySharedIn)>1&&o.createElement(o.Fragment,null,o.createElement("div",{className:"modify-permissions--separator"}),o.createElement("div",{className:"modify-permissions--workspaces"},o.createElement("div",{className:"modify-permissions--workspaces__shared-in"},o.createElement(a.default,{type:"h6",text:"Currently exists in",color:"content-color-secondary",className:"modify-permissions--workspaces__shared-in--title"}),this.props.isFetchingWorkspaces?o.createElement("div",{className:"modify-permissions--workspaces__shared-in__is-loading"},o.createElement(f.default,null)):this.getAlreadySharedInWorkspaceList())))))}})||n;U.defaultProps={onAddMember:()=>{}}},"./js/components/permissions/ManageRolesContainer.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return ee},supportedEntities:function(){return B}});var n,o=s("../../node_modules/react/index.js"),r=s("./js/stores/FeatureFlagsStore.js"),i=s("./collaboration/workspace/model/ActiveWorkspaceBaseStore.ts"),a=s("./js/stores/TeamStore.js"),l=s("./js/stores/SyncStatusStore.js"),c=s("./js/stores/StoreManager.js"),d=s("./js/stores/CurrentUserStore.js"),m=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),u=s("./node_modules/classnames/index.js"),p=s.n(u),h=s("./js/utils/util.js"),g=s("./js/components/base/Avatar.js"),E=s("./js/components/base/Icons/MailIcon.js"),f=s("./js/components/permissions/ManageRoles.js"),_=s("./js/modules/services/RolesService.js"),R=s("./version-control/pull-request/services/PullRequestService.js"),v=s("../../node_modules/@postman/aether/esmLib/src/components/Modal/Modal.js"),y=s("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),T=s("../../node_modules/@postman/aether/esmLib/src/components/Banner/Banner.js"),S=s("../../node_modules/@postman/aether/esmLib/src/components/Flex/Flex.js"),b=s("../../node_modules/@postman/aether/esmLib/src/components/Button/Button.js"),I=s("./js/constants/ShareFlowConstants.js"),N=s("./js/modules/controllers/CurrentUserController.js"),O=s("./collaboration/workspace/controller/WorkspaceController.ts"),C=s("./js/modules/services/share-entities/ShareEntitiesService.js"),L=s("./js/components/permissions/PermissionError.js"),M=s("./js/modules/services/ShareModalService.js"),A=s("./version-control/config.js"),j=s("./js/services/NavigationService.js"),w=s("./collaboration/navigation/constants.js"),k=s("../../node_modules/mobx/lib/mobx.module.js"),P=s("./collaboration/utils/userGroups.js"),x=s("./collaboration/workspace/types/WorkspaceTypes.ts"),U=s("./runtime-repl/extensible-collection/helpers/EntityTypeHelper.ts"),D=s("./api-dev/services/APIDevService.js"),F=s("./js/modules/services/ManageRolesModalService.js"),G=s("./node_modules/lodash/lodash.js"),V=s("../../node_modules/console-browserify/index.js");const $={entityId:"",entityName:"",rolesList:{},currentRoles:{},isFetchingRoles:!0,selectedUserRoles:{},selectedUserGroupsRoles:{},defaultRole:"",isLoading:!1,activeMergeMembers:"",mergeMemberTags:[],mergersInfo:{},mergeChecks:[],pullRequestSettingsLoading:!1,pullRequestSettingsError:!1,alreadySharedIn:[],teamMembers:[],members:[],userGroups:[],defaultRoles:{team:"",user:""},teamRole:{},groupRole:{},error:null,apiLinkedToEntity:null,isFetchingWorkspaces:!0,permissionError:{},roleValidations:{}},B=["collection",x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection,"environment","api","mock","monitor"],H=(x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection,{collection:I.COLLECTION_MANAGE_ROLES_ERROR,[x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection]:I.COLLECTION_MANAGE_ROLES_ERROR,environment:I.ENVIRONMENT_MANAGE_ROLES_ERROR,monitor:I.MONITOR_MANAGE_ROLES_ERROR,api:I.API_MANAGE_ROLES_ERROR,mock:I.MOCK_MANAGE_ROLES_ERROR}),Y={collection:I.FETCH_ROLES_FAILED_COLLECTION,[x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection]:I.FETCH_ROLES_FAILED_COLLECTION,environment:I.FETCH_ROLES_FAILED_ENVIRONMENT,monitor:I.FETCH_ROLES_FAILED_MONITOR,api:I.FETCH_ROLES_FAILED_API,mock:I.FETCH_ROLES_FAILED_MOCK},q={collection:I.UPDATE_ROLES_FAILED_COLLECTION,[x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection]:I.UPDATE_ROLES_FAILED_COLLECTION,environment:I.UPDATE_ROLES_FAILED_ENVIRONMENT,monitor:I.UPDATE_ROLES_FAILED_MONITOR,api:I.UPDATE_ROLES_FAILED_API,mock:I.UPDATE_ROLES_FAILED_MOCK},W={collection:I.COLLECTION_NOT_SHARED_ERROR,[x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection]:I.COLLECTION_NOT_SHARED_ERROR,environment:I.ENVIRONMENT_NOT_SHARED_ERROR,monitor:I.MONITOR_NOT_SHARED_ERROR,api:I.API_NOT_SHARED_ERROR,mock:I.MOCK_NOT_SHARED_ERROR},K={collection:I.NO_ROLES_TO_MANAGE_COLLECTION,[x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection]:I.NO_ROLES_TO_MANAGE_COLLECTION,environment:I.NO_ROLES_TO_MANAGE_ENVIRONMENT,monitor:I.NO_ROLES_TO_MANAGE_MONITOR,api:I.NO_ROLES_TO_MANAGE_API,mock:I.NO_ROLES_TO_MANAGE_MOCK},z={collection:"Collection",[x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection]:"Collection",environment:"Environment",monitor:"Monitor",api:"API"},X={collection:M.moveCollection,[x.WORKSPACE_ELEMENTS_TYPE.extensibleCollection]:M.moveExtensibleCollection,environment:M.moveEnvironment,api:M.moveAPI},Q=(I.FETCH_PULL_REQUEST_SETTINGS_FAILED_COLLECTION,"group"),J="user",Z="team";let ee=(0,m.observer)(n=class extends o.Component{constructor(e){super(e),this.state=$,this.handleOpen=this.handleOpen.bind(this),this.handleClose=this.handleClose.bind(this),this.handleRoles=this.handleRoles.bind(this),this.handleManageRoles=this.handleManageRoles.bind(this),this.handleAddMember=this.handleAddMember.bind(this),this.handleAddUserGroup=this.handleAddUserGroup.bind(this),this.handleAddTeam=this.handleAddTeam.bind(this),this.handleRemoveMember=this.handleRemoveMember.bind(this),this.handleRemoveUserGroup=this.handleRemoveUserGroup.bind(this),this.handleInfobarDismiss=this.handleInfobarDismiss.bind(this),this.handleTeamRole=this.handleTeamRole.bind(this),this.handleGroupRole=this.handleGroupRole.bind(this),this.handleUserGroupRole=this.handleUserGroupRole.bind(this),this.handleError=this.handleError.bind(this),this.handleMergeCheckToggle=this.handleMergeCheckToggle.bind(this),this.handleMergeMemberTagsChange=this.handleMergeMemberTagsChange.bind(this),this.handleRadioSelect=this.handleRadioSelect.bind(this),this.handleOpenWorkspaceSettings=this.handleOpenWorkspaceSettings.bind(this),this.handleOpenApiRoleSettings=this.handleOpenApiRoleSettings.bind(this)}componentDidMount(){let e=this.props.controller;if(!e)return;const t=e&&e.opts||{};D.default.getApiLinkedToEntity(e.entityType,e.entityId).then((e=>this.setState({apiLinkedToEntity:e}))).catch((e=>{pm.logger.error("ManageRolesContainer~componentDidMount: Error while fetching API linked to entity ",e),this.setState({apiLinkedToEntity:null})})),(0,k.reaction)((()=>G.get((0,c.resolveStoreInstance)(d.default),"team.id")),(s=>{s&&this.handleOpen(e.entityType,e.entityId,t)}),{fireImmediately:!0})}isOffline(){return!(0,c.resolveStoreInstance)(l.default).isSocketConnected}setPullRequestSettings(e,t){this.isOffline()||(this.setState({pullRequestSettingsLoading:!0}),(0,R.fetchEntityPullRequestSettings)(e,t).then((({settings:e})=>{this.setState({pullRequestSettingsLoading:!1,mergeChecks:e,mergersInfo:{},mergeMemberTags:G.get(this.state,"mergersInfo.users")?(this.state.mergersInfo.users||[]).map((e=>({value:e.email,type:"regular"}))):[],activeMergeMembers:G.get(this.state.mergersInfo,"users",[]).length>0?"teammates":"collectionEditors"})})).catch((()=>{this.setState({pullRequestSettingsError:!0,pullRequestSettingsLoading:!1})})))}async setRoles(e,t){if(!this.isOffline())try{const{rolesList:s,userCurrentRoles:n,defaultRoles:o,teamCurrentRole:r,groupCurrentRoles:i,rolesOrder:l}=await(0,_.fetchEntityRoles)(e,t),m=G.get((0,c.resolveStoreInstance)(d.default),"team.id"),u=P.default.formatUserGroups(G.get((0,c.resolveStoreInstance)(a.default),"allUserGroups")),{userGroupRoles:p,otherGroupRoles:h}=P.default.segregateGroupRoles(i,u);let g={};if(G.forEach({...n,...p,...r},(s=>{g[`${s.type}_${s.id}`]={entityId:s.id,entityType:s.type,objectId:t,objectType:e,role:s.name}})),!G.isEmpty(g))try{const e=await(0,_.validateRoleAssignment)(g);this.setState({roleValidations:e})}catch(e){pm.logger.error("ManageRolesContainer~setRoles: Error while fetching validations ",e)}this.setState({isFetchingRoles:!1,rolesList:s,rolesOrder:l,selectedUserRoles:n,selectedUserGroupsRoles:p,defaultRoles:o,teamRole:r[m]||{},groupRole:h,members:G.map(n,(({id:e})=>({id:e}))),userGroups:P.default.getUserGroupsFromRoles(p,u)})}catch(t){this.handleError(t,Y[e])}}onWorkspaceJoin(e){this.setState((t=>({joinedWorkspaces:{...t.joinedWorkspaces,[e]:!0}})))}getTeamSuggestion(){if(!G.isEmpty(this.state.teamRole))return[];const e=(0,c.resolveStoreInstance)(d.default).team,t=(0,c.resolveStoreInstance)(i.default).visibilityStatus;return e&&t!==x.VISIBILITY_STATUS.private?[{type:Z,id:e.id,name:e.name,members:G.get(e,"team_users")}]:[]}getUserSuggestions(){const e=G.reduce(this.state.selectedUserRoles,((e,{id:t})=>(e[t]=!0,e)),{});return G.reduce(this.state.teamMembers,((t,s)=>(e[s.id]||t.push({...s,type:J}),t)),[])}getUserGroupsSuggestions(){if(!(0,c.resolveStoreInstance)(r.default).isEnabled("workspace:isUserGroupsEnabledForTeam"))return[];const e=G.get((0,c.resolveStoreInstance)(a.default),"allUserGroups"),t=this.state.selectedUserGroupsRoles;return G.reduce(e,((e,s)=>{const{id:n,name:o,members:r}=s;return t[n]||e.push({type:"group",id:G.toString(n),name:o,members:r}),e}),[])}getIdFromTags(e){const t=(0,c.resolveStoreInstance)(d.default);let s=[];return e.forEach((e=>{const n=h.default.findUserInTeam({email:e.value},t);n&&s.push(n.id)})),s}async setAlreadySharedInWorkspaces(e,t){let s=[],n={element:{type:e,id:t}},o=null;for(;G.isNull(o)||o;){const e=await O.default.findAll(n);s=G.concat(s,G.get(e,"data",[])),o=G.get(e,"meta.nextCursor"),n.cursor=o}this.setState({alreadySharedIn:s,isFetchingWorkspaces:!1})}async checkPermissions(e,t){let s=await(0,C.isEntityShared)(e,t),n=s&&await(0,C.canManageRolesOnEntity)(e,t),o={type:s?I.NO_PERMISSION:I.NOT_SHARED,message:s?H[e]:W[e]};return s&&n?Promise.resolve():Promise.reject(o)}async handleOpen(e,t,s={}){if(!e||!t)return V.warn(`ManageRolesContainer~handleOpen:\n      Unsupported entity '${e}' provided with ID: '${t}'`),pm.toasts.error("Something went wrong while managing roles."),void this.handleClose();if(this.isTeamUser()||this.handleClose(),(0,C.fetchEntityMeta)(e,t).then((e=>{this.setState({entityName:e.name})})),!(0,c.resolveStoreInstance)(d.default).team)return void this.setState({permissionError:{type:I.NO_TEAM,message:I.NO_TEAM_FOUND_BODY},entityId:t,entityType:e});let n=this.isOffline();n||this.checkPermissions(e,t).then((()=>{this.setRoles(e,t),this.setAlreadySharedInWorkspaces(e,t),G.get(pm.billing,["plan","features","pr_settings_access_allowed","value"])&&this.setPullRequestSettings(e,t)})).catch((e=>{this.setState({permissionError:e,isFetchingRoles:!1,isFetchingWorkspaces:!1})})),this.setState({isFetchingRoles:!n,entityId:t,entityType:e,teamMembers:(0,c.resolveStoreInstance)(a.default).allTeamMembers})}async isTeamUser(){const e=await N.default.get();return e?!(!e.organizations||!e.organizations[0])||(pm.toasts.error("You need to be signed-in to a team to perform this action."),pm.logger.error(new Error("IACNavigation~handleManageRoles: User is not part of a team.")),!1):(pm.logger.error(new Error("IACNavigation~roles.manage: User not found")),!1)}handleClose(){this.setState($),this.props.close&&this.props.close()}handleError(e,t=""){let s=G.get(e,"details.message",G.get(e,"message"));s?(pm.toasts.error(s),s=null):s=t||"Something went wrong",this.setState({isLoading:!1,error:s})}handleInfobarDismiss(){this.setState({error:null})}async setRoleAssignmentValidation(e,t,s){const n=`${e}_${t}`,o={[n]:{entityId:t,entityType:e,objectId:this.state.entityId,objectType:this.state.entityType,role:s}};this.setState({roleValidations:G.omit(this.state.roleValidations,n)});try{const e=await(0,_.validateRoleAssignment)(o);this.setState({roleValidations:{...this.state.roleValidations,...e}})}catch(e){pm.logger.error("ManageRolesContainer~setRoleAssignmentValidation: Error while fetching validations ",e)}}handleRoles(e,t,s){this.setState((n=>({selectedUserRoles:{...n.selectedUserRoles,[e]:{id:e,type:t,name:s}}}))),this.setRoleAssignmentValidation(t,e,s)}handleGroupRole(e,t,s){this.setState((n=>({groupRole:{...n.groupRole,[e]:{id:e,type:t,name:s}}})))}handleUserGroupRole(e,t,s){this.setState((n=>({selectedUserGroupsRoles:{...n.selectedUserGroupsRoles,[e]:{id:e,type:t,name:s}}}))),this.setRoleAssignmentValidation(t,e,s)}handleManageRoles(){if(this.isOffline())return;this.setState({isLoading:!0,error:null});let{entityType:e,selectedUserRoles:t,teamRole:s,entityId:n,entityName:o,mergeMemberTags:r,mergersInfo:i,mergeChecks:a,groupRole:l,selectedUserGroupsRoles:c}=this.state;i.users=this.getIdFromTags(r);let d=a.map((e=>({id:e.id,enabled:e.enabled}))),m={...l,...c};const u=G.get(pm.billing,["plan","features","pr_settings_access_allowed","value"]);Promise.all([(0,_.updateEntityRoles)(e,n,t,s,m),u&&(0,R.updateEntityPullRequestSettings)(e,n,d)]).then((()=>{pm.eventBus.channel("manage-roles-updates").publish({entityType:e,entityId:n,prSettingsUpdate:u}),pm.toasts.success(`You’ve updated roles on the **${G.upperFirst(o)}** ${I.MODEL_NAME[e]}.`,{title:"Roles updated"}),this.handleClose()})).catch((t=>{this.handleError(t,q[e])}))}handleAddMember(e){const{id:t,type:s}=e;return s===Q?this.handleAddUserGroup(e):s===Z?this.handleAddTeam(e):void(G.some(this.state.members,{id:t})||this.setState((e=>{const s=G.get(e.rolesList[G.get(e.teamRole,"name")],"isEnabled")?e.teamRole.name:e.defaultRoles.user;return this.setRoleAssignmentValidation(J,t,s),{members:[...e.members,{id:t}],selectedUserRoles:{...e.selectedUserRoles,[t]:{id:t,type:"user",name:s}}}})))}handleAddTeam(e){G.isEmpty(this.state.teamRole)&&this.setState((t=>(this.setRoleAssignmentValidation(Z,e.id,t.defaultRoles.team),{teamRole:{id:e.id,type:Z,name:t.defaultRoles.team}})))}handleAddUserGroup(e){const{id:t}=e;this.setState((s=>{const n=G.get(s.rolesList[G.get(s.teamRole,"name")],"isEnabled")?s.teamRole.name:s.defaultRoles.user;return this.setRoleAssignmentValidation(Q,t,n),{userGroups:{...s.userGroups,[t]:{...e}},selectedUserGroupsRoles:{...s.selectedUserGroupsRoles,[t]:{id:t,type:"group",name:n}}}}))}handleRemoveMember(e){this.setState((t=>({members:G.reject(t.members,{id:e}),selectedUserRoles:G.omit(t.selectedUserRoles,e)})))}handleRemoveUserGroup(e){this.setState((t=>({userGroups:G.omit(t.userGroups,e),selectedUserGroupsRoles:G.omit(t.selectedUserGroupsRoles,e)})))}handleTeamRole(e,t,s){this.setState({teamRole:{id:e,type:t,name:s}}),this.setRoleAssignmentValidation(t,e,s)}handleMergeCheckToggle(e){this.setState((t=>({mergeChecks:t.mergeChecks.map((t=>(t.id===e&&A.prSettingsConfig[e].enabled&&(t.enabled=!t.enabled),t)))})))}handleRadioSelect(e){this.setState({activeMergeMembers:e})}handleMergeMemberTagsChange(e){this.setState({mergeMemberTags:e})}getStyles(){return{marginTop:"10vh",height:"85vh",minWidth:"720px",maxHeight:"700px",width:"80vw"}}renderNoPermissionError(){let e={},{type:t}=this.state.permissionError,{entityType:s,entityId:n,entityName:r}=this.state,i="",a=I.MODEL_NAME[this.state.entityType]||this.state.entityType;return t===I.NOT_SHARED?(I.SHARE_UNSUPPORTED_ENTITIES.includes(s)||(e={label:`Move ${z[s]}`,onClick:()=>{X[s](n,r,{origin:"manage-roles-empty"}),this.handleClose()}}),i=K[s]):t===I.NO_TEAM?i=I.NO_TEAM_FOUND_TITLE:t===I.NO_PERMISSION&&(i=I.REQUEST_ACCESS_TITLE,e={label:I.REQUEST_ACCESS_BUTTON_LABEL,onClick:()=>{j.default.transitionTo(w.ACCESS_REQUEST_CREATE_BUILD_IDENTIFIER,null,{entityType:U.serialize(s),entityId:n,type:"grant_role",entityName:r}),this.handleClose&&this.handleClose()}}),(0,c.resolveStoreInstance)(d.default).isCurrentUserPartner&&(e={}),o.createElement(v.Modal,{className:"modify-permissions-container",isOpen:this.props.isOpen,onClose:this.handleClose,size:"large"},o.createElement(v.ModalHeader,{heading:`Manage roles on ${this.state.entityName||a}`}),o.createElement(v.ModalContent,{className:"modify-permissions-container__no-access-content"},o.createElement(L.default,{thumbnail:t===I.NOT_SHARED,title:i,infoText:this.state.permissionError&&this.state.permissionError.infoText,error:this.state.permissionError.message,action:e})))}renderTagContent(e){const t=(0,c.resolveStoreInstance)(d.default),s=h.default.findUserInTeam({email:e.value},t),n=s?s.username:e.value;return o.createElement("div",{className:"invite-user-tag"},s?o.createElement(g.default,{size:"small",userId:s.id}):o.createElement(E.default,null),o.createElement("div",{title:n,className:"user-email"},n))}handleOpenWorkspaceSettings(){this.handleClose(),j.default.transitionTo("build.overview",null,{ctx:"settings"})}handleOpenApiRoleSettings(){this.state.apiLinkedToEntity&&(this.handleClose(),(0,F.manageRolesOnAPI)(this.state.apiLinkedToEntity.id))}getRolesOrder(){return G.reduce(this.state.rolesOrder,((e,t)=>{const s=G.get(this.state.rolesList,[t]);return s&&e.push(s),e}),[])}getRolesCaption(){return null!==this.state.apiLinkedToEntity&&"api"!==this.state.entityType?o.createElement(o.Fragment,null,"People will inherit roles on this ",I.MODEL_NAME[this.state.entityType]," from the associated API and workspace."," ",o.createElement("span",{onClick:this.handleOpenApiRoleSettings},o.createElement(y.default,{type:"link-default"},"View roles"))):o.createElement(o.Fragment,null,"People will inherit roles on this ",I.MODEL_NAME[this.state.entityType]," from the workspace."," ",o.createElement("span",{onClick:this.handleOpenWorkspaceSettings},o.createElement(y.default,{type:"link-default"},"View workspace roles")))}render(){if(this.state.permissionError.message)return this.renderNoPermissionError();let e=this.isOffline(),t=e?I.SYNC_OFFLINE_MESSAGE_MANAGE:this.state.error,s=(0,c.resolveStoreInstance)(d.default),n=e||this.state.isLoading||this.state.isFetchingRoles||this.state.permissionError.message||s.isCurrentUserPartner,i=(h.default.isProUser(s),"EDIT"===(0,c.resolveStoreInstance)(r.default).get(`${this.state.entityType}:accessControlMode`)),a="collection"===this.state.entityType,l=this.getRolesOrder(),m=G.orderBy(l,["state.isBlocked.status"],["asc"]),u=`You can only assign users an ${G.reduce(this.state.rolesList,((e,t)=>(t.isEnabled&&e.push(t.displayName),e)),[]).join(" ,")} role on this ${I.MODEL_NAME[this.state.entityType]}. Your plan doesn't include access management.`,g=I.MODEL_NAME[this.state.entityType]||this.state.entityType;return o.createElement(v.Modal,{className:"modify-permissions-container",isOpen:this.props.isOpen,onClose:this.handleClose,size:"large"},o.createElement(v.ModalHeader,{isTruncatedHeader:!0,heading:`Manage roles on ${this.state.entityName||g}`}),o.createElement(v.ModalContent,{className:p()({"modify-permissions-container__content":!0,"modify-permissions-container__content--extend":G.size(this.state.alreadySharedIn)<=1})},t&&o.createElement("div",{className:p()({"modify-permissions-container__content__banner-container":G.size(this.state.alreadySharedIn)>1})},o.createElement(T.default,{status:e?"warning":"error",onDismiss:!e&&this.handleInfobarDismiss},t)),o.createElement(f.default,{isApiLinked:null!==this.state.apiLinkedToEntity,entityType:this.state.entityType,canModifyMembers:!0,isOffline:e,members:this.state.members,userGroups:this.state.userGroups,disabledRoleTooltipText:u,allTeamMembers:this.state.teamMembers,selectedUserRoles:this.state.selectedUserRoles,selectedUserGroupsRoles:this.state.selectedUserGroupsRoles,isFetchingRoles:this.state.isFetchingRoles,isFetchingWorkspaces:this.state.isFetchingWorkspaces,rolesList:this.state.rolesList,orderedRoleList:m,onChange:this.handleRoles,onChangeUserGroupRole:this.handleUserGroupRole,alreadySharedIn:this.state.alreadySharedIn,onAddMember:this.handleAddMember,onRemoveMember:this.handleRemoveMember,onRemoveUserGroup:this.handleRemoveUserGroup,teamRole:this.state.teamRole,groupRole:this.state.groupRole,onTeamRoleChange:this.handleTeamRole,onGroupRoleChange:this.handleGroupRole,entityName:I.MODEL_NAME[this.state.entityType],showAddMoreRolesBanner:i,enablePullRequestSettings:a,upgradePullRequestSettings:!G.get(pm.billing,["plan","features","pr_settings_access_allowed","value"]),pullRequestSettingsLoading:this.state.pullRequestSettingsLoading,pullRequestSettingsError:this.state.pullRequestSettingsError,mergeChecks:this.state.mergeChecks,onMergeCheckToggle:this.handleMergeCheckToggle,onRadioSelect:this.handleRadioSelect,activeMergeMembers:this.state.activeMergeMembers,disableTeamSuggestions:!0,suggestions:G.concat(this.getTeamSuggestion(),this.getUserGroupsSuggestions(),this.getUserSuggestions()),tags:this.state.mergeMemberTags,handleTagsChange:this.handleMergeMemberTagsChange,renderTagContent:this.renderTagContent,roleValidations:this.state.roleValidations})),o.createElement(v.ModalFooter,null,o.createElement(S.default,{grow:1,shrink:1,justifyContent:"space-between",alignItems:"center"},o.createElement("div",null,!n&&o.createElement(y.default,{color:"content-color-secondary"},this.getRolesCaption())),o.createElement(S.default,{gap:"spacing-s"},o.createElement(b.default,{type:"secondary",text:"Cancel",onClick:this.handleClose}),o.createElement(b.default,{type:"primary",text:"Update Roles",onClick:this.handleManageRoles,isDisabled:n,isLoading:this.state.isLoading,className:"modify-permissions-container--action"})))))}})||n},"./js/components/permissions/ManageRolesController.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return a}});var n=s("./appsdk/modals/BaseModalController.js"),o=s("./js/components/permissions/ManageRolesContainer.js"),r=s("./runtime-repl/extensible-collection/helpers/EntityTypeHelper.ts"),i=s("./node_modules/lodash/lodash.js");class a extends n.default{didCreate({queryParams:e,additionalContext:t}){this.opts=t,o.supportedEntities.forEach((t=>{i.has(e,t)&&(this.entityType=r.deserialize(t,e[t]),this.entityId=e[t])}))}}},"./js/components/permissions/PermissionError.js":function(e,t,s){s.r(t);var n=s("../../node_modules/react/index.js"),o=s("../../node_modules/@postman/aether/esmLib/src/components/Illustration/illustrations/UnableToLoad.js"),r=s("../../node_modules/@postman/aether/esmLib/src/components/Illustration/illustrations/NoPermission.js"),i=s("../../node_modules/@postman/aether/esmLib/src/components/Button/Button.js"),a=s("./node_modules/lodash/lodash.js");const l=e=>n.createElement("div",{className:"permission-error"},n.createElement("div",{className:"permission-error--illustration"},e.thumbnail?n.createElement(o.default,null):n.createElement(r.default,null)),e.title&&n.createElement("div",{className:"permission-error--title"},e.title),n.createElement("div",{className:"permission-error--description"},e.infoText&&n.createElement("p",null,e.infoText),n.createElement("p",null,e.error)),!a.isEmpty(e.action)&&n.createElement(i.default,{type:"primary",className:"permission-error--action",onClick:e.action.onClick,text:e.action.label}));t.default=l,l.defaultProps={action:{}}},"./js/components/permissions/RolesListItemV2.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return S}});var n=s("../../node_modules/react/index.js"),o=s("./js/components/base/Avatar.js"),r=s("./js/components/base/Dropdowns.js"),i=s("./js/components/base/Tooltips.js"),a=s("./node_modules/classnames/index.js"),l=s.n(a),c=s("../../node_modules/@postman/aether/esmLib/src/components/Label/Label.js"),d=s("../../node_modules/@postman/aether/esmLib/src/components/Button/Button.js"),m=s("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),u=s("../../node_modules/@postman/aether/esmLib/src/components/Flex/Flex.js"),p=s("../../node_modules/@postman/aether/esmLib/src/components/Tooltip/Tooltip.js"),h=s("../../node_modules/@postman/aether/esmLib/src/components/Menu/MenuButton.js"),g=s("../../node_modules/@postman/aether-icons/esmLib/src/Icon/Icon.js"),E=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-state-info-stroke.js"),f=s("./js/external-navigation/ExternalNavigationService.js"),_=s("./js/stores/StoreManager.js"),R=s("./js/stores/TeamUserStore.js"),v=s("./js/utils/PluralizeHelper.js"),y=s("./node_modules/lodash/lodash.js");const T=({member:e})=>{const{id:t,name:s,username:r,email:i}=e||{},a=s||r||i;return n.createElement("div",{className:"permission-list-item__members-list__content__item"},n.createElement(o.default,{size:"medium",userId:t}),n.createElement("div",{className:"permission-list-item__members-list__content__item__name",title:a},a))};class S extends n.Component{constructor(e){super(e),this.state={isTooltipVisible:!1,isMembersListVisible:!1},this.handleSelect=this.handleSelect.bind(this),this.handleRemove=this.handleRemove.bind(this),this.handleOpenUserGroupPage=this.handleOpenUserGroupPage.bind(this),this.handleClickOutside=this.handleClickOutside.bind(this),this.toggleMemberListVisibility=this.toggleMemberListVisibility.bind(this),this.showTooltip=this.toggleTooltip.bind(this,!0),this.hideTooltip=this.toggleTooltip.bind(this,!1)}toggleTooltip(e){this.setState({isTooltipVisible:e})}handleSelect(e){let t="user";this.props.isUserGroup&&(t="group"),this.props.isTeam&&(t="team"),this.props.onChange&&this.props.onChange(this.props.member.id,t,e)}handleRemove(){this.props.onRemoveMember&&this.props.onRemoveMember(this.props.member.id)}handleOpenUserGroupPage(){(0,f.openExternalLink)(`${pm.dashboardUrl}/team/group/${y.get(this.props,"member.id")}/edit`,"_blank"),this.toggleMemberListVisibility()}handleClickOutside(e){const t=y.get(e,"target");this.userGroupIconRef.contains(t)||this.memberNameRef.contains(t)||this.setState({isMembersListVisible:!1})}toggleMemberListVisibility(){this.props.isUserGroup&&this.setState((e=>({isMembersListVisible:!e.isMembersListVisible})))}getMembersListPopUp(e){if(!this.props.isUserGroup)return;const t=(0,_.resolveStoreInstance)(R.default),s=y.get(this.props,"member.name"),o=y.size(e),r=`${o} ${v.default.pluralize({count:o,singular:"member",plural:"members"})}`;return n.createElement(i.Tooltip,{immediate:!0,closeOnClickOutside:!0,placement:"left",className:"permission-list-item__members-list",show:this.state.isMembersListVisible,target:this.roleListItemRef,onClose:this.handleClickOutside},n.createElement(i.TooltipBody,null,n.createElement("div",{className:"permission-list-item__members-list__title"},n.createElement("div",{className:l()({"permission-list-item__members-list__title__group-name":!0,"permission-list-item__members-list__title__no-members":!o}),title:s},s)," ",o>0&&n.createElement("div",null,"(",r,")")),n.createElement("div",{className:l()({"permission-list-item__members-list__content":!0,"permission-list-item__members-list__no-members":!o})},o>0?y.map(e,(e=>{const s=t.find(y.toString(e));return n.createElement(T,{key:e,member:s})})):n.createElement("div",{className:"permission-list-item__members-list__content__no-members"},n.createElement(c.default,{type:"secondary",text:"No members in this group."}))),n.createElement(d.default,{type:"secondary",size:"medium",className:"permission-list-item__members-list__btn",onClick:this.handleOpenUserGroupPage,text:"View Group"})))}getClasses(e){return l()({"permissions-list-item--permissions":!0,"permission-list-item--user":!0,"can-remove":e})}render(){const e=this.props.canModifyMembers&&y.get(this.props,"member.canRemove",!0),t=!this.props.canUpdateRoles||!y.get(this.props,"member.canRemove",!0);return n.createElement("div",{className:"permission-list-item-v2",ref:e=>this.roleListItemRef=e},this.props.isUserGroup?n.createElement("div",{onClick:this.toggleMemberListVisibility,ref:e=>this.userGroupIconRef=e},n.createElement(g.default,{className:"permission-list-item__user-group",name:"icon-descriptive-team-stroke",color:"content-color-secondary"})):n.createElement(o.default,{size:"medium",userId:this.props.member.id,customPic:this.props.isTeam&&this.props.member.logoUrl?this.props.member.logoUrl:null}),n.createElement("div",{className:l()({"permission-list-item--name":!0,"permission-list-item--name__user-group":this.props.isUserGroup}),onClick:this.toggleMemberListVisibility,ref:e=>this.memberNameRef=e},n.createElement(m.default,{color:"content-color-primary",isTruncated:!0},this.props.member.name),this.props.subTitle&&n.createElement(m.default,{color:"content-color-secondary"},this.props.subTitle)),n.createElement(u.default,{padding:{paddingLeft:"spacing-s"}},this.props.infoText&&!this.props.hideRoles&&n.createElement("div",{className:"permission-list-item--info",ref:"info"},n.createElement(p.default,{content:this.props.infoText,maxWidth:300,placement:"left"},n.createElement(E.default,null))),!this.props.hideRoles&&n.createElement("div",{className:this.getClasses(e)},n.createElement(r.Dropdown,{onSelect:this.handleSelect},n.createElement(r.DropdownButton,{disabled:t,dropdownStyle:"nocaret"},n.createElement(h.default,{text:this.props.selectedRole,type:"tertiary",className:"permissions-list-item--role"})),n.createElement(r.DropdownMenu,{zIndex:"10000",className:"role-dropdown",fluid:!0},y.map(this.props.orderedRoleList,(e=>{if(!y.get(e,"state.isInvalid.status"))return n.createElement(r.MenuItem,{key:e.name,refKey:e.name,disabled:y.get(e,"state.isBlocked.status"),disabledText:y.get(e,"state.isBlocked.detail")},n.createElement("span",null,e.displayName))}))))),this.getMembersListPopUp(y.get(this.props,"member.members")),n.createElement(d.default,{onClick:this.handleRemove,type:"tertiary",icon:"icon-action-close-stroke-small",className:l()({"permissions-list-item--delete":!0,"permissions-list-item--delete--hide":!e})})))}}S.defaultProps={canUpdateRoles:!0}},"./js/components/permissions/RolesListV2.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return m}});var n=s("../../node_modules/react/index.js"),o=(s("./collaboration/workspace/types/WorkspaceTypes.ts"),s("./js/stores/StoreManager.js")),r=s("./js/stores/CurrentUserStore.js"),i=s("./js/utils/PluralizeHelper.js"),a=s("./js/utils/util.js"),l=s("./js/components/permissions/RolesListItemV2.js"),c=s("./js/constants/ShareFlowConstants.js"),d=s("./node_modules/lodash/lodash.js");class m extends n.Component{constructor(e){super(e),this.currentUser=(0,o.resolveStoreInstance)(r.default),this.getMemberDetails=this.getMemberDetails.bind(this)}getMemberDetails({id:e,canRemove:t}){return{id:e,name:a.default.getUserNameForId(e,this.currentUser),email:d.get(a.default.findUserInTeam({id:e},this.currentUser),"email"),canRemove:t}}getUserGroupDetails({id:e,name:t,canRemove:s,members:n}){return{id:e,name:t,canRemove:s,members:n}}getSelectedRole(e){return d.get(this.props.selectedUserRoles,`${e}.name`)}getSelectedUserGroupRole(e){return d.get(this.props.selectedUserGroupsRoles,`${e}.name`)}getSelectedRoleName(e){return d.get(this.props.rolesList,`${e}.displayName`,this.props.fallbackRole)}getInfoText(e,t){const s=`${e}_${t}`,{entityType:n,roleValidations:o,rolesList:r}=this.props;if(!d.get(o,[s,"valid"],!0)){d.get(o,[s,"data","conflictingRole"]);const t="user"===e;return this.props.isApiLinked?`This ${e} has edit permission on this ${c.MODEL_NAME[n]||n} which they are inheriting from\n          the associated API`:`This ${e} has edit permission on this ${c.MODEL_NAME[n]||n} which they are inheriting from\n          the workspace${t?" or a group.":"."}`}}render(){let e=d.map(this.props.members,this.getMemberDetails),t=d.map(this.props.userGroups,this.getUserGroupDetails),s=(0,o.resolveStoreInstance)(r.default),a=!d.isEmpty(this.props.teamRole)&&d.get(s,"team.name","Team Name"),c={id:d.get(this.props,"teamRole.id"),name:a,canRemove:!1,logoUrl:d.get(s,"team.logo_url"),totalMembers:d.get(s,"team.team_users.length")};if(this.props.currentUserId){let t=d.findIndex(e,{id:this.props.currentUserId});if(t>0){let s=e[t];e.splice(t,1),e.unshift(this.getMemberDetails({id:s.id,canRemove:s.canRemove}))}}return n.createElement("div",{className:"permission-list-v2-container"},n.createElement("div",{className:"permission-list"},!d.isEmpty(this.props.teamRole)&&n.createElement(l.default,{canUpdateRoles:this.props.canUpdateRoles,infoText:this.getInfoText("team",d.get(this.props,"teamRole.id")),selectedRole:this.getSelectedRoleName(d.get(this.props,"teamRole.name")),key:c.id,rolesList:this.props.rolesList,orderedRoleList:this.props.orderedRoleList,disabledRoleTooltipText:this.props.disabledRoleTooltipText,member:c,onChange:this.props.onTeamRoleChange,subTitle:`${c.totalMembers} team ${i.default.pluralize({count:c.totalMembers,singular:"member",plural:"members"})}`,isTeam:!0}),d.map(t,(e=>{let t=this.getSelectedUserGroupRole(e.id);return n.createElement(l.default,{hideRoles:this.props.hideRoles,infoText:this.getInfoText("group",e.id),canModifyMembers:this.props.canModifyMembers,canUpdateRoles:this.props.canUpdateRoles,selectedRole:this.getSelectedRoleName(t),key:e.id,rolesList:this.props.rolesList,orderedRoleList:this.props.orderedRoleList,disabledRoleTooltipText:this.props.disabledRoleTooltipText,member:e,onChange:this.props.onChangeUserGroupRole,onRemoveMember:this.props.onRemoveUserGroup,subTitle:`${e.members.length} group ${i.default.pluralize({count:e.members.length,singular:"member",plural:"members"})}`,isUserGroup:!0})})),d.map(e,(e=>{let t=this.getSelectedRole(e.id);return n.createElement(l.default,{hideRoles:this.props.hideRoles,infoText:this.getInfoText("user",e.id),canModifyMembers:this.props.canModifyMembers,canUpdateRoles:this.props.canUpdateRoles,selectedRole:this.getSelectedRoleName(t),key:e.id,rolesList:this.props.rolesList,orderedRoleList:this.props.orderedRoleList,disabledRoleTooltipText:this.props.disabledRoleTooltipText,member:e,onChange:this.props.onChange,onRemoveMember:this.props.onRemoveMember,subTitle:e.email})}))))}}},"./js/constants/ShareFlowConstants.js":function(e,t,s){s.r(t),s.d(t,{API_ENTITY_TYPE:function(){return a},API_MANAGE_ROLES_ERROR:function(){return W},API_NOT_SHARED_ERROR:function(){return $},API_NOT_SHARED_INFO_TEXT:function(){return F},API_NO_PERMISSION_ERROR:function(){return J},COLLECTION_ENTITY_TYPE:function(){return c},COLLECTION_MANAGE_ROLES_ERROR:function(){return Y},COLLECTION_NOT_SHARED_ERROR:function(){return G},COLLECTION_NOT_SHARED_INFO_TEXT:function(){return U},COLLECTION_NO_PERMISSION_ERROR:function(){return X},CORRECTION_FLOW_ENTITIES:function(){return Ie},ENTITY_NOT_FOUND:function(){return ve},ENVIRONMENT_ENTITY_TYPE:function(){return d},ENVIRONMENT_MANAGE_ROLES_ERROR:function(){return q},ENVIRONMENT_NOT_SHARED_ERROR:function(){return V},ENVIRONMENT_NOT_SHARED_INFO_TEXT:function(){return D},ENVIRONMENT_NO_PERMISSION_ERROR:function(){return Q},FETCH_FAILED_WORKSPACES:function(){return b},FETCH_PULL_REQUEST_SETTINGS_FAILED_COLLECTION:function(){return _},FETCH_ROLES_FAILED_API:function(){return y},FETCH_ROLES_FAILED_COLLECTION:function(){return R},FETCH_ROLES_FAILED_ENVIRONMENT:function(){return v},FETCH_ROLES_FAILED_MOCK:function(){return S},FETCH_ROLES_FAILED_MONITOR:function(){return T},FLAG_BASED_ACTIVITY_FEED_ENABLED_ENTITIES:function(){return Ne},MOCK_ENTITY_TYPE:function(){return m},MOCK_MANAGE_ROLES_ERROR:function(){return z},MOCK_MOVE_ONLY_MULTIPLE_WS_INFO_TEXT:function(){return Re},MOCK_NOT_SHARED_ERROR:function(){return B},MODEL_NAME:function(){return Te},MONITOR_ENTITY_TYPE:function(){return l},MONITOR_MANAGE_ROLES_ERROR:function(){return K},MONITOR_NOT_SHARED_ERROR:function(){return H},MOVE_API_LABEL:function(){return ge},MOVE_API_TEXT:function(){return ue},MOVE_COLLECTION_LABEL:function(){return pe},MOVE_COLLECTION_TEXT:function(){return de},MOVE_ENVIRONMENT_LABEL:function(){return he},MOVE_ENVIRONMENT_TEXT:function(){return me},MOVE_FAILED_API:function(){return P},MOVE_FAILED_COLLECTION:function(){return w},MOVE_FAILED_ENVIRONMENT:function(){return k},MOVE_FAILED_MOCK:function(){return x},NOT_SHARED:function(){return u},NO_MANAGE_PERMISSION:function(){return g},NO_PERMISSION:function(){return p},NO_ROLES_TO_MANAGE:function(){return ee},NO_ROLES_TO_MANAGE_API:function(){return se},NO_ROLES_TO_MANAGE_COLLECTION:function(){return te},NO_ROLES_TO_MANAGE_ENVIRONMENT:function(){return ne},NO_ROLES_TO_MANAGE_MOCK:function(){return oe},NO_ROLES_TO_MANAGE_MONITOR:function(){return re},NO_TEAM:function(){return h},NO_TEAM_FOUND_BODY:function(){return ae},NO_TEAM_FOUND_TITLE:function(){return ie},ONLY_MOVE_SUPPORTED_ENTITIES:function(){return be},PERMISSION_DENIED_ERROR:function(){return Z},PUBLIC_SHARE_LABEL:function(){return ye},REQUEST_ACCESS_BUTTON_LABEL:function(){return ce},REQUEST_ACCESS_TITLE:function(){return le},SHARE_API_LABEL:function(){return _e},SHARE_COLLECTION_LABEL:function(){return Ee},SHARE_ENVIRONMENT_LABEL:function(){return fe},SHARE_FAILED_API:function(){return j},SHARE_FAILED_COLLECTION:function(){return M},SHARE_FAILED_ENVIRONMENT:function(){return A},SHARE_UNSUPPORTED_ENTITIES:function(){return Se},SYNC_OFFLINE_MESSAGE_MANAGE:function(){return f},SYNC_OFFLINE_MESSAGE_SHARE:function(){return E},TEAM_ENTITY_TYPE:function(){return i},UPDATE_ROLES_FAILED_API:function(){return O},UPDATE_ROLES_FAILED_COLLECTION:function(){return I},UPDATE_ROLES_FAILED_ENVIRONMENT:function(){return N},UPDATE_ROLES_FAILED_MOCK:function(){return L},UPDATE_ROLES_FAILED_MONITOR:function(){return C},USER_ENTITY_TYPE:function(){return r},WORKSPACE_ENTITY_TYPE:function(){return o}});var n=s("./runtime-repl/extensible-collection/types/ExtensibleCollectionTypes.ts");const o="workspace",r="user",i="team",a="api",l="monitor",c="collection",d="environment",m="mock",u="notShared",p="noPermission",h="noTeam",g="noManagePermission",E="Make sure you’re online if you want to share",f="Make sure you’re online if you want to manage roles",_="Something went wrong while fetching pull request settings for this collection",R="Something went wrong while fetching roles for this collection",v="Something went wrong while fetching roles for this environment",y="Something went wrong while fetching roles for this API",T="Something went wrong while fetching roles for this monitor",S="Something went wrong while fetching roles for this mock server",b="Something went wrong while fetching the workspaces.",I="Something went wrong while updating roles for this collection",N="Something went wrong while updating roles for this environment",O="Something went wrong while updating roles for this API",C="Something went wrong while updating roles for this monitor",L="Something went wrong while updating roles for this mock server",M="Something went wrong while sharing this collection",A="Something went wrong while sharing this environment",j="Something went wrong while sharing this API",w="Something went wrong while sharing this collection and removing from the workspace",k="Something went wrong while sharing this environment and removing from the workspace",P="Something went wrong while sharing this API and removing from the workspace",x="Something went wrong while moving this mock server from the workspace.",U="This collection is in your personal workspace, which only you can access.",D="This environment is in your personal workspace, which only you can access.",F="This API is in your personal workspace, which only you can access.",G="To let others access it, move the collection to a team, private, or a public workspace.",V="To let others access it, move the environment to a team, private, or a public workspace.",$="To let others access it, move the API to a team, private, or a public workspace.",B="This mock server is in your personal workspace, which only you can access.",H="This monitor is in your personal workspace, which only you can access.",Y="Get editor access to manage roles on this collection.",q="Get editor access to manage roles on this environment.",W="Get editor access to manage roles on this API.",K="Get editor access to manage roles on this monitor.",z="You don’t have access to edit and manage roles on this mock server.",X="You do not have permission to share this collection",Q="You do not have permission to share this environment",J="You do not have permission to share this API",Z="You don’t have permission to perform this action",ee="No roles to manage",te="Only you have access to this collection",se="Only you have access to this API",ne="Only you have access to this environment",oe="Only you have access to this mock server",re="Only you have access to this monitor",ie="API is not shared yet",ae="Share this API to a team workspace to manage the roles",le="Looks like you don’t have access",ce="Request Access",de="This will also remove all associated monitors from this workspace.",me="Mocks, monitors and integrations in this workspace using this environment may not work as expected.",ue="The mock servers, documentation, environments, test suites and monitors linked to this API won't be affected.",pe="Share and remove collection from current workspace",he="Share and remove environment from current workspace",ge="Share and remove API from current workspace",Ee="Share collection",fe="Share environment",_e="Share API",Re="Moving this mock server to the selected workspace will remove it from all other workspaces.",ve={collection:"You can't share this collection. This might be because the collection is still being synced or might've been deleted. Please wait some time and try again",[n.EXTENSIBLE_COLLECTION]:"You can't share this collection. This might be because the collection has been deleted. Please wait some time and try again",api:"You can't share this API. This might be because the API is still being synced or might've been deleted. Please wait some time and try again",monitor:"You can't share this monitor. This might be because the monitor is still being synced or might've been deleted. Please wait some time and try again",environment:"You can't share this environment. This might be because the environment is still being synced or might've been deleted. Please wait some time and try again",mock:"You can't move this mock server as it has been deleted."},ye={collection:"Sharing here will make the collection public",api:"Sharing here will make the API public",environment:"Sharing here will make the environment public",mock:"Moving here will make the mock server public."},Te={collection:"collection",[n.EXTENSIBLE_COLLECTION]:"collection",environment:"environment",api:"API",monitor:"monitor",workspace:"workspace",mock:"mock server"},Se=["mock","monitor","EXTENSIBLE_COLLECTION"],be=["mock"],Ie=["mock"],Ne=["mock"]},"./js/modules/services/RolesService.js":function(e,t,s){s.r(t),s.d(t,{fetchEntityRoles:function(){return I},getRolesData:function(){return S},getTeamDefaultRole:function(){return O},shouldOverrideRole:function(){return N},updateEntityRoles:function(){return b},validateRoleAssignment:function(){return C}});var n=s("./js/modules/services/SyncRemoteFetcherService.js"),o=s("./js/stores/StoreManager.js"),r=s("./js/stores/CurrentUserStore.js"),i=s("./js/constants/ShareFlowConstants.js"),a=s("./monitors/services/MonitorService.js"),l=s("./mocks/services/UpdateRolesService.js"),c=s("./js/modules/services/SyncRequestService.js"),d=s("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),m=s("./runtime-repl/extensible-collection/types/ExtensibleCollectionTypes.ts"),u=s("./node_modules/lodash/lodash.js");const p="roles",h="collection",g="environment",E={collection:e=>T(i.COLLECTION_ENTITY_TYPE,e),[m.EXTENSIBLE_COLLECTION]:e=>T(m.EXTENSIBLE_COLLECTION,e),environment:e=>T(i.ENVIRONMENT_ENTITY_TYPE,e),api:e=>T(i.API_ENTITY_TYPE,e),monitor:e=>T(i.MONITOR_ENTITY_TYPE,e),mock:e=>T(i.MOCK_ENTITY_TYPE,e),workspace:e=>e?T(i.WORKSPACE_ENTITY_TYPE,e):y(i.WORKSPACE_ENTITY_TYPE)};function f(e,t,s){let{type:n,id:o,name:r}=e;return n&&o&&r?{entityType:n,entityId:o,roles:{[r]:{objects:[{objectType:t,objectId:s}]}}}:(pm.logger.error(`RolesService~_generateRoleObject: Role has information missing - Type: ${n} Id: ${o} Name: ${r}`),null)}function _(e,t){if(e){if(t)return n.default.remoteFetch(p,"object",{objectType:e,objectId:t}).then((e=>({roles:u.get(e,"listing",{})})));pm.logger.error("RolesService~fetchObjectRoles: No object ID provided")}else pm.logger.error("RolesService~fetchObjectRoles: No object type provided")}function R(e){if(e)return n.default.remoteFetch(p,"objectType",{objects:[e]}).then((e=>({roles:u.get(e,"objects",{}),rolesOrder:u.get(e,"roleOrder",{})})));pm.logger.error("RolesService~fetchObjectTypeRoles: No object type provided")}function v(e){if(e)return n.default.remoteFetch(p,"default",{objectType:e}).then((e=>({roles:u.get(e,"data.listing",{})})));pm.logger.error("RolesService~fetchObjectRoles: No object type provided")}async function y(e){if(!e)return void pm.logger.error("RolesService~fetchRoles: No object type specified to fetch roles");let t=await Promise.all([v(e),R(e)]),s=u.get(t,"[0].roles"),n=u.get(t,`[1].roles.${e}`),i=u.get(t,`[1].rolesOrder.${e}`,[]).reverse(),a=function(e,t){return u.reduce(t,((t,s,n)=>(t[n]=u.head(u.get(s,`${e}.roles`),[]),t)),{})}(e,s),l=function(e){if(u.isEmpty(e))return{};let t=u.transform(e,((e,t,s)=>{e[s]=u.map(u.get(t,"permissions",{}),"name")}),{});return u.transform(t,((e,s,n)=>{e[n]=u.transform(t,((e,t,o)=>{if(o===n)return e;u.isEmpty(u.difference(t,s))&&e.push(o)}),[])}),{})}(n),c=(0,o.resolveStoreInstance)(r.default),d=u.get(c,"id"),m=u.get(c,"team.id");return{rolesList:n,defaultRoles:a,superRoles:l,userCurrentRoles:{[d]:{type:"user",id:d,name:u.get(a,"user")}},teamCurrentRole:{[m]:{type:"team",id:m,name:u.get(a,"team")}},rolesOrder:i}}async function T(e,t){if(!e||!t)return void pm.logger.error("RolesService~fetchAssociatedRoles: No object type or id specified to fetch roles");let s=await Promise.all([y(e),_(e,t)]),n=u.get(s,"0.rolesList",{}),o=u.get(s,"0.rolesOrder",{}),r=u.get(s,"1.roles",{}),i=u.get(s,"0.defaultRoles"),a=u.get(s,"0.superRoles");return{defaultRoles:i,rolesList:n,userCurrentRoles:u.reduce(u.get(r,"user"),((e,t,s)=>(e[s]={type:"user",id:s,name:u.get(t,"roles.0")},e)),{}),teamCurrentRole:u.reduce(u.get(r,"team"),((e,t,s)=>(e[s]={type:"team",id:s,name:u.get(t,"roles.0")},e)),{}),groupCurrentRoles:u.reduce(u.get(r,"group"),((e,t,s)=>(e[s]={type:"group",id:s,name:u.get(t,"roles.0")},e)),{}),superRoles:a,rolesOrder:o}}async function S(e,t,s,n,o={}){let r,i={roles:u.chain(e).map((e=>f(e,s,n))).compact().value()};if(u.isEmpty(o)||(r=u.chain(o).map((e=>f(e,s,n))).compact().value(),!u.isEmpty(r)&&(i.roles=u.concat(i.roles,r))),!u.isEmpty(t)){let e=f(t,s,n);!u.isEmpty(e)&&i.roles.push(e)}return i}async function b(e,t,s,o,r){switch(e){case"collection":return async function(e,t,s,o){let r={id:o,data:await S(e,t,h,o,s),model:h};return n.default.remoteFetch(p,"collection",r)}(s,o,r,t);case m.EXTENSIBLE_COLLECTION:return async function(e,t,s,n){let o=await S(e,t,m.EXTENSIBLE_COLLECTION,n,s);return d.default.updateRoles(n,o)}(s,o,r,t);case"api":return async function(e,t,s,o){let r={id:o,data:await S(e,t,"api",o,s),model:"apis"};return n.default.remoteFetch(p,"api",r)}(s,o,r,t);case"monitor":return async function(e,t,s,n){let o=await S(e,t,"monitor",n,s);const r={roles:u.map(o.roles,(e=>({entityType:e.entityType,entityId:e.entityId,role:u.keys(e.roles)[0]})))};await a.default.updateMonitorRoles(n,r).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(u.get(e,"error",{}))))}(s,o,r,t);case"environment":return async function(e,t,s,o){let r={id:o,data:await S(e,t,g,o,s),model:g};return n.default.remoteFetch(p,"environment",r)}(s,o,r,t);case"mock":return async function(e,t,s,n){let o=await S(e,t,"mock",n,s);return(0,l.updateRoles)(n,o)}(s,o,r,t);default:return Promise.reject(new Error(`RolesService~updateEntityRoles: Unsupported entity provided of type ${e}`))}}async function I(e,t){if(!E[e])return Promise.reject(new Error(`RolesService~updateEntityRoles: Unsupported entity provided of type ${e}`));let{defaultRoles:s,userCurrentRoles:n,teamCurrentRole:o,rolesList:r,superRoles:i,groupCurrentRoles:a,rolesOrder:l}=await E[e](t);return{rolesList:r,userCurrentRoles:n,teamCurrentRole:o,superRoles:i,defaultRoles:s,groupCurrentRoles:a,rolesOrder:l}}function N(e,t,s){return!(u.isEmpty(e)||!t||!s)&&u.includes(e[t],s)}function O(e){let t=u.get((0,o.resolveStoreInstance)(r.default),"team.id"),s=u.get(e,"team",{});return!t||u.isEmpty(e)||u.isEmpty(s)?{}:{[t]:{id:t,name:u.get(e,"team",""),type:"team"}}}async function C(e){try{const t=await(0,c.request)("/ws/proxy",{method:"POST",data:{service:"acs",method:"POST",path:"/api/validations/role-assignment",body:{validations:e}}});return u.get(t,"body.results")}catch(e){throw e}}},"./js/modules/services/share-entities/ShareEntitiesService.js":function(e,t,s){s.r(t),s.d(t,{canEntityBeShared:function(){return T},canManageRolesOnEntity:function(){return S},createTeamAndShareCollection:function(){return R},createTeamAndShareEnvironment:function(){return v},fetchEntityMeta:function(){return _},isEntityShared:function(){return y}});s("./js/modules/pipelines/user-action.js"),s("./js/modules/model-event.js");var n=s("./js/modules/controllers/UserController.js"),o=s("./js/modules/services/UserInvitationService.js"),r=s("./js/modules/services/SyncRemoteFetcherService.js"),i=s("./js/modules/services/PermissionRemoteFetchService.js"),a=s("./js/modules/services/RemoteSyncRequestService.js"),l=s("./monitors/services/MonitorService.js"),c=s("./mocks/services/FetchMockService.js"),d=s("./js/stores/StoreManager.js"),m=s("./js/stores/ActiveWorkspaceStore.js"),u=s("./js/constants/WorkspaceVisibilityConstants.js"),p=s("./runtime-repl/extensible-collection/api/ExtensibleCollectionAPI.ts"),h=s("./runtime-repl/extensible-collection/types/ExtensibleCollectionTypes.ts"),g=s("./node_modules/lodash/lodash.js");async function E(e){return new Promise(((t,s)=>{(0,o.shareEntitiesToStartTeam)(e,((e,n)=>{e?s(e):t(n)}))}))}async function f(e,t){let s=`/${e}/${t}?meta=true`;return a.default.request(s,{method:"get"}).then((({body:e})=>e.data)).catch((e=>Promise.reject(e)))}async function _(e,t){switch(e){case"environment":case"collection":return f(e,t);case h.EXTENSIBLE_COLLECTION:const s=await p.default.get(t);return{id:s.id,name:s.title};case"api":return f("apis",t);case"monitor":return g.get(await l.default.getMonitorConfiguration({monitorId:t}),"body.data",{});case"mock":return(0,c.fetchMock)(t)}}async function R(e,t){return E({dependencies:{collections:{$diff:!0,$add:[e]}},invitations:t})}async function v(e,t){return E({dependencies:{environments:{$diff:!0,$add:[e]}},invitations:t})}async function y(e,t){if(!e||!t)return Promise.reject(new Error(`ShareEntitiesService~isEntityShared: Unsupported entity of type ${e} provided with ID: ${t}`));switch(e){case"collection":return async function(e){let t=await n.default.get(),s=g.get(t,"organizations[0].id");return!!s&&r.default.remoteFetch("share","collection",{model:"collection",id:e}).then((e=>g.get(e,"data.team")===s))}(t);case h.EXTENSIBLE_COLLECTION:return async function(e){return(0,d.resolveStoreInstance)(m.default).visibilityStatus!==u.VISIBILITY.onlyMe}();case"api":return async function(e){let t=await n.default.get(),s=g.get(t,"organizations[0].id");return!!s&&r.default.remoteFetch("share","api",{model:"apis",id:e}).then((e=>g.get(e,"data.team")===s))}(t);case"monitor":return async function(e){let t=await n.default.get(),s=g.get(t,"organizations[0].id");if(!s)return!1;const o=(0,d.resolveStoreInstance)(m.default),r=await l.default.getMonitorConfiguration({monitorId:e}),i=g.get(r,"body.data",{});return o.visibilityStatus!==u.VISIBILITY.onlyMe&&i.team===Number(s)}(t);case"environment":return async function(e){let t=await n.default.get(),s=g.get(t,"organizations[0].id");return!!s&&r.default.remoteFetch("share","environment",{model:"environment",id:e}).then((e=>g.get(e,"data.team")===s))}(t);case"mock":return async function(e){let t=await n.default.get(),s=g.get(t,"organizations[0].id");return!!s&&a.default.request("/ws/proxy",{method:"post",data:{service:"mock",method:"get",body:{},path:`/mocks/${e}/team`}}).then((({body:e})=>g.get(e,"team")===s)).catch((e=>Promise.reject(e.error||{})))}(t);default:return Promise.reject(new Error(`ShareEntitiesService~isEntityShared: Unsupported entity of type ${e} provided with ID: ${t}`))}}async function T(e,t){if(!e||!t)return Promise.reject(new Error(`ShareEntitiesService~canEntityBeShared: Unsupported entity of type ${e} provided with ID: ${t}`));switch(e){case"collection":return g.get(await(0,i.fetchCollectionShare)(t),`${t}.allowed`,!1);case"api":return g.get(await(0,i.fetchAPIShare)(t),`${t}.allowed`,!1);case"environment":return g.get(await(0,i.fetchEnvironmentShare)(t),`${t}.allowed`,!1);case"mock":return g.get(await(0,i.fetchMockMove)(t),`${t}.allowed`,!1);default:return Promise.reject(new Error(`ShareEntitiesService~canEntityBeShared: Unsupported entity of type ${e} provided with ID: ${t}`))}}async function S(e,t){if(!e||!t)return Promise.reject(new Error(`ShareEntitiesService~canManageRolesOnEntity: Unsupported entity of type ${e} provided with ID: ${t}`));switch(e){case"collection":return g.get(await(0,i.fetchCollectionManageRole)(t),`${t}.allowed`,!1);case h.EXTENSIBLE_COLLECTION:return g.get(await(0,i.fetchExtensibleCollectionManageRole)(t),`${t}.allowed`,!1);case"api":return g.get(await(0,i.fetchAPIManageRole)(t),`${t}.allowed`,!1);case"monitor":return g.get(await(0,i.fetchMonitorManageRole)(t),`${t}.allowed`,!1);case"environment":return g.get(await(0,i.fetchEnvironmentManageRole)(t),`${t}.allowed`,!1);case"mock":return g.get(await(0,i.fetchMockManageRole)(t),`${t}.allowed`,!1);default:return Promise.reject(new Error(`ShareEntitiesService~canManageRolesOnEntity: Unsupported entity of type ${e} provided with ID: ${t}`))}}},"./mocks/services/FetchMockService.js":function(e,t,s){s.r(t),s.d(t,{fetchMock:function(){return o}});var n=s("./js/modules/services/RemoteSyncRequestService.js");function o(e,t={}){let s=`/mocks/${e}?returnObject=true`;return t&&t.populate&&(s+="&populate=true"),n.default.request("/ws/proxy",{method:"post",data:{service:"mock",method:"get",body:{},path:s}}).then((({body:e})=>Promise.resolve(e))).catch((({error:e})=>Promise.reject(e)))}},"./mocks/services/UpdateRolesService.js":function(e,t,s){s.r(t),s.d(t,{updateRoles:function(){return r}});var n=s("./js/modules/services/RemoteSyncRequestService.js"),o=s("./node_modules/lodash/lodash.js");function r(e,t){if(!e)return Promise.reject(new Error("UpdateRolesService~updateRoles: mockId not provided"));if(!t||o.isEmpty(t))return Promise.reject(new Error("UpdateRolesService~updateRoles: roles not provided"));let s=`/mocks/${e}/roles`;return n.default.request("/ws/proxy",{method:"post",data:{method:"put",service:"mock",path:s,body:t}}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(o.get(e,"error",{}))))}},"./version-control/config.js":function(e,t,s){s.r(t),s.d(t,{prSettingsConfig:function(){return n}});const n={editorApprovalRequired:{enabled:!0},approvalRequired:{enabled:!0},disableOutDatedMerge:{enabled:!1}}},"./version-control/pull-request/components/MergeUsers.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return I}});var n=s("../../node_modules/react/index.js"),o=s("./node_modules/prop-types/index.js"),r=s.n(o),i=s("./node_modules/classnames/index.js"),a=s.n(i),l=s("./node_modules/@postman/sanitise-user-content/index.js"),c=s.n(l),d=s("./node_modules/react-contenteditable/lib/react-contenteditable.js"),m=s.n(d),u=s("../../node_modules/@postman/aether-icons/esmLib/src/Icon/Icon.js"),p=s("./js/components/base/EditableTag.js"),h=s("./js/components/base/Dropdowns.js"),g=s("./js/components/base/Avatar.js"),E=s("./node_modules/lodash/lodash.js");const f="editing",_=27,R=8,v=46,y=40,T=38,S=13,b=32;class I extends n.Component{constructor(e){super(e),this.state={activeInput:{value:"",index:e.tags.length,isLastNode:!0},previousValue:"",containerFocused:!0,selectedTag:null},this.handleActiveInputChange=this.handleActiveInputChange.bind(this),this.handleActiveInputClick=this.handleActiveInputClick.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this),this.handleContainerClick=this.handleContainerClick.bind(this),this.focusActiveInput=this.focusActiveInput.bind(this),this.handleSuggestionSelect=this.handleSuggestionSelect.bind(this),this.handleDelimiter=this.handleDelimiter.bind(this),this.renderTagContent=this.renderTagContent.bind(this)}componentDidMount(){this.focusActiveInput()}componentDidUpdate(e,t){!this.state.containerFocused||t.activeInput.index===this.state.activeInput.index&&e.tags.length===this.props.tags.length||this.focusActiveInput()}focusActiveInput(){E.invoke(this.refs,"contentEditable.htmlEl.focus")}getTagFromString(e){return{value:e,type:this.props.tagValidator(e)?"regular":"error"}}shouldRenderPlaceHolder(){return 1===this.props.tags.length&&0===this.state.activeInput.index&&!this.state.activeInput.value||!this.state.activeInput.value&&!this.props.tags.length}checkEmailExists(e=this.props.tags,t){for(let s=0;s<e.length;++s)if(e[s].value===t&&e[s].type!==f)return!0;return!1}handleContainerClick(e){e&&(this.state.containerFocused||this.setState({containerFocused:!0}),this.focusActiveInput());let{activeInput:t,previousValue:s}=this.state,{tags:n}=this.props,o={tags:n,activeInput:t,previousValue:s};o=this.saveActiveBadge(o),this.setState({activeInput:o.activeInput,previousValue:o.previousValue}),this.props.onTagsChange(o.tags)}handleRemove(e,t){t.stopPropagation();let s={tags:this.props.tags,activeInput:this.state.activeInput};s=this.removeEmail(s,e),this.setState({activeInput:s.activeInput}),this.props.onTagsChange(s.tags)}handleBackspaceAndDelete(e){if(!this.state.activeInput.value){if(this.state.selectedTag&&this.state.activeInput.index){let t={tags:this.props.tags,activeInput:this.state.activeInput};return t=this.removeEmail(t,e-1),this.setState({activeInput:t.activeInput,selectedTag:null}),void this.props.onTagsChange(t.tags)}this.state.activeInput.index&&this.setState({selectedTag:e})}}handleEscapeKey(e){if(!this.state.previousValue)return;let{previousValue:t}=this.state,{tags:s}=this.props,n=[...s.slice(0,e),this.getTagFromString(t),...s.slice(e+1)],o={value:"",index:n.length,isLastNode:!0};this.setState({activeInput:o,previousValue:""}),this.props.onTagsChange(n)}saveActiveBadge(e){let{tags:t,activeInput:s,previousValue:n}=e;if(!s.value||this.checkEmailExists(t,s.value)){if(!s.isLastNode){let e=[...t.slice(0,s.index),...t.slice(s.index+1)];return n="",{tags:e,activeInput:{value:"",isLastNode:!0,index:e.length},previousValue:n}}return{...e,activeInput:{...s,value:""},previousValue:""}}let o=[...t.slice(0,s.index),this.getTagFromString(s.value),...t.slice(s.index+1)];return{tags:o,activeInput:{...s,value:"",index:o.length,isLastNode:!0},previousValue:""}}editEmail(e,t){let{tags:s,activeInput:n}=e,o=s[t].value,r={...n,value:o,index:t,isLastNode:s.length-1===n.index};return s[t].type=f,{tags:s,activeInput:r,previousValue:o}}removeEmail(e,t){let{activeInput:s,tags:n}=e;return{tags:[...n.slice(0,t),...n.slice(t+1)],activeInput:{...s,index:t<s.index?s.index-1:s.index}}}handleTagClick(e,t){t.stopPropagation(),2!==t.detail||this.handleTagDoubleClick(e)}handleTagDoubleClick(e){let t={tags:this.props.tags,activeInput:this.state.activeInput,previousValue:this.state.previousValue},s=t.tags.length;t=this.saveActiveBadge(t),t.tags.length<s&&this.state.activeInput.index<e&&e--,t=this.editEmail(t,e),this.setState({activeInput:t.activeInput,previousValue:t.previousValue}),this.props.onTagsChange(t.tags)}handleDelimiter(){if(!this.state.activeInput.isLastNode||this.state.activeInput.value){let{activeInput:e,previousValue:t}=this.state,{tags:s}=this.props,n={tags:s,activeInput:e,previousValue:t};n=this.saveActiveBadge(n),this.setState({activeInput:n.activeInput,previousValue:n.previousValue}),this.props.onTagsChange(n.tags)}}handleKeyDown(e){let t=e&&e.keyCode;if(this.userSuggestionsRef)switch(t){case y:E.invoke(this.userSuggestionsRef,"focusNext");break;case T:E.invoke(this.userSuggestionsRef,"focusPrev");break;case S:e.preventDefault(),E.invoke(this.userSuggestionsRef,"selectItem")}else t!==_?t!==R&&t!==v?t!==S&&t!==b||e.preventDefault():this.handleBackspaceAndDelete(this.state.activeInput.index):this.handleEscapeKey(this.state.activeInput.index)}handleActiveInputChange(e){let t=e.target.value,s={...this.state.activeInput,value:t},n=t?E.filter(this.props.suggestions,(e=>{let s=e.email||"",n=e.name||"";return E.includes(E.toLower(s),E.toLower(t))||E.includes(E.toLower(n),E.toLower(t))})):null;this.setState({activeInput:s,suggestions:n,selectedTag:null})}handleActiveInputClick(e){e.stopPropagation()}handleSuggestionSelect(e){this.setState({activeInput:{...this.state.activeInput,value:e,isLastNode:!0}},this.handleDelimiter)}renderSuggestions(e){return!e||E.isEmpty(this.state.suggestions)?null:n.createElement(h.DropdownMenu,{fluid:!0,wrappedRef:e=>this.userSuggestionsRef=e,targetRef:this.refs.mergersInfo,onSelect:this.handleSuggestionSelect},E.map(this.state.suggestions,(e=>n.createElement(h.MenuItem,{className:"merge-user-suggestion",key:e.email,refKey:e.email},n.createElement(g.default,{size:"medium",userId:e.id}),n.createElement("div",{className:"user-suggestion-details"},n.createElement("div",{className:"user-suggestion__name"},e.name),n.createElement("div",{className:"user-suggestion__email"},e.email))))))}renderContentEditable(e,t){return n.createElement(n.Fragment,{key:t},n.createElement(m(),{ref:"contentEditable",className:"active-input",html:c()(e),onChange:this.handleActiveInputChange,onClick:this.handleActiveInputClick,onKeyDown:this.handleKeyDown}),!this.props.disableTeamSuggestions&&this.renderSuggestions(e))}renderTagContent(e,t){return this.props.renderTagContent({value:e,type:t})}render(){return n.createElement("div",{ref:"mergersInfo",onClick:this.handleContainerClick,className:a()(this.props.className,{"invite-component-focused":this.state.containerFocused},"user-invite-container")},this.shouldRenderPlaceHolder()&&n.createElement("div",{className:"user-invite-container__placeholder"},n.createElement(u.default,{name:"icon-action-search-stroke"}),n.createElement("span",{className:"user-invite-container__placeholder-text"},"Add Teammates")),this.props.tags.map(((e,t)=>e.type===f?this.renderContentEditable(this.state.activeInput.value,t):n.createElement(p.default,{content:this.renderTagContent(e.value,e.type),isSelected:t===this.state.selectedTag-1,key:t,name:"tag",value:e.value,type:e.type,onClick:this.handleTagClick.bind(this,t),onClose:this.handleRemove.bind(this,t)}))),this.state.activeInput.isLastNode&&this.renderContentEditable(this.state.activeInput.value))}}I.propTypes={onTagsChange:r().func.isRequired,tags:r().array,tagValidator:r().func,renderTagContent:r().func},I.defaultProps={tags:[],tagValidator:()=>!0,renderTagContent:function(e){return n.createElement("div",null,n.createElement("div",{className:"tag-text"},e.value))}}},"./version-control/pull-request/components/PullRequestSettings.js":function(e,t,s){s.r(t),s.d(t,{ENABLE_MERGER_ROLE:function(){return g},default:function(){return E}});var n,o=s("../../node_modules/react/index.js"),r=s("./node_modules/react-radio-group/lib/index.js"),i=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),a=s("./js/components/base/Inputs.js"),l=s("./version-control/pull-request/components/MergeUsers.js"),c=s("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),d=s("../../node_modules/@postman/aether/esmLib/src/components/Heading/Heading.js"),m=s("../../node_modules/@postman/aether-icons/esmLib/src/Icon/Icon.js"),u=s("./version-control/config.js"),p=s("./node_modules/lodash/lodash.js");const h="teammates",g=!1;let E=(0,i.observer)(n=class extends o.Component{constructor(e){super(e),this.handleToggleElement=this.handleToggleElement.bind(this)}handleToggleElement(e){this.props.onMergeCheckToggle(e)}render(){let e=this.props.mergeChecks||[];return this.props.upgradePullRequestSettings?null:this.props.pullRequestSettingsError?o.createElement("div",{className:"pull-request-settings__error"},o.createElement(m.default,{name:"icon-state-warning-stroke",size:"sm"}),o.createElement(c.default,{className:"pull-request-settings__error-text"},"Failed to load Pull Request settings. Please try again.")):o.createElement("div",{className:"pull-request-settings"},g&&o.createElement(o.Fragment,null,o.createElement("div",{className:"merge-user-heading"},"Select who can merge a pull request on this collection"),o.createElement(r.RadioGroup,{name:"mergeOptions",selectedValue:this.props.activeMergeMembers,onChange:e=>this.props.onRadioSelect(e)},o.createElement("label",{className:"list-selection-radio"},o.createElement(r.Radio,{value:"collectionEditors",className:"radio-button"}),o.createElement("span",{className:"option-text"},"Only collection editors")),o.createElement("label",{className:"list-selection-radio"},o.createElement(r.Radio,{value:h,className:"radio-button"}),o.createElement("span",{className:"option-text"},"Select Teammates"))),this.props.activeMergeMembers===h&&o.createElement("div",{className:"select-users"},o.createElement("div",{className:"select-users__hint"},"By default all the destination collection editors will be able to merge."),o.createElement(l.default,{disableTeamSuggestions:!1,suggestions:this.props.suggestions,tags:this.props.tags,onTagsChange:this.props.handleTagsChange,renderTagContent:this.props.renderTagContent,className:"mergers-selection"}))),o.createElement("div",{className:"merge-checks"},o.createElement("div",{className:"merge-checks__heading"},o.createElement(d.default,{type:"h6",text:"Set merge checks",color:"content-color-secondary"})),o.createElement("div",{className:"merge-checks__description"},o.createElement(c.default,{color:"content-color-secondary"},"A pull request on this collection can be merged when it's:")),p.map(e,((e,t)=>{if(u.prSettingsConfig[e.id]&&u.prSettingsConfig[e.id].enabled)return o.createElement("div",{key:t,className:"merge-checks__container"},o.createElement(a.Checkbox,{className:"checks-checkbox",checked:e.enabled,onChange:this.handleToggleElement.bind(this,e.id)}),o.createElement(c.default,{color:"content-color-primary",className:"checks-text"},e.description))}))))}})||n},"./node_modules/react-contenteditable/lib/react-contenteditable.js":function(e,t,s){var n,o=this&&this.__extends||(n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var s in t)t.hasOwnProperty(s)&&(e[s]=t[s])},n(e,t)},function(e,t){function s(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}),r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,s=1,n=arguments.length;s<n;s++)for(var o in t=arguments[s])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},i=this&&this.__rest||function(e,t){var s={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(s[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&(s[n[o]]=e[n[o]])}return s},a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=a(s("../../node_modules/react/index.js")),d=l(s("./node_modules/react-contenteditable/node_modules/fast-deep-equal/index.js")),m=a(s("./node_modules/prop-types/index.js"));function u(e){return e&&e.replace(/&nbsp;|\u202F|\u00A0/g," ")}function p(e){if(e.nodeType===Node.TEXT_NODE)return e;for(var t=e.childNodes,s=t.length-1;s>=0;s--){var n=p(t[s]);if(null!==n)return n}return null}function h(e){var t=p(e);if(null!==t&&null!==t.nodeValue){var s=document.createRange(),n=window.getSelection();s.setStart(t,t.nodeValue.length),s.collapse(!0),n.removeAllRanges(),n.addRange(s),e instanceof HTMLElement&&e.focus()}}var g=function(e){function t(t){var s=e.call(this,t)||this;return s.htmlEl=null,s.emitChange=s.emitChange.bind(s),s.lastHtml=t.html,s}return o(t,e),t.prototype.render=function(){var e=this,t=this.props,s=t.tagName,n=t.html,o=i(t,["tagName","html"]);return c.createElement(s||"div",r({},o,{ref:function(t){return e.htmlEl=t},onInput:this.emitChange,onBlur:this.props.onBlur||this.emitChange,contentEditable:!this.props.disabled,dangerouslySetInnerHTML:{__html:n}}),this.props.children)},t.prototype.shouldComponentUpdate=function(e){var t=this.props,s=this.htmlEl;return!s||(u(e.html)!==u(s.innerHTML)||(t.disabled!==e.disabled||t.tagName!==e.tagName||t.className!==e.className||!d.default(t.style,e.style)))},t.prototype.componentDidUpdate=function(){null!==this.htmlEl&&(this.props.html!==this.htmlEl.innerHTML&&(this.htmlEl.innerHTML=this.lastHtml=this.props.html),h(this.htmlEl))},t.prototype.emitChange=function(e){if(this.htmlEl){var t=this.htmlEl.innerHTML;if(this.props.onChange&&t!==this.lastHtml){var s=Object.assign({},e,{target:{value:t}});this.props.onChange(s)}this.lastHtml=t}},t.propTypes={html:m.string.isRequired,onChange:m.func,onBlur:m.func,disabled:m.bool,tagName:m.string,className:m.string,style:m.object},t}(c.Component);t.default=g},"./node_modules/react-contenteditable/node_modules/fast-deep-equal/index.js":function(e){var t=Array.isArray,s=Object.keys,n=Object.prototype.hasOwnProperty;e.exports=function e(o,r){if(o===r)return!0;if(o&&r&&"object"==typeof o&&"object"==typeof r){var i,a,l,c=t(o),d=t(r);if(c&&d){if((a=o.length)!=r.length)return!1;for(i=a;0!=i--;)if(!e(o[i],r[i]))return!1;return!0}if(c!=d)return!1;var m=o instanceof Date,u=r instanceof Date;if(m!=u)return!1;if(m&&u)return o.getTime()==r.getTime();var p=o instanceof RegExp,h=r instanceof RegExp;if(p!=h)return!1;if(p&&h)return o.toString()==r.toString();var g=s(o);if((a=g.length)!==s(r).length)return!1;for(i=a;0!=i--;)if(!n.call(r,g[i]))return!1;for(i=a;0!=i--;)if(!e(o[l=g[i]],r[l]))return!1;return!0}return o!=o&&r!=r}},"./node_modules/react-radio-group/lib/index.js":function(e,t,s){Object.defineProperty(t,"__esModule",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n])}return e},o=function(){function e(e,t){for(var s=0;s<t.length;s++){var n=t[s];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,s,n){return s&&e(t.prototype,s),n&&e(t,n),t}}(),r=function(e,t,s){for(var n=!0;n;){var o=e,r=t,i=s;n=!1,null===o&&(o=Function.prototype);var a=Object.getOwnPropertyDescriptor(o,r);if(void 0!==a){if("value"in a)return a.value;var l=a.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=r,s=i,n=!0,a=c=void 0}};function i(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var c=i(s("./node_modules/prop-types/index.js")),d=i(s("../../node_modules/react/index.js")),m=function(e){function t(){a(this,t),r(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments)}return l(t,e),o(t,[{key:"render",value:function(){var e=this.context.radioGroup,t=e.name,s=e.selectedValue,o=e.onChange,r={};return void 0!==s&&(r.checked=this.props.value===s),"function"==typeof o&&(r.onChange=o.bind(null,this.props.value)),d.default.createElement("input",n({},this.props,{type:"radio",name:t},r))}}]),t}(d.default.Component);t.Radio=m,m.contextTypes={radioGroup:c.default.object};var u=function(e){function t(){a(this,t),r(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments)}return l(t,e),o(t,[{key:"getChildContext",value:function(){var e=this.props;return{radioGroup:{name:e.name,selectedValue:e.selectedValue,onChange:e.onChange}}}},{key:"render",value:function(){var e=this.props,t=e.Component,s=(e.name,e.selectedValue,e.onChange,e.children),n=function(e,t){var s={};for(var n in e)t.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(s[n]=e[n]);return s}(e,["Component","name","selectedValue","onChange","children"]);return d.default.createElement(t,n,s)}}]),t}(d.default.Component);t.RadioGroup=u,u.defaultProps={Component:"div"},u.propTypes={name:c.default.string,selectedValue:c.default.oneOfType([c.default.string,c.default.number,c.default.bool]),onChange:c.default.func,children:c.default.node.isRequired,Component:c.default.oneOfType([c.default.string,c.default.func,c.default.object])},u.childContextTypes={radioGroup:c.default.object}}}]);