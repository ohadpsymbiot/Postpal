"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[143],{"./version-control/pull-request/components/PullRequestComments.js":function(e,t,s){s.r(t),s.d(t,{EmptyState:function(){return _},default:function(){return I}});var o,n=s("../../node_modules/react/index.js"),r=s("../../node_modules/@postman/aether-icons/esmLib/src/Icon/Icon.js"),i=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),a=s("../../node_modules/mobx/lib/mobx.module.js"),m=s("./node_modules/@postman/react-click-outside/dist/index.js"),l=s.n(m),d=s("./js/models/services/DashboardService.js"),c=s("./version-control/pull-request/services/CommentsService.js"),h=s("./js/components/comments/CommentContainer.js"),p=s("./js/stores/CurrentUserStore.js"),u=s("./js/stores/SyncStatusStore.js"),g=s("./js/stores/TeamUserStore.js"),y=s("./js/stores/StoreManager.js"),C=s("./appsdk/contextbar/ContextBarViewHeader.js"),f=s("./js/components/base/LoadingIndicator.js"),b=s("./js/components/base/Buttons.js"),E=s("./js/components/base/Text.js"),v=s("./js/utils/UserHelper.js"),S=s("./collaboration/utils/commentUtils.js"),j=s("./node_modules/lodash/lodash.js");function w(){return w=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o])}return e},w.apply(this,arguments)}function _(e){return n.createElement("div",{className:"pull-request-container__empty-state"},n.createElement("div",{className:"sidebar-empty-state__icon-container"},n.createElement(r.default,{className:"sidebar-empty-state__icon",size:"large",color:"content-color-tertiary",name:e.icon})),n.createElement("div",{className:"sidebar-empty-state__title"},n.createElement("h4",null,e.title)),n.createElement("div",{className:"sidebar-empty-state__body"},n.createElement(E.default,{type:"body-medium",value:e.message})))}let I=(0,i.observer)(o=l()(o=class extends n.Component{constructor(e){super(e),this.state={input:"",open:e.open,creating:!1,updating:[],deleting:[],loadError:null,deleteError:null,updateError:null,creatorDetails:null,loading:this.props.loadingComments,comments:{},hasError:!1,showEntityComments:!1,showPullRequestComments:j.get(this.props,"contextData.showComments"),modelId:j.get(this.props,"contextData.modelId")||this.props.modelId,model:j.get(this.props,"contextData.model")||this.props.model,anchor:this.props.anchor},this.handleFocus=this.handleFocus.bind(this),this.handleFetch=this.handleFetch.bind(this),this.handleUpdate=this.handleUpdate.bind(this),this.handleCreate=this.handleCreate.bind(this),this.handleRetry=this.handleRetry.bind(this),this.handleDelete=this.handleDelete.bind(this),this.setListRef=this.setListRef.bind(this),this.parseError=this.parseError.bind(this),this.parseTags=this.parseTags.bind(this),this.isOnline=this.isOnline.bind(this),this.initiate=this.initiate.bind(this),this.handleClickOutside=this.handleClickOutside.bind(this),this.handleHideComments=this.handleHideComments.bind(this),this.toggleEntityComments=this.toggleEntityComments.bind(this),this.processComments=this.processComments.bind(this)}componentDidMount(){this.props.entityComments?this.processComments(this.props.comments):this.initiate()}initiate(){this.fetchCommentDisposer=(0,a.reaction)((()=>(0,y.resolveStoreInstance)(u.default).isSocketConnected),(e=>{e&&this.handleFetch()}),{fireImmediately:!0})}componentWillUnmount(){this.fetchCommentDisposer&&this.fetchCommentDisposer()}UNSAFE_componentWillReceiveProps(e){(!this.props.loading&&e.loading||this.props.loading&&!e.loading)&&this.setState({loading:e.loading}),(j.get(this.props,"comments.comments")||[]).length>0&&this.processComments(this.props.comments)}handleClickOutside(){this.handleHideComments()}toggleEntityComments(){this.setState((e=>({showEntityComments:!e.showEntityComments})))}handleHideComments(){this.state.showEntityComments&&this.setState({showEntityComments:!1})}scrollToEnd(){if(!this.listRef)return;const e=this.listRef.scrollHeight-this.listRef.clientHeight;this.listRef.scrollTop=e>0?e:0}handleFocus(){this.props.focusRightOverlay&&this.props.focusRightOverlay()}parseTags(e,t){return e?Object.keys(e).reduce(((s,o)=>(s[o]={...e[o]||{},id:`${j.get(e,[o,"id"])}`,userDetails:j.get(t,j.get(e,[o,"id"]))},s)),{}):null}parseError(e){return e?e.message:""}isOnline(){return(0,y.resolveStoreInstance)(u.default).isSocketConnected}setListRef(e){this.listRef=e}handleUpdate(e){if(this.isOnline())return this.setState((t=>({updating:j.union(t.updating,[e.id])}))),c.default.updateComment(e.id,e.body,e.tags).then((t=>{this.setState((s=>({hasError:!1,updating:j.remove(s.updating,e.id),comments:{...this.state.comments||{},[j.get(t,"comment.id")]:{...this.state.comments[j.get(t,"comment.id")],body:j.get(t,"comment.body"),tags:this.parseTags(j.get(t,"comment.tags")),updatedAt:j.get(t,"comment.updatedAt")}}}))),this.handleFocus()})).catch((t=>{pm.toasts.error(this.parseError(t)||"An error occurred while updating the comment.",{title:"Unable to save comment"}),this.setState((s=>({hasError:!0,updating:j.remove(s.updating,e.id),updatingError:this.parseError(t)}))),this.handleFocus()}));pm.toasts.error("You need to be online to update comment.")}handleCreate(e,t){this.isOnline()?(this.setState({creating:!0}),c.default.createComment(this.state.model,this.state.modelId,e,t,this.state.anchor||j.get(this.props,"contextData.anchor")).then((e=>{this.setState({hasError:!1,creating:!1,comments:{...this.state.comments||{},[j.get(e,"comment.id")]:{body:j.get(e,"comment.body"),tags:this.parseTags(j.get(e,"comment.tags")),id:j.get(e,"comment.id"),updatedAt:j.get(e,"comment.updatedAt"),createdAt:j.get(e,"comment.createdAt"),createdBy:j.get(e,"comment.createdBy"),creatorDetails:{friendly:(0,y.resolveStoreInstance)(p.default).name||(0,y.resolveStoreInstance)(p.default).username||(0,y.resolveStoreInstance)(p.default).email,id:(0,y.resolveStoreInstance)(p.default).id,profilePicUrl:(0,y.resolveStoreInstance)(p.default).profile_pic_url}}}},this.scrollToEnd)})).catch((e=>{this.setState({creating:!1,hasError:!0}),pm.toasts.error(this.parseError(e)||"An error occurred while creating a comment.",{title:"Unable to save comment"})}))):pm.toasts.error("You need to be online to comment.")}handleDelete(e){if(this.isOnline())return this.setState((t=>({deleting:j.union(t.deleting,[e])}))),c.default.deleteComment(e).then((()=>{this.setState((t=>({deleting:j.remove(t.deleting,e),comments:j.omit(this.state.comments,[e])}))),this.handleFocus()})).catch((t=>{this.setState((s=>({deleting:j.remove(s.deleting,e),deletingError:this.parseError(t)}))),pm.toasts.error(this.parseError(t)||"An error occurred while deleting the comment."),this.handleFocus()}));pm.toasts.error("You need to be online to delete comment.")}processComments(e,t){const s=(e.comments||[]).filter((e=>e.anchor===this.state.anchor||j.get(this.props,"contextData.anchor")));this.setState({comments:s&&s.reduce(((t,s)=>(e.createdBy&&e.createdBy[s.createdBy]&&(t[s.id]=Object.assign(s,{tags:this.parseTags(s.tags,e.users),creatorDetails:{...e.createdBy[s.createdBy],friendly:e.createdBy[s.createdBy].friendly||e.createdBy[s.createdBy].username||e.createdBy[s.createdBy].email,id:`${e.createdBy[s.createdBy].id}`,profilePicUrl:e.createdBy[s.createdBy].profilePicUrl}})),t)),{}),updating:s,deleting:s,...t},this.scrollToEnd),this.handleFocus()}handleFetch(){const{showEntityComments:e}=this.state;this.setState({loading:!0,loadError:null,showEntityComments:!1}),c.default.getComments(this.state.model,this.state.modelId,this.state.anchor||j.get(this.props,"contextData.anchor")).then((t=>{this.processComments(t,{loading:!1,showEntityComments:e})})).catch((t=>{this.setState({loading:!1,loadError:this.parseError(t),showEntityComments:e}),this.handleFocus()}))}handleRetry(){(0,y.resolveStoreInstance)(u.default).isSocketConnected?this.handleFetch():pm.toasts.error("You can perform this action once you're back online",{title:"You are offline"})}render(){const e=(0,y.resolveStoreInstance)(p.default),t=(0,y.resolveStoreInstance)(g.default),s={name:e.name,isLoggedIn:e.isLoggedIn,userName:e.username_email,id:e.id,organizations:e.organizations,teamSyncEnabled:e.teamSyncEnabled,profilePicUrl:e.profile_pic_url},o=(0,S.getUsersToTag)(),i=(0,v.isUserAdmin)(s),a=!(0,y.resolveStoreInstance)(u.default).isSocketConnected,m=j.reduce(t.values,((e,t)=>(e[t.id]={name:t.name,id:t.id,username:t.username,email:t.email,profilePicUrl:t.profilePicUrl},e)),{});return this.state.showPullRequestComments&&a?n.createElement("div",{className:j.get(this.props,"contextData.className")||this.props.className},n.createElement(C.ContextBarViewHeader,{title:this.props.title,onClose:this.props.onClose}),n.createElement(_,{icon:"icon-state-offline-stroke",title:"Check your connection",message:"Get online to view comments"})):n.createElement("div",{className:j.get(this.props,"contextData.className")||this.props.className},"pullRequest"===j.get(this.props,"contextData.type")?n.createElement(C.ContextBarViewHeader,{title:this.props.title,onClose:this.props.onClose}):n.createElement("div",{className:"pull-request-entity-comments__label",onClick:this.toggleEntityComments},n.createElement(r.default,{name:"icon-action-comments-stroke",color:"content-color-secondary",className:"pull-request-entity-comments__icon"}),this.state.loading?n.createElement(f.default,{className:"pull-request-entity-comments__loading"}):n.createElement(b.Button,{className:"pull-request-entity-comments__count",size:"small"},Object.keys(this.state.comments||{}).length)),(this.state.showEntityComments||this.state.showPullRequestComments)&&n.createElement(h.Comments,w({addCommentPermission:!0},j.pick(this.state,["updating","creating","deleting","loadError","deleteError","updateError"]),{className:j.get(this.props,"contextData.className")||this.props.commentClassName,data:j.sortBy(this.state.comments||[],"createdAt"),isAdmin:i,isOffline:a,loading:this.state.loading,setListRef:this.setListRef,teamUsers:o,teamUsersMap:m,user:s,onClose:this.props.onClose||this.handleHideComments,onCommentCreate:this.handleCreate,onCommentDelete:this.handleDelete,onCommentUpdate:this.handleUpdate,onRetry:this.handleRetry,onUserClick:e=>{(0,d.openTeamUserProfile)(e,"_blank")},hasError:this.state.hasError})))}})||o)||o},"./version-control/pull-request/services/CommentsService.js":function(e,t,s){s.r(t);var o=s("./js/utils/PostmanGatewayService.js"),n=s("./js/modules/services/RemoteSyncRequestService.js"),r=s("./node_modules/querystring-browser/querystring.js"),i=s.n(r),a={getComments(e,t,s){if(!t||!e)return pm.logger.error("CommentsService~getComments: modelId is a mandatory parameter"),Promise.reject(new Error("Something went wrong while fetching comments."));const n={populate:"createdBy",model:e,modelId:t,anchor:s};return o.default.request("/ws/proxy",{method:"post",body:{service:"annotation",method:"get",body:{},path:`/comments?${i().stringify(n)}`}},{parsedResponse:!0,transformRequestJson:!0}).then((({body:e})=>Promise.resolve(e))).catch((({error:e})=>Promise.reject(e)))},createComment(e,t,s,o,r){if(!e||!t)return pm.logger.error("CommentsService~createComments: modelId is a mandatory parameter"),Promise.reject(new Error("Something went wrong while creating comments."));let i={model:e,modelId:t,body:s,tags:o,version:"1.0.0"};return r&&(i.anchor=r),n.default.request("/ws/proxy",{method:"post",data:{service:"annotation",method:"post",body:i,path:"/comments"}}).then((({body:e})=>Promise.resolve(e))).catch((({error:e})=>Promise.reject(e)))},updateComment:(e,t,s)=>e?n.default.request("/ws/proxy",{method:"post",data:{service:"annotation",method:"put",body:{body:t,tags:s},path:`/comments/${e}`}}).then((({body:e})=>Promise.resolve(e))).catch((({error:e})=>Promise.reject(e))):(pm.logger.error("CommentsService~updateComments: commentId is a mandatory parameter"),Promise.reject(new Error("Something went wrong while updating comments."))),deleteComment:e=>e?n.default.request("/ws/proxy",{method:"post",data:{service:"annotation",method:"delete",path:`/comments/${e}`}}).then((({body:e})=>Promise.resolve(e.data))).catch((({error:e})=>Promise.reject(e))):(pm.logger.error("CommentsService~deleteComments: commentId is a mandatory parameter"),Promise.reject(new Error("Something went wrong while deleting comments.")))};t.default=a}}]);