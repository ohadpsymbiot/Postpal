"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[142],{"../../node_modules/@postman/aether/esmLib/src/components/Illustration/illustrations/MergeConditions.js":function(e,t,n){n.r(t),n.d(t,{default:function(){return r}});var s=n("../../node_modules/react/index.js"),o=n("../../node_modules/@postman/aether/esmLib/src/components/Illustration/Illustration.js");function r(){return s.createElement(o.default,{name:"illustration-merge-conditions"})}},"./version-control/pull-request/components/MergeConditions.js":function(e,t,n){n.r(t),n.d(t,{EmptyState:function(){return q},default:function(){return w}});var s=n("../../node_modules/react/index.js"),o=n("./node_modules/lodash/lodash.js"),r=n.n(o),a=n("../../node_modules/@postman/aether/esmLib/src/components/Heading/Heading.js"),l=n("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),i=n("../../node_modules/@postman/aether/esmLib/src/components/Illustration/illustrations/InternalServerError.js"),c=n("../../node_modules/@postman/aether/esmLib/src/components/Illustration/illustrations/MergeConditions.js"),u=n("../../node_modules/@postman/aether-icons/esmLib/src/Icon/Icon.js"),m=n("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),d=(n("./version-control/pull-request/services/PullRequestService.js"),n("./appsdk/contextbar/ContextBarViewHeader.js")),p=(n("./js/components/base/LoadingIndicator.js"),n("./js/components/base/Text.js"),n("./js/components/base/Buttons.js")),g=n("./appsdk/components/link/Link.js"),f=n("./js/stores/SyncStatusStore.js"),h=n("./js/stores/StoreManager.js"),b=n("./version-control/common/index.js"),v=n("./version-control/pull-request/hooks/usePullRequestMergeSettingsViewPermission.js");const j="You can perform this action once you're back online",y=m.default.span`
  font-size: var(--text-size-m);
  font-weight: var(--text-weight-medium);
  color: var(--content-color-brand);
  cursor: ${e=>e.disabled?"not-allowed":"pointer"};
  opacity: ${e=>e.disabled&&"0.5"};
  pointer-events: ${e=>e.disabled&&"not-allowed"};
`,_=m.default.div`
  margin: var(--spacing-l) 0;
`,E=m.default.div`
  height: 56px;
  width: 56px;
  background-color: var(--background-color-tertiary);
  border-radius: var(--border-radius-max);
  display: flex;
  align-items: center;
  justify-content: space-around;

  & svg,
  & i {
    height: ${({theme:e})=>e["size-m"]};
    width: ${({theme:e})=>e["size-m"]};
  }
`,x=m.default.div`
  margin-top: ${({theme:e})=>e["spacing-l"]};
  maring-bottom: ${({theme:e})=>e["spacing-l"]};
`,k=m.default.div`
  margin-top: ${({theme:e})=>e["spacing-xs"]};
  margin-bottom: ${({theme:e})=>e["spacing-l"]};
  text-align: center;
`;function q(e){return s.createElement("div",{className:"pull-request-container__empty-state"},e.icon&&s.createElement(E,{className:"sidebar-empty-state__icon-container"},s.createElement(u.default,{className:"sidebar-empty-state__icon",size:"large",color:"content-color-tertiary",name:e.icon})),e.illustration&&e.illustration,s.createElement(x,null,s.createElement(a.default,{text:e.title,type:"h4",hasBottomSpacing:!0})),s.createElement(k,null,s.createElement(l.default,{type:"body-medium",text:e.message,color:"content-color-secondary"})),e.showAction&&s.createElement(p.Button,{type:"primary",onClick:()=>e.actionHandler&&e.actionHandler(),size:"small",disabled:e.isOffline||e.disableNavigation,tooltip:e.primaryActionTooltip||e.isOffline&&j,tooltipPlacement:"bottom"},e.navigationParams?s.createElement(g.default,e.navigationParams,e.actionTitle):e.actionTitle),e.showSecondaryAction&&s.createElement(_,null,s.createElement(b.CustomTooltip,{align:"bottom",body:e.isOffline&&j},s.createElement(y,{onClick:()=>e.secondaryActionHandler&&e.secondaryActionHandler(),disabled:e.isOffline},e.secondaryActionTitle))))}function w(e){const t=e.contextData.mergeChecks||[],n=e.contextData.errorLoadingMergeChecks,o=!(0,h.resolveStoreInstance)(f.default).isSocketConnected,a=r().get(e,"contextData.pullRequest.destination.id"),l=r().get(e,"contextData.pullRequest.entity"),{permission:m,error:p}=(0,v.default)(l,a);return s.createElement(s.Fragment,null,s.createElement(d.ContextBarViewHeader,{title:e.title,onClose:e.onClose}),s.createElement("section",{className:"pull-request-meta__section pull-request-merge-check__section"},n&&s.createElement(q,{showAction:!0,actionHandler:()=>e.contextData.errorActionHandler(r().get(e.contextData,"pullRequest.id")),actionTitle:"Retry",illustration:s.createElement(i.default,null),title:"Unable to load merge settings",message:n&&n.message||"We were unable to fetch merge settings. Please try again later.",isOffline:o}),!n&&!t.length&&s.createElement(q,{showAction:!0,illustration:s.createElement(c.default,null),actionTitle:"Open Merge Settings",title:"Set merge conditions for this collection",message:"Maintain version control with clear, simple rules for when a pull request can be merged.",navigationParams:m&&!o&&{to:{routeIdentifier:"build.roles.manage",queryParams:{collection:r().get(e.contextData,"pullRequest.toId")}}},disableNavigation:!m,primaryActionTooltip:o?j:"boolean"==typeof m&&!m||p?"You cannot view merge settings for this pull request.":void 0,id:r().get(e.contextData,"pullRequest.toId"),isOffline:o}),!n&&!!t.length&&s.createElement(s.Fragment,null,s.createElement("span",{className:"pull-request__merge-checks-header"},"This pull request:"),s.createElement("ul",{className:"pull-request-settings-list"},t.map((e=>s.createElement("div",{className:"pull-request-merge-check",key:e.id},e.satisfied?s.createElement(u.default,{name:"icon-state-success-stroke",color:"base-color-success",size:"large"}):s.createElement(u.default,{name:"icon-state-error-stroke",color:"base-color-warning",size:"large"}),s.createElement("span",{className:"pull-request-merge-check__description"},e.description))))))))}},"./version-control/pull-request/hooks/usePullRequestMergeSettingsViewPermission.js":function(e,t,n){n.r(t),n.d(t,{default:function(){return l}});var s=n("../../node_modules/react/index.js"),o=n("./version-control/pull-request/services/PullRequestService.js"),r=n("./js/stores/CurrentUserStore.js"),a=n("./js/stores/StoreManager.js");function l(e,t){const[n,l]=(0,s.useState)(!1),[i,c]=(0,s.useState)(),[u,m]=(0,s.useState)(),d=(0,s.useRef)(),p=(0,a.resolveStoreInstance)(r.default).id;return(0,s.useEffect)((()=>(d.current=!0,(async()=>{try{d.current&&l(!0);const n=await(0,o.checkPullRequestMergeSettingViewPermission)({model:e,modelId:t,userId:p});d.current&&c(n)}catch(e){d.current&&m(e.error||e)}finally{d.current&&l(!1)}})(),()=>{d.current=!1})),[]),{isLoading:n,permission:i,error:u}}}}]);