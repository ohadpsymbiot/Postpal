"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[96],{"./api-dev/components/api/api-context-bar/CommentsContextBarView/APICommentsContextBarView.js":function(e,t,o){o.r(t),o.d(t,{default:function(){return w}});var s,n=o("../../node_modules/react/index.js"),r=o("../../node_modules/mobx/lib/mobx.module.js"),a=o("../../node_modules/mobx-react/dist/mobx-react.module.js"),i=o("./js/stores/SyncStatusStore.js"),l=o("./js/stores/TeamUserStore.js"),m=o("./js/stores/CurrentUserStore.js"),d=o("./js/stores/AnnotationStore.js"),c=o("./api-dev/stores/APIListStore.js"),h=o("./js/stores/StoreManager.js"),p=o("./js/stores/CommentStore.js"),u=o("./js/utils/UserHelper.js"),f=o("./collaboration/services/ContextBarCommentService.js"),C=o("./collaboration/components/comments/InlineCommentDrawer.js"),v=o("./node_modules/classnames/index.js"),g=o.n(v),S=o("./js/modules/services/InlineCommentTransformerService.js"),I=o("./appsdk/contextbar/ContextBarViewHeader.js"),b=o("./api-dev/components/common/APIOffline/APIOffline.js"),j=o("./collaboration/services/PermissionService.js"),x=o("./collaboration/constants/comments.js"),E=o("./collaboration/services/CollaborationNavigationService.js"),_=o("./js/services/NavigationService.js"),y=o("./collaboration/utils/commentUtils.js"),D=o("./node_modules/lodash/lodash.js");let w=(0,a.observer)(s=class extends n.Component{constructor(e){super(e),this.state={loading:!0,loadError:!1,hasError:!1,isOpenFilterSelected:!0,isResolvedFilterSelected:!1,isScrollable:!0},this.rightOverlayModalRef=null,this.parseError=this.parseError.bind(this),this.handleRetry=this.handleRetry.bind(this),this.setCommentDrawerRef=this.setCommentDrawerRef.bind(this),this.stopScroll=this.stopScroll.bind(this),this.handleClose=this.handleClose.bind(this)}async componentDidMount(){this.setState({loading:!0,loadError:!1}),S.default.handleAnalytics("api","view","api"),f.default.getComments({model:this.props.contextData.commentModel,modelId:this.props.contextData.commentModelId}).then((()=>{requestIdleCallback((()=>{(0,h.resolveStoreInstance)(p.default).setLoaded(!0);const e=(0,h.resolveStoreInstance)(p.default),t=e.activeCommentId,o=e.find(t);!t||D.get(o,"anchor","").split("/").length<4?this.setState({loading:!1,loadError:!1}):(0,r.when)((()=>!(0,h.resolveStoreInstance)(c.default).isStoreHydrating),(()=>{const e=this.props.contextData.commentModelId,s=(0,h.resolveStoreInstance)(c.default).find(e),n=D.get(s,"childEntities.values"),r=D.get(n,"length",0);for(let s=0;s<r;s++){const r=n[s],a=D.get(r,"relationsStore.relations.schema");if(D.head(Object.keys(a))===o.anchor.split("/")[3]){const o={comment:t,ctx:"comments"};_.default.transitionTo("build.apiVersion",{apiId:e,versionId:r.id},o,{tabOptions:{openIn:this.props.editorId}});break}}}))}))})).catch((e=>{this.setState({loading:!1,loadError:!0})}));let e=this.props.contextData.commentModelId,{addComment:t,deleteComment:o,resolveComment:s}=await(0,j.fetchPermissions)(["addComment","deleteComment","resolveComment"],e,x.MODEL_TYPE.API);this.setState({addCommentPermission:t,deleteCommentPermission:o,resolveCommentPermission:s})}componentDidUpdate(){if(!this.state.isResolvedFilterSelected){const e=(0,h.resolveStoreInstance)(p.default),t=e.find(e.activeCommentId),o=(0,h.resolveStoreInstance)(d.default).find(D.get(t,"annotationId"));D.get(o,"status.resolved")&&this.handleResolvedFilter()}}parseError(e){return e.isFriendly?e.message:""}handleRetry(){return this.setState({loading:!0,loadError:!1}),f.default.getComments({model:this.props.contextData.commentModel,modelId:this.props.contextData.commentModelId}).then((()=>{this.setState({loading:!1,loadError:!1})})).catch((e=>{this.setState({loading:!1,loadError:!0})}))}setCommentDrawerRef(e){this.commentDrawerRef=e,this.commentDrawerRef&&this.forceUpdate()}stopScroll(e){this.setState({isScrollable:!e})}handleClose(){this.props.onClose&&this.props.onClose(),E.default.removeCommentQueryParam()}render(){let e,{commentModel:t,commentModelId:o,schemaId:s}=this.props.contextData||{};e=D.filter((0,h.resolveStoreInstance)(p.default).values,(e=>e.model===t&&e.modelId===o));const r=D.sortBy(D.filter(e,(e=>!e.anchor||e.anchor===`${t}/${o}`)),"createdAt")||[],a=this.props.contextData.model.name,d=(0,h.resolveStoreInstance)(m.default)||{},c=((0,h.resolveStoreInstance)(l.default),(0,y.getUsersToTag)()),f=D.reduce(c,((e,t)=>(e[t.id]={name:t.name,id:t.id,username:t.username,email:t.email,profilePicUrl:t.profilePicUrl,roles:t.roles},e)),{}),v=Object.values(f),S=!(0,h.resolveStoreInstance)(i.default).isSocketConnected,j=(0,u.isUserAdmin)(d),x=(D.reduce((e||[]).reverse(),((e,t)=>(e.includes(t.annotationId)||e.push(t.annotationId),e)),[]),(0,h.resolveStoreInstance)(p.default)),E=x.find(x.activeCommentId),_=x.setActiveCommentId;return S&&this.state.loading?n.createElement(n.Fragment,null,n.createElement(I.ContextBarViewHeader,{onClose:this.props.onClose,title:"Comments"}),n.createElement(b.default,{origin:"context-bar"})):n.createElement("div",{className:g()({"comment-drawer-container":!0,"no-scroll":!this.state.isScrollable}),ref:this.setCommentDrawerRef,"data-testid":"api-comments"},n.createElement(I.ContextBarViewHeader,{onClose:this.handleClose,title:"Comments"}),n.createElement("div",{className:"comment-drawer"},n.createElement(C.default,{editor:D.get(this.props.contextData,"editor"),comments:e,requestComments:r,isOpenFilterSelected:!0,addCommentPermission:this.state.addCommentPermission,deleteCommentPermission:this.state.deleteCommentPermission,isAdmin:j,isOffline:S,loading:this.state.loading,loadError:this.state.loadError,hasError:this.state.hasError,teamUsers:v,teamUsersMap:f,onRetry:this.handleRetry,user:d,title:a,stopScroll:this.stopScroll,commentRef:this.commentDrawerRef,commentLinkDisabled:D.get(this.props.contextData,"commentLinkDisabled"),model:"api",modelId:D.get(this.props.contextData,"commentModelId"),origin:"contextBar",anchor:D.get(this.props.contextData,"anchor"),activeComment:E,setActiveComment:_})))}})||s},"./api-dev/components/common/APIOffline/APIOffline.js":function(e,t,o){o.r(t),o.d(t,{default:function(){return a}});var s=o("../../node_modules/react/index.js"),n=o("../../node_modules/@postman/aether/esmLib/src/components/Illustration/illustrations/CheckInternetConnection.js"),r=o("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js");class a extends s.Component{getHeadingColor(){return"sidebar"===this.props.origin?"content-color-secondary":"content-color-primary"}render(){return s.createElement("div",{className:`api-offline ${this.props.origin}`},s.createElement("div",{className:"api-offline__blank-state"},s.createElement(n.default,null)),s.createElement("div",{className:"api-offline__content"},s.createElement("div",{className:"api-offline__content__header"},s.createElement(r.default,{color:this.getHeadingColor(),typographyStyle:{fontSize:"text-size-l",fontWeight:"text-weight-medium",lineHeight:"line-height-m"}},"Unable to load data as you're offline")),s.createElement("div",{className:"api-offline__content__sub-header"},s.createElement(r.default,{color:"content-color-secondary",typographyStyle:{fontSize:"text-size-m",fontWeight:"text-weight-regular",lineHeight:"line-height-m"}},"Your data may not be up to date until youâ€™re back online."))))}}}}]);