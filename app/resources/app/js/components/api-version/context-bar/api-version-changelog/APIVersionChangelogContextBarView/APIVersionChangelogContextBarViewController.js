"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[94],{"./api-dev/components/api-version/context-bar/api-version-changelog/APIVersionChangelogContextBarView/APIVersionChangelogContextBarViewController.js":function(e,t,o){o.r(t),o.d(t,{default:function(){return b}});var r,i,n,a,s,l,c=o("./node_modules/@postman/date-helper/index.js"),d=o.n(c),h=o("../../node_modules/mobx/lib/mobx.module.js"),g=o("../../packages/api-design/schema-changelog/index.js"),p=o("./js/stores/CollectionActivityFeedStore.js"),u=o("./api-dev/util/error.js"),m=o("./node_modules/lodash/lodash.js");function f(e,t,o,r){o&&Object.defineProperty(e,t,{enumerable:o.enumerable,configurable:o.configurable,writable:o.writable,value:o.initializer?o.initializer.call(r):void 0})}function y(e,t,o,r,i){var n={};return Object.keys(r).forEach((function(e){n[e]=r[e]})),n.enumerable=!!n.enumerable,n.configurable=!!n.configurable,("value"in n||n.initializer)&&(n.writable=!0),n=o.slice().reverse().reduce((function(o,r){return r(e,t,o)||o}),n),i&&void 0!==n.initializer&&(n.value=n.initializer?n.initializer.call(i):void 0,n.initializer=void 0),void 0===n.initializer&&(Object.defineProperty(e,t,n),n=null),n}let b=(i=y((r=class{constructor(){f(this,"schemaChangelog",i,this),f(this,"collectionChangelogStores",n,this),f(this,"model",a,this),f(this,"isSchemaLoadingMore",s,this),f(this,"isSchemaLoadingMoreError",l,this)}async fetchChangelog(e){try{this.setCollectionChangelogStores([]),this.schemaChangelog=null,this.setIsSchemaLoadingMore(!1),this.setIsSchemaLoadingMoreError(null),this.model=e;let t=[],o=[];const r=this.handleFetchSchemaChangelog(e);o.push(r),this.handleFetchCollectionChangelog(e,o);const i=await Promise.all(o);this.schemaChangelog=m.head(i),t=this.schemaChangelog.data.map((e=>({...e,changeType:"schema",enableRestore:!0}))),m.map(this.collectionChangelogStores,(e=>{const o=m.map(m.get(e,"feeds",[]),(t=>({...t,changeType:"collection",meta:e.meta,collectionUid:m.get(e,"collectionUid"),enableRestore:!(t.id===m.head(m.get(e,"feeds",[])).id)})));t=m.concat(t,o)})),t=m.chain(t).sortBy("createdAt").reverse().value();const n=await e.getAllReleasesForVersion();return this.groupChangesByRelease(t,n)}catch(e){throw e}}groupChangesByRelease(e,t){let o=t;o.unshift({name:"Changes",id:"unreleasedChanges"});let r=0,i=0;for(;r<e.length;){const t=e[r],n=o[i],a=o[i+1];i===o.length-1||t.createdAt>a.createdAt?(n.changelog?n.changelog.push(t):n.changelog=[t],r++):i++}return o=o.map((e=>{const t=d().getDateGroups(e.changelog,"createdAt","MMMM D, YYYY");return{...e,changesGroupedByDate:t}})),o}handleFetchSchemaChangelog(e,t=null){const o=m.get(e,"schema.isSchema"),r=m.get(e,"schema.apiDefinitionId");return o&&r?(0,g.fetchChangelog)(r,t):r?(0,g.fetchDefinitionChangelog)(r,t):Promise.resolve({data:[]})}handleFetchCollectionChangelog(e,t){m.map(this.fetchCollectionIds(e),(async e=>{const o=new p.default;t.push(o.initialize(e)),this.collectionChangelogStores.push(o)}))}fetchCollectionIds(e){const t=new Set;return m.map(e.collectionBasedRelations,(e=>{t.add(e.modelId)})),Array.from(t)}get isLoadingMore(){return!m.every(this.collectionChangelogStores,{isLoadingMore:!1})||this.isSchemaLoadingMore}get isLoaded(){let e=!0;for(let t of this.collectionChangelogStores)e=e&&0===m.get(t,"meta.next_max_id");return e&&!m.get(this.schemaChangelog,"meta.cursor.next")}get loadMoreError(){for(let e of this.collectionChangelogStores)if("loadMore"===m.get(e,"error.type"))return e.error;if(this.isSchemaLoadingMoreError)return{...this.isSchemaLoadingMoreError,type:"loadMore"}}setIsSchemaLoadingMore(e){this.isSchemaLoadingMore=e}setIsSchemaLoadingMoreError(e){this.isSchemaLoadingMoreError=e}setCollectionChangelogStores(e){this.collectionChangelogStores=e}async loadMore(){try{if(this.isLoaded||this.isLoadingMore)return;this.setIsSchemaLoadingMore(!0),this.setIsSchemaLoadingMoreError(null);let e=null;try{if(m.get(this.schemaChangelog,"meta.cursor.next")){const e=await this.handleFetchSchemaChangelog(this.model,m.get(this,"schemaChangelog.meta.cursor.next")),t=m.concat(m.get(e,"data",[]),m.get(this.schemaChangelog,"data",[]));this.schemaChangelog=Object.assign({},e,{data:t})}e=this.schemaChangelog.data.map((e=>({...e,changeType:"schema",enableRestore:!0})))}catch(e){throw this.setIsSchemaLoadingMoreError({...e,entityType:"schema"}),e}for(const e of this.collectionChangelogStores){if(!m.get(e,"loadMore"))return;try{await e.loadMore()}catch(e){throw e}}m.map(this.collectionChangelogStores,(t=>{const o=m.map(m.get(t,"feeds",[]),(e=>({...e,changeType:"collection",meta:t.meta,collectionUid:m.get(t,"collectionUid"),enableRestore:!(e.id===m.head(m.get(t,"feeds",[])).id)})));e=m.concat(e,o)})),e=m.chain(e).sortBy("createdAt").reverse().value();const t=await this.model.getAllReleasesForVersion(),o=this.groupChangesByRelease(e,t);return this.setIsSchemaLoadingMore(!1),o}catch(e){(0,u.handleError)(e,"There was an unexpected error while loading more changes")}}}).prototype,"schemaChangelog",[h.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),n=y(r.prototype,"collectionChangelogStores",[h.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),a=y(r.prototype,"model",[h.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),s=y(r.prototype,"isSchemaLoadingMore",[h.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),l=y(r.prototype,"isSchemaLoadingMoreError",[h.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),y(r.prototype,"isLoadingMore",[h.computed],Object.getOwnPropertyDescriptor(r.prototype,"isLoadingMore"),r.prototype),y(r.prototype,"isLoaded",[h.computed],Object.getOwnPropertyDescriptor(r.prototype,"isLoaded"),r.prototype),y(r.prototype,"loadMoreError",[h.computed],Object.getOwnPropertyDescriptor(r.prototype,"loadMoreError"),r.prototype),y(r.prototype,"setIsSchemaLoadingMore",[h.action],Object.getOwnPropertyDescriptor(r.prototype,"setIsSchemaLoadingMore"),r.prototype),y(r.prototype,"setIsSchemaLoadingMoreError",[h.action],Object.getOwnPropertyDescriptor(r.prototype,"setIsSchemaLoadingMoreError"),r.prototype),y(r.prototype,"setCollectionChangelogStores",[h.action],Object.getOwnPropertyDescriptor(r.prototype,"setCollectionChangelogStores"),r.prototype),r)},"./js/modules/services/ActivityFeedService.js":function(e,t,o){o.r(t);o("./js/modules/controllers/WorkspaceSessionController.js"),o("./js/common/controllers/WindowController.js");var r=o("./js/modules/services/RemoteSyncRequestService.js"),i=o("./collaboration/workspace/controller/ActiveWorkspaceController.ts"),n=o("./node_modules/lodash/lodash.js");var a={fetchActivityFeed(e,t={}){if(!e.collectionUid)return Promise.reject(new Error("ActivityFeedService~fetchPossibleAPI: collectionUid not found"));let o=n.assign({},{count:20},{populate:!0},{max_id:e.maxId?e.maxId:0},{since_id:e.sinceId?e.sinceId:0}),i=`/collection/revisions/${e.collectionUid}?count=${o.count}&populate=${o.populate}`;return t.loadMore?i=i.concat(`&max_id=${o.max_id}`):t.loadNew&&(i=i.concat(`&since_id=${o.since_id}`)),r.default.request(i,{method:"get"}).then((t=>{let o={id:e.collectionUid,meta:n.get(t.body,"meta")||{},feeds:n.get(t.body,"data")||[],error:!t.body.data||t.error||!1};return Promise.resolve(o)}))},fetchPossibleAPIVersions:e=>e.collectionUid?async function(){try{return i.default.get().id}catch(e){return pm.logger.error(e),Promise.reject(e)}}().then((t=>{if(!t)return Promise.reject(new Error("ActivityFeedService~fetchPossibleAPIVersions: workspaceId not found"));n.assign(e,{workspaceId:t});let o=`/collections/${e.collectionUid}/apiVersions?workspace=${e.workspaceId}`;return r.default.request(o,{method:"get"}).then((e=>{let t=e.body.data.apis;return Promise.resolve(t)}))})):Promise.reject(new Error("ActivityFeedService~fetchPossibleAPIVersions: collectionUid not found")),addVersionTag(e){if(!e.collectionUid)return Promise.reject(new Error("ActivityFeedService~addVersionTag: collectionUid not found"));if(!e.apiVersionId)return Promise.reject(new Error("ActivityFeedService~addVersionTag: apiVersionId not found"));if(!e.revisionId)return Promise.reject(new Error("ActivityFeedService~addVersionTag: revisionId not found"));if(!e.relationType)return Promise.reject(new Error("ActivityFeedService~addVersionTag: relationType not found"));let t=`/collections/${e.collectionUid}/versiontags`,o={apiVersion:e.apiVersionId,revision:e.revisionId,relations:[{type:e.relationType}]};return r.default.request(t,{method:"post",data:o}).then((e=>Promise.resolve(e.body.data)))},removeVersionTag(e){if(!e.collectionUid)return Promise.reject(new Error("ActivityFeedService~removeVersionTag: collectionUid not found"));if(!e.tagId)return Promise.reject(new Error("ActivityFeedService~removeVersionTag: tagId not found"));let t=`/collections/${e.collectionUid}/versiontags/${e.tagId}`;return r.default.request(t,{method:"delete"}).then((()=>Promise.resolve()))}};t.default=a},"./js/stores/CollectionActivityFeedStore.js":function(e,t,o){o.r(t),o.d(t,{default:function(){return j}});var r,i,n,a,s,l,c,d,h,g=o("./js/modules/services/ActivityFeedService.js"),p=o("../../node_modules/mobx/lib/mobx.module.js"),u=o("./node_modules/lodash/lodash.js");function m(e,t,o,r){o&&Object.defineProperty(e,t,{enumerable:o.enumerable,configurable:o.configurable,writable:o.writable,value:o.initializer?o.initializer.call(r):void 0})}function f(e,t,o,r,i){var n={};return Object.keys(r).forEach((function(e){n[e]=r[e]})),n.enumerable=!!n.enumerable,n.configurable=!!n.configurable,("value"in n||n.initializer)&&(n.writable=!0),n=o.slice().reverse().reduce((function(o,r){return r(e,t,o)||o}),n),i&&void 0!==n.initializer&&(n.value=n.initializer?n.initializer.call(i):void 0,n.initializer=void 0),void 0===n.initializer&&(Object.defineProperty(e,t,n),n=null),n}const y="initial",b="loadMore",v="loadNew",w="addVersionTag",C="removeVersionTag",S="add",L="remove";let j=(i=f((r=class{constructor(){this.modelEvents={namespace:"collectionactivityfeed"},m(this,"collectionUid",i,this),m(this,"feeds",n,this),m(this,"meta",a,this),m(this,"isLoaded",s,this),m(this,"isLoading",l,this),m(this,"isLoadingMore",c,this),m(this,"isLoadingNew",d,this),m(this,"error",h,this),this.collectionUid=null}add(e){u.isEmpty(e)||e.id!==this.collectionUid||(this.isLoading=!1,this.isLoadingMore=!1,this.isLoadingNew=!1,this.collectionUid=e.id,this.feeds=u.orderBy(u.unionBy(this.feeds,e.feeds,"id"),"id","desc"),e.meta.next_max_id||(this.meta.next_max_id=0),this.meta=u.merge(this.meta,e.meta),this.error={})}initialize(e){return this.collectionUid=e,this.getFeeds().then((()=>Promise.resolve()))}handleError(e,t){let o="";t===w?o="There was an issue adding the version tag on this collection. Please try again.":t===C&&(o="There was an issue removing the version tag on this collection. Please try again."),this.error.type=t,this.error.message=u.get(e.details,"message")||e.message||o,this.error.title=e.title||"",this.isLoading=!1,this.isLoadingMore=!1,this.isLoadingNew=!1}updateCurrentLabel(){let e=u.head(this.feeds);!u.isEmpty(e.tags)&&u.last(e.tags).system&&e.tags.pop()}getFeeds(){if(this.collectionUid)return this.isLoading=!0,g.default.fetchActivityFeed({collectionUid:this.collectionUid}).then((e=>{if(!u.isEmpty(e))return this.add(e),Promise.resolve()})).catch((e=>{this.handleError(e.error,y),pm.logger.warn("CollectionActivityFeedStore~getFeeds: Error occurred while fetching feeds",e)}))}loadMore(){if(!this.didReachEndOfFeed()&&!this.isLoaded)return this.isLoadingMore=!0,g.default.fetchActivityFeed({collectionUid:this.collectionUid,maxId:this.meta.next_max_id},{loadMore:this.isLoadingMore}).then((e=>{u.isEmpty(e)||this.add(e)})).catch((e=>{this.handleError(e.error,b),pm.logger.warn("CollectionActivityFeedStore~loadMore: Error occurred while fetching older feeds",e)}));this.isLoaded=!0}loadNew(){if(this.isLoadingNew=!0,u.isEmpty(this.feeds))return pm.logger.warn("CollectionActivityFeedStore~loadNew: sinceId not found");let e=u.head(this.feeds).id;return g.default.fetchActivityFeed({collectionUid:this.collectionUid,sinceId:e},{loadNew:this.isLoadingNew}).then((0,p.action)((e=>u.isEmpty(e.feeds)?(this.isLoadingNew=!1,Promise.resolve(!1)):(this.updateCurrentLabel(),this.add(e),Promise.resolve(!0))))).catch((e=>{this.handleError(e.error,v),pm.logger.warn("CollectionActivityFeedStore~loadNew: Error occurred while fetching newer feeds",e)}))}addVersionTag(e){return g.default.addVersionTag(e).then((e=>{this.updateFeed(e,S),pm.toasts.success("This tag will be associated with the selected API version.",{noIcon:!0,title:"Version tag added"})})).catch((e=>(this.handleError(e.error,w),pm.logger.warn("CollectionActivityFeedStore~addVersionTag: Error occurred while adding a version tag on collection revision",e),pm.toasts.error(this.error.message,{noIcon:!0,title:this.error.title}),Promise.reject())))}removeVersionTag(e){return g.default.removeVersionTag(e).then((()=>{this.updateFeed({revision:e.revisionId},L)})).catch((e=>{this.handleError(e.error,C),pm.logger.warn("CollectionActivityFeedStore~removeTag: Error occurred while removing a version tag on collection revision",e),pm.toasts.error(this.error.message,{noIcon:!0,title:this.error.title})}))}updateFeed(e,t){let o=u.find(this.feeds,["id",e.revision]),r=u.pick(e,["apiVersion","createdAt","createdBy","id","revision","updatedAt"]);if(o){if(t===L)o.tags.shift();else if(t===S){let t,i=u.get(e.apiVersion,"id");if(!i)return void pm.logger.warn("CollectionActivityFeedStore~Error occurred while updating revision. API version Id not found");let n=u.find(this.feeds,(e=>u.find(e.tags,(e=>e.apiVersion.id===i))));n&&(t=n.tags.shift().id,r.id=t),o.tags.unshift(r)}}else pm.logger.error("CollectionActivityFeedStore~Error occurred while updating revision. Revision not found.")}didReachEndOfFeed(){return!u.get(this.meta,"next_max_id")}}).prototype,"collectionUid",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),n=f(r.prototype,"feeds",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),a=f(r.prototype,"meta",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{}}}),s=f(r.prototype,"isLoaded",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),l=f(r.prototype,"isLoading",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),c=f(r.prototype,"isLoadingMore",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),d=f(r.prototype,"isLoadingNew",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),h=f(r.prototype,"error",[p.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{}}}),f(r.prototype,"add",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"add"),r.prototype),f(r.prototype,"initialize",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"initialize"),r.prototype),f(r.prototype,"handleError",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"handleError"),r.prototype),f(r.prototype,"updateCurrentLabel",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"updateCurrentLabel"),r.prototype),f(r.prototype,"getFeeds",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"getFeeds"),r.prototype),f(r.prototype,"loadMore",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"loadMore"),r.prototype),f(r.prototype,"loadNew",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"loadNew"),r.prototype),f(r.prototype,"updateFeed",[p.action],Object.getOwnPropertyDescriptor(r.prototype,"updateFeed"),r.prototype),r)}}]);