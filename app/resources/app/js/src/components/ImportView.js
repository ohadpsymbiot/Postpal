"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[161],{"../../packages/api-design/import/src/components/EntityContainer.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return b}});var i,n=s("../../node_modules/react/index.js"),o=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),a=s("../../node_modules/@postman/aether/esmLib/src/components/CheckBox/Checkbox.js"),l=s("../../node_modules/@postman/aether/esmLib/src/components/Flex/Flex.js"),r=s("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),c=s("../../node_modules/@postman/aether/esmLib/src/components/Tooltip/Tooltip.js"),p=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-direction-down.js"),m=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-direction-right.js"),d=s("../../packages/api-design/import/src/components/FileTable.js"),u=s("../../packages/api-design/import/src/components/ProtoFileTable.js"),h=s("../../packages/api-design/import/src/components/GenerateCollectionOption.js"),f=s("../../packages/api-design/schema-editor/index.js"),g=s("./js/services/conversion/formats/openapi3.js"),E=s("./js/services/conversion/formats/raml1.js"),I=s("./js/services/conversion/formats/wsdl2.js"),y=s("./js/services/conversion/formats/graphql.js"),v=s("./api-dev/util/getConfigurationOptions.js"),T=s("../../node_modules/lodash/lodash.js");const A={openapi:g.default,raml:E.default,wsdl:I.default,graphql:y.default},S={"openapi:3":"openapi","openapi:3_1":"openapi",openapi3_1:"openapi",openapi3:"openapi",swagger:"openapi",graphql:"graphql",raml:"raml",wsdl1:"wsdl",wsdl2:"wsdl"};let b=(0,o.observer)(i=class extends n.Component{constructor(e){super(e),this.state={options:{}},this.isDefaultSet=!1,this.setDefaultOptions()}async setDefaultOptions(){const e={},t={name:"Copy collections to workspace",id:"_copyCollectionsToWS",type:"boolean",default:!1,description:"If turned “ON” a copy of collections linked to the API will be available in your workspace as independent elements.",external:!0};for(const s in A){const i=A[s];e[s]=(0,v.checkAndOverrideDefaultValue)(i,T.filter(await i.getOptions(),"external")),T.isArray(e[s])&&e[s].unshift(t)}this.setState({options:e})}renderGenerateCollectionOption(){const e=T.filter(this.props.fileList.items,(e=>e.isSelected&&!T.includes(f.GENERATE_COLLECTION_DISABLED_FORMATS,T.get(e,"file.format.type")))),t=T.map(e,(e=>S[T.get(e,"file.format.type")])),s=T.uniq(t),i=T.pick(this.state.options,...s);if(0===s.length)return null;if(Object.keys(i).length>0&&!this.isDefaultSet){let e={};v.newDefaults&&Object.keys(v.newDefaults).forEach((t=>{let s=S[t];i[s]&&(e[s]=v.newDefaults[t])})),this.props.setInitialOptionPreference(e),this.isDefaultSet=!0}return n.createElement(h.default,{options:i,preferences:this.props.optionsPreference,handleSubmitOptions:this.props.setOptionsPreference,isImporting:this.props.isImporting})}render(){let e=T.filter(this.props.fileList.items,(e=>e.isSelected&&!T.includes(f.GENERATE_COLLECTION_DISABLED_FORMATS,T.get(e,"file.format.id")))).length,t=this.props.isAPI,s=this.props.fileList.items.map(((e,s)=>{let i=0;if(!e.isVisible)return null;if(e.isMultiFile)for(let t of null===(o=e.entityMap)||void 0===o?void 0:o.values()){var o;"file"!==t.kind||T.includes(["proto2","proto3"],T.get(e,"file.format.id"))&&e.isSelected&&!t.isSelected||i++}return n.createElement("div",{key:s,className:"import-entity-table-content-container table-highlight"},n.createElement("div",{className:"import-entity-table-content"},n.createElement(a.default,{className:"api-select-checkbox",isChecked:e.isSelected,isIndeterminate:e.isIndeterminate,onChange:()=>{e.setIsSelected(!e.isSelected)},isDisabled:this.props.isImporting}),n.createElement("div",{className:"import-entity-table-content-file-list"},n.createElement("div",{className:"import-entity-table-content-name"},e.isMultiFile?n.createElement("div",{onClick:()=>{e.toggleIsExpanded()}},n.createElement(l.default,{direction:"row"},n.createElement("div",{className:"icon-minor-pad"},e.isExpanded?n.createElement(p.default,null):n.createElement(m.default,null)),n.createElement("div",{className:"api-definition-name-text-details"},n.createElement(r.default,{type:"body-medium",isTruncated:!0},e.name),e.isMultiFile&&n.createElement("div",null,n.createElement(r.default,{color:"content-color-secondary"},i," ","files"))))):t?n.createElement("div",{className:"single-cell-major-pad"},n.createElement(r.default,{type:"body-medium",className:"entity-row-margin-alignment",isTruncated:!0},e.name)):n.createElement(r.default,{type:"body-medium",className:"entity-row-margin-alignment",isTruncated:!0},e.name))),n.createElement("div",{className:"import-entity-table-content-type"},n.createElement("span",{className:"import-entity-table-content-type"},e.file.format.name))),n.createElement(l.default,{padding:{paddingLeft:"spacing-xl"},backgroundColor:"background-color-tertiary",className:"entity-filetable-container"},e.isExpanded?T.includes(["proto2","proto3"],T.get(e,"file.format.id"))&&e.isMultiFile?n.createElement(u.default,{file:e}):n.createElement(d.default,{file:e}):null))}));return s=T.filter(s,(e=>null!==e)),0===s.length?null:n.createElement("div",{className:"import-container-entity "+(this.props.addGap?"import-entity-gap":"")},n.createElement("div",{className:"import-entity-header"},n.createElement("div",{className:"import-entity-title"},this.props.icon,n.createElement("div",{className:"import-entity-title-text"},this.props.title)),this.props.summary&&n.createElement("div",{className:"import-entity-summary"},this.props.summary)),n.createElement("div",{className:"import-entity-table"},n.createElement("div",{className:"import-entity-table-header"},n.createElement(c.default,{content:"Select all",placement:"bottom"},n.createElement(a.default,{className:"api-select-checkbox",onChange:()=>this.props.fileList.setIsSelected(!this.props.fileList.isSelected),isChecked:this.props.fileList.isSelected,isIndeterminate:this.props.fileList.isIndeterminate,isDisabled:this.props.isImporting})),n.createElement("div",{className:"import-entity-table-header-name"},this.props.isAPI?n.createElement("div",{className:"single-cell-major-pad"},this.props.columnLeft):this.props.columnLeft),n.createElement("div",{className:"import-entity-table-header-type"},this.props.columnRight)),s,this.props.isAPI&&e>0&&this.renderGenerateCollectionOption()))}})||i},"../../packages/api-design/import/src/components/ImportView.js":function(e,t,s){s.r(t),s.d(t,{default:function(){return _}});var i,n=s("../../node_modules/lodash/lodash.js"),o=s.n(n),a=s("../../node_modules/react/index.js"),l=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),r=s("../../node_modules/mobx/lib/mobx.module.js"),c=s("./js/services/EditorService.js"),p=s("../../packages/api-design/import/src/utils/ImportHelper.js"),m=s("../../packages/api-design/schema-editor/index.js"),d=s("../../packages/api-design/api-design-analytics/index.js"),u=s("./growth/foundation/public/amplitude/AmplitudeService.js"),h=s("./js/stores/SyncStatusStore.js"),f=s("./js/stores/StoreManager.js"),g=s("../../node_modules/@postman/aether/esmLib/src/components/Spinner/Spinner.js"),E=s("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),I=s("../../node_modules/@postman/aether/esmLib/src/components/TextInput/TextInput.js"),y=s("../../node_modules/@postman/aether/esmLib/src/components/Button/Button.js"),v=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-state-success-fill-small.js"),T=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-state-fail-fill-small.js"),A=s("../../node_modules/@postman/aether-icons/esmLib/src/design-system-icons/icon-action-search-stroke.js"),S=s("../../packages/api-design/import/src/models/Entity.js"),b=s("../../packages/api-design/import/src/components/EntityContainer.js");const C={type:"primary",text:"Import"},N="NON_API_ELEMENT";let _=(0,l.observer)(i=class extends a.Component{constructor(e){super(e),this.state={searchText:null,searchableEntities:[],apis:null,collections:null,environments:null,globals:null,others:null,isLoading:!0,isImporting:!1,isAPIsSelected:!0,isCollectionsSelected:!0,isEnvironmentsSelected:!0,isOtherSelected:!0,isGlobalsSelected:!0,optionsPreference:{},initialImportCompleted:!1}}assignToFolder(e,t,s,i){if(!e.path||"string"!=typeof e.path)return;let n=e.path;if("/"!==n.charAt(0)&&(n="/"+n),t.has(n))return;let a=n.split("/"),l=a[a.length-1],r=new S.default({kind:"file",path:n,name:l,content:e.content,language:e.language,isSelected:s,isRootCandidate:i});this.state.searchableEntities.push(r),a.splice(a.length-1),0===a.length&&a.unshift("/");let c="";for(let e of a){const i=("/"===c?"":c)+"/"+e;let n;if(t.has(i)?n=t.get(i):(n=new S.default({kind:"folder",name:e,path:i,isSelected:s}),this.state.searchableEntities.push(n),t.set(i,n)),""!==c){let e=t.get(c),s=o().map(e.items,(e=>e.path));o().includes(s,n.path)||(e.items.push(n),n.setParent(e))}c=i}let p=t.get(c);p.items.push(r),r.setParent(p),t.set(r.path,r)}componentDidMount(){(0,r.when)((()=>this.props.controller.isProcessingComplete),(()=>{const e=this.props.controller.files,t=new S.default,s=new S.default,i=new S.default,n=new S.default,a=new S.default;for(let l of e)if(o().isArray(l.relatedFiles)&&l.relatedFiles.length>0){const e=this.processMultiFile(l);e.parent=t,t.items.push(e)}else o().includes(l.importAsFormats,"API")?t.items.push(new S.default({file:l,parent:t,name:l.name})):o().includes(l.importAsFormats,"Collection")?s.items.push(new S.default({file:l,parent:s,name:l.name})):o().includes(l.importAsFormats,"Environment")?i.items.push(new S.default({file:l,parent:i,name:l.name})):o().includes(l.importAsFormats,"Globals")?n.items.push(new S.default({file:l,parent:n,name:l.name})):a.items.push(new S.default({file:l,parent:a,name:l.name}));this.setState({apis:t,collections:s,environments:i,globals:n,others:a,searchableEntities:[...t.items,...s.items,...i.items,...n.items,...a.items,...this.state.searchableEntities],isLoading:!1})})),(0,r.when)((()=>this.props.controller.shouldCloseTab),(()=>this.handleClose()))}processMultiFile(e){const t=new Map;this.assignToFolder(e,t,true,!(!e.candidateRootFiles||!e.candidateRootFiles[e.path]));for(let s of e.relatedFiles)this.assignToFolder(s,t,true,!(!e.candidateRootFiles||!e.candidateRootFiles[s.path]));const s=t.get("/");s.entityMap=t,s.file=e,s.name=e.name,s.isMultiFile=!0,s.relatedFiles=e.relatedFiles,s.candidateRootFiles=e.candidateRootFiles,(e=t.has("/"+e.path)?t.get("/"+e.path):t.get(e.path)).setIsRoot(!0);const i=this.pruneFolders(s);return o().includes(["proto2","proto3"],o().get(s,"file.format.id"))&&(s.candidateRootFiles&&0!==Object.keys(s.candidateRootFiles).length?this.setSelectedForRootDepencies(i):e.setIsRoot(!1)),i}setSelectedForRootDepencies(e){let t=[];e.candidateRootFiles[e.file.path]&&e.candidateRootFiles[e.file.path].relatedFiles?t=e.candidateRootFiles[e.file.path].relatedFiles:e.candidateRootFiles[e.file.fullPath]&&e.candidateRootFiles[e.file.fullPath].relatedFiles&&(t=e.candidateRootFiles[e.file.fullPath].relatedFiles),t.forEach((t=>{e.entityMap.has("/"+t)?e.entityMap.get("/"+t).setIsSelected(!0):e.entityMap.get(t).setIsSelected(!0)}))}pruneFolders(e){var t;const s=e;let i="";for(;e&&"folder"===e.kind&&1==o().size(e.items)&&"folder"===e.items[0].kind;)i=e.path,e=e.items[0];e.entityMap=s.entityMap,e.file=s.file,e.name=s.name,e.isMultiFile=!0,e.relatedFiles=s.relatedFiles,e.candidateRootFiles=s.candidateRootFiles,i+="/";for(let t of e.entityMap.values())0===t.path.search(i)&&(t.fullPath=t.path,t.path=t.path.replace(i,""));0===(null===(t=e.file)||void 0===t?void 0:t.path.search(i))&&(e.file.fullPath=e.file.path,e.file.path=e.file.path.replace(i,""));for(let t of e.relatedFiles)0===t.path.search(i)&&(t.path=t.path.replace(i,""));return e}handleClose(){c.default.close({id:this.props.id}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_CANCEL_CLICK_GCOPSLOG}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_CANCEL_CLICK_IMPORTCOUNTLOG})}async handleImport(){u.Ampli.importModalImportClicked((0,u.getAmpliCTAProperties)(C));let e=!1;this.setState({isImporting:!0}),pm.mediator.once("resolveImportConflict",(()=>e=!0)),this.props.controller.subscribeToWorkspaceForAllAPIs();let t=[...o().get(this.state,"collections.items",[]),...o().get(this.state,"environments.items",[]),...o().get(this.state,"globals.items",[]),...o().get(this.state,"others.items",[])],s=await(0,p.importNonAPIEntities)(o().filter(t,(e=>e.isSelected))),{apisToImport:i,importedAPIs:n}=await(0,p.importAPIs)(this.state.apis,{value:"unclassified"},this.state.optionsPreference),a=[],l=[];o().forEach(n,((e,t)=>{a.push({apiId:null==e?void 0:e.id,apiVersionId:o().get(e,"versions[0].id"),name:o().get(i,`[${t}].name`),relationType:"apiDefinition",relationInfo:"Definition",relationName:o().get(i,`[${t}].format.name`),status:"processing"}),o().includes(m.GENERATE_COLLECTION_DISABLED_FORMATS,o().get(i,`[${t}].format.id`))||a.push({apiId:null==e?void 0:e.id,apiVersionId:o().get(e,"versions[0].id"),name:o().get(i,`[${t}].name`),relationType:"unclassified",relationName:"Postman Collection v2.1",status:"processing"})})),this.props.controller._setImportedAPIElements(a),o().forEach(t,((e,t)=>{var i,n;const a=s[t],r=o().head(o().keys(a.value)),c="fulfilled"===a.status&&o().get(a,["value",r,"imported"])?"completed":"failed";l.push({type:N,name:null==e?void 0:e.name,relationName:null==e||null===(i=e.file)||void 0===i||null===(n=i.format)||void 0===n?void 0:n.name,status:c})})),this.props.controller._setImportedNonAPIElements(l);let r=0,c=0;if(r+=i.length,c+=n.length,o().forEach(s,(e=>{r+=e.total,c+=e.imported})),this.setState({initialImportCompleted:!0}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_IMPORT_CLICK_IMPORTCOUNTLOG,label:`totalEntitiesToImport:${r};totalImportedEntities:${c}`}),(0,d.logApiDesignAnalytics)({category:d.EVENT_CATEGORIES.IMPORT,action:d.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_IMPORT_CLICK_GCOPSLOG}),r>0&&0===c&&!e)return pm.toasts.error("Import failed. Try again."),void this.setState({isImporting:!1});r.length>0&&0===i.length?this.handleClose():(0===this.props.controller.importedAPIElements.length&&this.props.controller.navigateToImportComplete(),this.setState({isImporting:!1}))}handleSearch(e){this.setState({searchText:e}),e&&"string"==typeof e?(e=o().lowerCase(e),o().forEach(this.state.searchableEntities,(e=>{e.setVisibility(!1)})),o().forEach(this.state.searchableEntities,(t=>{o().includes(o().lowerCase(t.name),e)&&t.setVisibility(!0,!0)}))):o().forEach(this.state.searchableEntities,(e=>{e.setVisibility(!0),e.setExpanded(!1)}))}shouldDisableImport(){const e=["apis","collections","environments","globals","others"];for(let t of e)if(o().get(this.state,`${t}.items`).length>0&&o().get(this.state,`${t}.isSelected`))return!1;return!0}render(){if(this.state.isLoading)return a.createElement("div",{className:"import-container-loading"},a.createElement(g.default,null));if(this.state.initialImportCompleted){this.props.controller.areAllElementsImported&&this.props.controller.isTabActive()&&this.props.controller.navigateToImportComplete();let e,t=o().filter(this.props.controller.importedAPIElements,(e=>"processing"!==this.props.controller.getImportStatusFromEvents(e.apiId,e.relationType)));return t=o().concat(t,o().filter(this.props.controller.importedNonAPIElements,(e=>"processing"!==e.status))),e=this.props.controller.importedAPIElements.length+this.props.controller.importedNonAPIElements.length-t.length,a.createElement("div",{className:"import-container-main"},a.createElement("div",{className:"import-container-progress"},a.createElement("h2",null,"Import in progress"),a.createElement("div",{className:"import-container-progress-content"},o().map(t,((e,t)=>{const s=e.type===N&&e.status||this.props.controller.getImportStatusFromEvents(e.apiId,e.relationType);return a.createElement("div",{className:"import-container-progress-content-item",key:`${t}`},"completed"===s?a.createElement(v.default,{className:"import-container-progress-content-item-icon",color:"content-color-success"}):a.createElement(T.default,{className:"import-container-progress-content-item-icon",color:"content-color-error"}),a.createElement("div",{className:"import-container-progress-content-item-data"},a.createElement(E.default,{color:"content-color-primary"},e.name),a.createElement(E.default,{color:"content-color-secondary"},"  ·  "),a.createElement(E.default,{color:"content-color-secondary"},e.relationName),e.relationInfo&&a.createElement(a.Fragment,null,a.createElement(E.default,{color:"content-color-secondary"},"  ·  "),a.createElement(E.default,{color:"content-color-secondary"},e.relationInfo))))})),!this.props.controller.areAllElementsImported&&a.createElement("div",{className:"import-container-progress-content-summary"},a.createElement(g.default,{className:"import-container-progress-content-summary-spinner",size:"small"}),a.createElement("div",{className:"import-container-progress-content-summary-data"},a.createElement(E.default,{color:"content-color-primary"},`${e} more ${e>1?"elements are":"element is"} being imported.`)))),a.createElement("div",{className:"import-container-progress-footer"},a.createElement(E.default,{color:"content-color-secondary"},"You can close this tab and get back to other tasks. ",a.createElement("br",null),"We’ll let you know once import is complete."))))}return a.createElement("div",{className:"import-container-main"},a.createElement("div",{className:"import-container-content element-table-height-fill"},a.createElement("h2",null,"Import Elements"),a.createElement("div",{className:"import-search-input"},a.createElement(I.default,{type:"text",value:this.state.searchText,onChange:e=>this.handleSearch(e.target.value),placeholder:"Search files and folders",width:"40%",prefix:a.createElement(A.default,null)})),a.createElement("div",{className:"element-table-overflow-scroll"},this.state.apis&&this.state.apis.items.length>0?a.createElement(b.default,{title:"APIs",columnLeft:"API name",columnRight:"API type",fileList:this.state.apis,setInitialOptionPreference:e=>{this.setState({optionsPreference:e})},optionsPreference:this.state.optionsPreference,setOptionsPreference:(e,t)=>this.setState({optionsPreference:{...this.state.optionsPreference,[e]:t}}),isImporting:this.state.isImporting,isAPI:!0}):null,this.state.collections&&this.state.collections.items.length>0?a.createElement(b.default,{title:"Collections",columnLeft:"Collection Name",columnRight:"Format",fileList:this.state.collections,isImporting:this.state.isImporting,addGap:!0}):null,this.state.environments&&this.state.environments.items.length>0?a.createElement(b.default,{title:"Environments",columnLeft:"Environment Name",columnRight:"Format",fileList:this.state.environments,isImporting:this.state.isImporting,addGap:!0}):null,this.state.globals&&this.state.globals.items.length>0?a.createElement(b.default,{title:"Globals",columnLeft:"Name",columnRight:"Format",fileList:this.state.globals,isImporting:this.state.isImporting,addGap:!0}):null,this.state.others&&this.state.others.items.length>0?a.createElement(b.default,{title:"Requests",columnLeft:"Name",columnRight:"Format",fileList:this.state.others,isImporting:this.state.isImporting,addGap:!0}):null),a.createElement("div",{className:"import-container-footer"},a.createElement("div",{className:"import-container-footer_import_button"},a.createElement(y.default,{type:"primary",text:"Import",isDisabled:this.shouldDisableImport()||!(0,f.resolveStoreInstance)(h.default).isSocketConnected,onClick:this.handleImport.bind(this),isLoading:this.state.isImporting})),a.createElement("div",{className:"import-container-footer_cancel_button"},a.createElement(y.default,{type:"secondary",text:"Cancel",isDisabled:this.state.isImporting,onClick:this.handleClose.bind(this)})))))}})||i},"../../packages/api-design/import/src/utils/ImportHelper.js":function(e,t,s){s.r(t),s.d(t,{importAPIs:function(){return I},importNonAPIEntities:function(){return y}});var i=s("./api-dev/services/APIDevService.js"),n=s("./js/stores/CurrentUserStore.js"),o=s("./js/stores/SyncStatusStore.js"),a=s("./js/modules/controllers/CurrentUserController.js"),l=s("./js/stores/StoreManager.js"),r=s("./js/controllers/Importer.js"),c=s("../../packages/api-design/schema-editor/index.js"),p=s("../../packages/api-design/api-definition-store/index.js"),m=(s("./api-dev/util/getConfigurationOptions.js"),s("../../packages/api-design/api-design-analytics/index.js")),d=s("../../node_modules/lodash/lodash.js");const u=pm.logger.getContext("import","api-design"),h="apiWSCollection",f={"openapi:3":"openapi","openapi:3_1":"openapi",openapi3_1:"openapi",openapi3:"openapi",swagger:"openapi",graphql:"graphql",raml:"raml",wsdl1:"wsdl",wsdl2:"wsdl"};async function g(e,t){if(!e||d.isEmpty(t))throw new Error("Import~handleImportAsAPI: API data missing from the argument");const s=await a.default.get();if(!s||0===s.id)throw new Error("Import~handleImportAsAPI: User not found");return i.default.createAPI(e,t)}async function E(e,t,s){const i=d.get(e,"apiDefinitionType");let n;if(p.APIDefinitionTypeService.isMultiFileSupported(i)){const s=d.find(t,(e=>d.get(e,"root.enabled",!1))),i=await e.bundle(s,t);n=null==i?void 0:i.bundledContent}else n=d.get(t,"[0].content");const o=await e.convert(n,s),a=d.head(null==o?void 0:o.collections);return new Promise(((e,t)=>{r.default.importData(a,{silentToasts:!0},((s,n,o)=>{s?((0,m.logApiDesignAnalytics)({category:m.EVENT_CATEGORIES.IMPORT,action:m.EVENT_ACTIONS.IMPORT_MODAL_GENERATE_WORKSPACE_COLLECTION_FAILURE,label:i}),t(s)):((0,m.logApiDesignAnalytics)({category:m.EVENT_CATEGORIES.IMPORT,action:m.EVENT_ACTIONS.IMPORT_MODAL_GENERATE_WORKSPACE_COLLECTION_SUCCESS,label:i}),e(d.assign({},o,{_type:h})))}))}))}async function I(e,t,s){const i=[],a=[],r=[];if(!e||!e.items||!e.items.length)return{importedAPIs:i,apisToImport:a};const m=[];t=t.value;for(let i of e.items){if(!i.isSelected)continue;const e=(0,l.resolveStoreInstance)(n.default).isLoggedIn,r=(0,l.resolveStoreInstance)(o.default).isSocketConnected;if(!(e&&r))continue;const u={},h=d.get(i,"file"),I=d.get(h,"name"),y=d.get(h,"format"),v=d.get(s,f[y.type],{}),T=d.get(h,"format.apiDefinitionType"),A=p.APIDefinitionTypeService.determineFileExtension(T,h.language),S=d.get(v,"_copyCollectionsToWS");let b=[];if(p.APIDefinitionTypeService.isMultiFileSupported(T)&&i.isMultiFile){for(let e of i.entityMap.values())if("file"===e.kind&&e.isSelected){const t={type:"file",content:e.content,name:e.name,path:e.path};p.APIDefinitionTypeService.isRootTaggable(T)&&e.isRoot&&(t.root={enabled:!0}),b.push(t)}}else{let e,t=h.path.split("/").pop(),s=t.split(".").slice(0,-1).join("."),i=t.split(".").pop();A&&A!=i&&("yaml"===A&&"yml"===i||(t=`${s||t}.${A}`)),e={type:"file",content:h.content,name:t,path:t},p.APIDefinitionTypeService.isRootTaggable(T)&&(e.root={enabled:!0}),b.push(e)}u.apiDefinitions=[{type:T,name:I,items:b}],u.name="draft",t&&!d.includes(c.GENERATE_COLLECTION_DISABLED_FORMATS,y.id)&&(u.relations={[t]:{collectionGenerationConfig:{converter:{...v},collection:{name:I}}}}),a.push(h),m.push(g(I,[u])),S&&!d.includes(c.GENERATE_COLLECTION_DISABLED_FORMATS,y.id)&&m.push(E(y,b,v))}const I=await Promise.allSettled(m);for(const e of I)d.get(e,"value._type")===h?r.push(e.value):"fulfilled"===e.status?i.push(e.value):pm.logger.error("ImportHelper~handleImportAsAPI",e.reason,{context:u});return{apisToImport:a,importedAPIs:i,importedAPICollections:r}}async function y(e){const t=(e,t)=>new Promise(((s,i)=>{r.default.importData(e,t,((e,t,n)=>{e?i(e):s(n)}))})),s=[];for(let i of e){const e=d.get(i,"file"),n=d.get(e,"content");s.push(t(n,{exporterId:d.get(e,"exporterId")}))}const i=await Promise.allSettled(s);for(const e of i)"fulfilled"!==e.status&&pm.logger.error("ImportHelper~importNonAPIEntities",e.reason,{context:u});return i}},"./api-dev/util/getConfigurationOptions.js":function(e,t,s){s.r(t),s.d(t,{checkAndOverrideDefaultValue:function(){return o},newDefaults:function(){return n}});var i=s("./node_modules/lodash/lodash.js");const n={raml:{requestParametersResolution:"Example"},openapi3:{requestParametersResolution:"Example"},swagger:{requestParametersResolution:"Example"}};function o(e,t){let s=pm.settings.getSetting(`import.options.${e.id}`),o={},a=t.map((t=>{let s=i.get(n,[e.type,t.id]);return!s||t.availableOption&&!i.includes(t.availableOption,s)?t:(o={[t.id]:s},{...t,default:s})}));return pm.settings.setSetting(`import.options.${e.id}`,{...s,...o}),a}}}]);