"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[153],{"../../packages/api-design/api-definition-ui/src/components/CreateDefinitionFromScratchView.js":function(e,t,i){i.r(t);var n,a=i("../../node_modules/lodash/lodash.js"),s=i.n(a),o=i("../../node_modules/react/index.js"),r=i("../../node_modules/mobx-react/dist/mobx-react.module.js"),l=i("../../packages/api-design/api-definition-ui/src/constants/mode.js"),d=(i("../../packages/api-design/api-definition-ui/src/components/DefinitionImport/templates/index.js"),i("./api-dev/interfaces/APIInterface.js")),c=(i("../../packages/api-design/api-definition-service/index.js"),i("../../packages/api-design/api-definition-store/index.js")),p=i("./api-dev/stores/APIListStore.js"),h=i("./api-dev/services/APIPermissionService.js"),m=i("./js/stores/CurrentUserStore.js"),f=i("./js/services/NavigationService.js"),u=i("./js/stores/StoreManager.js"),g=i("../../packages/api-design/api-design-analytics/index.js"),E=i("../../node_modules/@postman/aether/esmLib/src/components/Spinner/Spinner.js"),C=i("../../node_modules/@postman/aether/esmLib/src/components/Flex/Flex.js"),T=i("../../node_modules/@postman/aether/esmLib/src/components/Heading/Heading.js"),y=i("../../node_modules/@postman/aether/esmLib/src/components/Text/Text.js"),b=i("../../node_modules/@postman/aether/esmLib/src/components/Dropdown/SingleSelect/SingleSelect.js"),I=i("../../node_modules/@postman/aether/esmLib/src/components/Badge/Badge.js"),_=i("../../node_modules/@postman/aether/esmLib/src/components/Label/Label.js"),S=i("../../node_modules/@postman/aether/esmLib/src/components/Tooltip/Tooltip.js"),D=i("../../node_modules/@postman/aether/esmLib/src/components/CheckBox/Checkbox.js"),A=i("../../node_modules/@postman/aether/esmLib/src/components/Button/Button.js"),v=i("../../node_modules/@postman/aether/esmLib/src/components/Toast/withToast.js"),F=i("../../packages/api-design/api-definition-ui/src/utils/Definition.js");const N=s().pickBy(c.APIDefinitionTypeService.getTypesMap(),((e,t)=>c.APIDefinitionTypeService.isFeatureEnabled(t,c.TYPE_FEATURES_CONFIG.CREATE_FROM_SCRATCH))),P=c.APIDefinitionTypeService.getSupportedFormatsMap();let j=(0,r.observer)(n=class extends o.Component{constructor(e){super(e);const t=this.getDefaultTypeValue(),i=s().head(s().keys(P[t]));this.state={isLoading:!0,definitionType:t,definitionFormat:i,isCreating:!1,isBoilerPlateSelected:!1},this.handleDefinitionTypeChange=this.handleDefinitionTypeChange.bind(this),this.handleDefinitionFormatChange=this.handleDefinitionFormatChange.bind(this),this.handleClose=this.handleClose.bind(this),this.shouldBlockAction=this.shouldBlockAction.bind(this),this.handleCreateDefinition=this.handleCreateDefinition.bind(this),this.handleBoilerPlateSelection=this.handleBoilerPlateSelection.bind(this)}handleDefinitionTypeChange({value:e}){this.setState({definitionType:e},(()=>{this.handleDefinitionFormatChange({value:s().head(s().keys(P[e]))})}))}handleDefinitionFormatChange({value:e}){this.setState({definitionFormat:e})}handleBoilerPlateSelection(){this.setState({isBoilerPlateSelected:!this.state.isBoilerPlateSelected})}handleClose(){(0,g.logApiDesignAnalytics)({category:g.EVENT_CATEGORIES.CREATE_API_DEFINITION,action:g.EVENT_ACTIONS.CANCEL_CREATE_DEFINITION_CLICK,label:`def_type:${this.state.definitionType};def_format:${this.state.definitionFormat};is_boilerplate_selected:${this.state.isBoilerPlateSelected?1:0}`,entityId:s().get(this.props,"controller.apiId"),entityType:g.EVENT_ENTITY_TYPES.API}),f.default.back()}shouldBlockAction(){return s().get(this.props.controller,"mode")!==l.FEATURE_BRANCH_MODE&&(!(0,u.resolveStoreInstance)(m.default).isLoggedIn&&(pm.mediator.trigger("showSignInModal",{type:"CREATE_DEFINITION",origin:"API_sidebar",continueUrl:new URL(window.location.href)}),!0))}getDefaultTypeValue(){const e=s().get(this.props.controller,"mode")===l.FEATURE_BRANCH_MODE,t=s().get(this.props.controller,"fileStore");return e&&t&&t.type?t.type:"openapi:3"}async handleCreateDefinition(){if(this.setState({isCreating:!0}),this.shouldBlockAction())return;const e=s().get(this.props.controller,"apiId"),t=s().get(this.props.controller,"apiVersionId"),i=s().get(this.props.controller,"apiName"),{addToast:n}=this.props,a=(await(0,d.getAPI)(e)).version.apiRepositoryStore;if(!a.canEditAPISource.allowed){const t=pm.logger.getContext("CreateDefinitionFromScratchView","api-definition-ui");return pm.logger.error("CreateDefinitionFromScratchView~handleCreateDefinition Cannot create a definition for this API as it is disabled",{name:"actionNotAllowedError",message:"This action is disabled for this API",details:{apiId:e}},{context:t}),a.openEditDisabledModal(),void this.setState({isCreating:!1})}try{let n,a,o,r=s().get(f.default.getActiveQueryParams().get(),"branch");(0,g.logApiDesignAnalytics)({category:g.EVENT_CATEGORIES.CREATE_API_DEFINITION,action:g.EVENT_ACTIONS.CREATE_DEFINITION_FINAL_CLICK,label:`def_type:${this.state.definitionType};def_format:${this.state.definitionFormat};is_boilerplate_selected:${this.state.isBoilerPlateSelected?1:0}`,entityId:e,entityType:g.EVENT_ENTITY_TYPES.API}),a=await(0,F.createOrReplaceDefinition)({apiId:e,apiVersionId:t,items:o,options:{type:this.state.definitionType,format:this.state.definitionFormat,apiName:i,isBoilerPlateSelected:this.state.isBoilerPlateSelected}}),this.setState({isCreating:!1}),n=await a.getRedirectionFileId();let l=r?{branch:r}:{};f.default.transitionTo("build.apiDefinitionFile",{apiId:e,apiVersionId:t,apiDefinitionId:a.id,fileId:n},l,{tabOptions:{openIn:this.props.id}})}catch(e){let t="Something went wrong while creating Definition. Try again.";this.setState({isCreating:!1}),n({status:"error",description:t}),pm.logger.error("CreateDefinitionFromScratchView~handleCreateDefinition: Failed to create Definition - ",t)}}render(){if(s().get(this.props.controller,"isLoading"))return o.createElement("div",{className:"import-container-loading"},o.createElement(E.default,null));const e=s().get(this.props.controller,"apiId"),t=(0,u.resolveStoreInstance)(p.default).permissions,i=h.default.hasPermission(t,"updateSchema","api",e),n=s().size(P[this.state.definitionType])<2;return o.createElement(C.default,{justifyContent:"center",alignItems:"flex-start","max-width":"100%",wrap:"wrap",direction:"column"},o.createElement(C.default,{className:"definition-author-scratch-heading-pad",alignSelf:"center"},o.createElement("div",null,o.createElement("div",null,o.createElement(T.default,{type:"h1",text:"Author definition from scratch"}),o.createElement(y.default,{className:"create-definition-subheading",type:"lead",color:"content-color-secondary"},"Describe your service using a spec format"),o.createElement(C.default,{direction:"column",gap:"spacing-xl"},o.createElement(b.default,{className:"definition-create-section__dropdown",onChange:this.handleDefinitionTypeChange,options:s().map(N,((e,t)=>({value:t,label:o.createElement("span",null,e,c.APIDefinitionTypeService.isFeatureEnabled(t,c.TYPE_FEATURES_CONFIG.BETA_LABEL)?o.createElement(I.default,{status:"info",text:"Beta"}):"")}))),value:{value:this.state.definitionType,label:N[this.state.definitionType]},label:o.createElement(_.default,{type:"primary",size:"medium",text:"Definition type",infoText:"Definitions outline an API's structure, behavior, function and supported data types."}),isClearable:!1,isSearchable:!1,isOptionDisabled:e=>e.isDisabled}),o.createElement(S.default,{content:n?"The selected definition type only supports this format":"",placement:"right"},o.createElement("div",null,o.createElement(b.default,{className:"definition-create-section__dropdown",onChange:this.handleDefinitionFormatChange,options:s().map(P[this.state.definitionType],((e,t)=>({value:t,label:e}))),value:{value:this.state.definitionFormat,label:P[this.state.definitionType][this.state.definitionFormat]},label:o.createElement(_.default,{type:"primary",size:"medium",text:"Definition format"}),isClearable:!1,isSearchable:!1,isDisabled:n}))),o.createElement(D.default,{isChecked:this.state.isBoilerPlateSelected,label:o.createElement(_.default,{type:"primary",size:"medium",text:"Use a boilerplate",infoText:"A boilerplate template will have the necessary components by default to save you time while writing specs."}),onChange:()=>{this.handleBoilerPlateSelection()},isDisabled:this.state.isCreating})),o.createElement(C.default,{className:"create-def-from-scratch-buttons",gap:"spacing-l",direction:"row"},o.createElement(A.default,{type:"primary",text:"Create Definition",isDisabled:!i,tooltip:i?"":o.createElement(S.default,{content:"You do not have access to perform this action.",placement:"auto"}),isLoading:this.state.isCreating,onClick:this.handleCreateDefinition.bind(this)}),o.createElement(A.default,{type:"secondary",text:"Cancel",isDisabled:this.state.isCreating,onClick:this.handleClose.bind(this)}))))))}})||n;t.default=(0,v.default)(j)}}]);