"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[169],{"../../packages/search/related-collections/src/controllers/RelatedCollectionsCBController.js":function(e,t,r){r.r(t),r.d(t,{default:function(){return d}});r("../../node_modules/mobx/lib/mobx.module.js");var o=r("./js/modules/services/RequestWithFileBodyService.js"),s=r("./runtime-repl/request-http/PrepareRequestService.js"),l=r("./runtime-repl/request-http/ResolveRequest.js"),n=r("./js/stores/StoreManager.js"),u=r("./js/stores/EditorStore.js");class d{getResolvedRequest(e){let t,r;return Promise.resolve().then((()=>e?(r=(0,n.resolveStoreInstance)(u.default).find(e),r?(t=r.model&&(0,o.getRequestWithFileBody)(r.model),t||Promise.reject(new Error("RelatedCollectionsCBController~getResolvedRequest: Request not found."))):Promise.reject(new Error("RelatedCollectionsCBController~getResolvedRequest: Editor not found."))):Promise.reject(new Error("RelatedCollectionsCBController~getResolvedRequest: Incorrect Parameters.")))).then((e=>s.default.getPopulatedRequest(e))).then((e=>l.default.resolve(e))).then((e=>e?e.url.toString():Promise.reject("RelatedCollectionsCBController~getResolvedRequest: Error in resolving request.")))}}}}]);