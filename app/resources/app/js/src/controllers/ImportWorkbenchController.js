"use strict";(self.webpackChunk_postman_app_renderer=self.webpackChunk_postman_app_renderer||[]).push([[168],{"../../packages/api-design/import/src/controllers/ImportWorkbenchController.js":function(e,t,i){i.r(t),i.d(t,{default:function(){return f}});var o,s,r,n,l,a=i("../../node_modules/mobx/lib/mobx.module.js"),p=i("../../node_modules/lodash/lodash.js"),c=i.n(p),d=i("./appsdk/workbench/BaseWorkbenchController.js"),m=i("./js/services/NavigationService.js"),u=i("./api-dev/services/APIDevService.js"),b=i("./js/stores/ActiveWorkspaceStore.js"),I=i("./js/stores/StoreManager.js"),h=i("./js/stores/TabUIStore.js"),g=i("../../packages/api-design/import/src/utils/NewrelicHelper.js"),A=i("../../packages/api-design/api-design-analytics/index.js");function E(e,t,i,o){i&&Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(o):void 0})}function v(e,t,i,o,s){var r={};return Object.keys(o).forEach((function(e){r[e]=o[e]})),r.enumerable=!!r.enumerable,r.configurable=!!r.configurable,("value"in r||r.initializer)&&(r.writable=!0),r=i.slice().reverse().reduce((function(i,o){return o(e,t,i)||i}),r),s&&void 0!==r.initializer&&(r.value=r.initializer?r.initializer.call(s):void 0,r.initializer=void 0),void 0===r.initializer&&(Object.defineProperty(e,t,r),r=null),r}let f=(o=class extends d.default{constructor(...e){super(...e),this.files=[],E(this,"isProcessingComplete",s,this),E(this,"shouldCloseTab",r,this),E(this,"areAPIElementsAdded",n,this),E(this,"areAllElementsImported",l,this),this.importElementEvents=[],this.importedAPIElements=[],this.importedNonAPIElements=[]}_setAllElementsImportFlag(e){this.areAllElementsImported=e}_setAPIElemetsAddedFlag(e){this.areAPIElementsAdded=e}_setFiles(e){this.files=e,this.isProcessingComplete=!0}_setImportedAPIElements(e){this.importedAPIElements=e,this._setAPIElemetsAddedFlag(c().get(e,"length",0)>0)}_setImportedNonAPIElements(e){this.importedNonAPIElements=e}isTabActive(){return(0,I.resolveStoreInstance)(h.default).activeTab===this.tabId}closeTab(){this.shouldCloseTab=!0,(0,A.logApiDesignAnalytics)({category:A.EVENT_CATEGORIES.IMPORT,action:A.EVENT_ACTIONS.IMPORT_ENTITIES_TAB_X})}didCreate(e){let t=c().get(e,"additionalContext.files");if(c().isEmpty(t))return m.default.transitionTo("build.import",{},{}),void this.closeTab();this._setAllElementsImportFlag(!1),this._setImportedAPIElements([]),this._setImportedNonAPIElements([]),this._setFiles(t)}subscribeToWorkspaceForAllAPIs(){var e;let t=null===(e=(0,I.resolveStoreInstance)(b.default))||void 0===e?void 0:e.id,i=Date.now();t&&(this.workspaceAPIsSubscription=u.default.getAllAPIRealtimeEvents(t).subscribe((async e=>{var t;let o=null==e?void 0:e.data;if("import"===(null==e||null===(t=e.meta)||void 0===t?void 0:t.action)&&"api-import-create-relation"===(null==o?void 0:o.task)&&("apiDefinition"===(null==o?void 0:o.relationType)||"unclassified"===(null==o?void 0:o.relationType))){(0,g.newrelicPageAction)("apiMetrics",{action:"importAPI",event:"api-import-create-relation-"+o.relationType,status:o.status,duration:Date.now()-i}),this.importElementEvents=[...this.importElementEvents,o],await(0,a.when)((()=>this.areAPIElementsAdded));const{failedElementCount:e,processedElementCount:t,totalElementCount:r}=this.getImportElementCount();if(t&&t===r){var s;if(this.isTabActive())this.navigateToImportComplete();else if(e===r){const t=1===e?"We weren’t able to import an element. ":"We weren’t able to import any elements. ";pm.toasts.error(t,{title:"Import failed",secondaryAction:{label:"Import Again",onClick:()=>{m.default.transitionTo("build.import",{},{})}},persist:!0,iconName:"icon-state-error-stroke",iconColor:"content-color-error"})}else if(t===r){const t=0===e?"All elements were imported.":`We were unable to import ${e} element${1===e?"":"s"}.`;pm.toasts.success(t,{title:"Import completed",secondaryAction:{label:"View import status",onClick:()=>{this.navigateToImportComplete()}},persist:!0,iconName:"icon-state-success-stroke",iconColor:"content-color-success"})}return null===(s=this.workspaceAPIsSubscription)||void 0===s||s.unsubscribe,this.workspaceAPIsSubscription.unsubscribe(),this.workspaceAPIsSubscription=null,void this._setAllElementsImportFlag(!0)}}}),(e=>pm.logger.warn("Failed to subscribe to workspace for all APIs",e))))}getImportStatusFromEvents(e,t){const i=c().find(this.importElementEvents,(i=>i.id===e&&i.relationType===t));return(null==i?void 0:i.status)||"processing"}getImportElementCount(){let e=0,t=0,i=0,o=this.importedAPIElements.length+this.importedNonAPIElements.length;return c().forEach(this.importedAPIElements,(o=>{const s=this.getImportStatusFromEvents(o.apiId,o.relationType);"completed"===s?(e++,i++):"failed"===s&&(t++,i++)})),c().forEach(this.importedNonAPIElements,(o=>{"completed"===o.status?(e++,i++):"failed"===o.status&&(t++,i++)})),{completedElementCount:e,failedElementCount:t,processedElementCount:i,totalElementCount:o}}navigateToImportComplete(){m.default.transitionTo("build.importEntitiesComplete",{},m.default.getActiveQueryParams().get(),{additionalContext:{importedElements:c().concat(c().map(this.importedAPIElements,(e=>c().assign({},e,{status:this.getImportStatusFromEvents(e.apiId,e.relationType)}))),this.importedNonAPIElements)},tabOptions:{openIn:this.tabId}})}},s=v(o.prototype,"isProcessingComplete",[a.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),r=v(o.prototype,"shouldCloseTab",[a.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),n=v(o.prototype,"areAPIElementsAdded",[a.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),l=v(o.prototype,"areAllElementsImported",[a.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),v(o.prototype,"_setAllElementsImportFlag",[a.action],Object.getOwnPropertyDescriptor(o.prototype,"_setAllElementsImportFlag"),o.prototype),v(o.prototype,"_setAPIElemetsAddedFlag",[a.action],Object.getOwnPropertyDescriptor(o.prototype,"_setAPIElemetsAddedFlag"),o.prototype),v(o.prototype,"_setFiles",[a.action],Object.getOwnPropertyDescriptor(o.prototype,"_setFiles"),o.prototype),v(o.prototype,"closeTab",[a.action],Object.getOwnPropertyDescriptor(o.prototype,"closeTab"),o.prototype),o)},"../../packages/api-design/import/src/utils/NewrelicHelper.js":function(e,t,i){i.r(t),i.d(t,{newrelicPageAction:function(){return r}});var o=i("./js/services/CurrentUserDetailsService.js"),s=i("../../node_modules/lodash/lodash.js");function r(e,t={}){let i={appVersion:window.APP_VERSION,userId:null,teamId:null};if("browser"===window.SDK_PLATFORM)i.userId=window.USER_ID,i.teamId=window.TEAM_ID;else{const e=o.default.getCurrentUserDetails()||{};i.userId=e.userId,i.teamId=e.teamId}t=Object.assign(i,t);try{s.has(window,"newrelic")&&s.isFunction(newrelic.addPageAction)&&newrelic.addPageAction(e,t)}catch(e){pm.logger.warn("Recording page action on newrelic failed",e)}}}}]);